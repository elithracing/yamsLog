// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "protocol.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace protobuf {

namespace {

const ::google::protobuf::Descriptor* GeneralMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GeneralMsg_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* GeneralMsg_SubType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* DataMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DataMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* DynamicEventStruct_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DynamicEventStruct_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetDynamicEventRequestMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetDynamicEventRequestMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetDynamicEventResponseMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetDynamicEventResponseMsg_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* SetDynamicEventResponseMsg_ResponseType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* DynamicEventMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DynamicEventMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* AttributeConfiguration_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AttributeConfiguration_reflection_ = NULL;
const ::google::protobuf::Descriptor* SensorConfiguration_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SensorConfiguration_reflection_ = NULL;
const ::google::protobuf::Descriptor* ConfigurationMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ConfigurationMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* SettingsRequestMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SettingsRequestMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* SettingsResponseMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SettingsResponseMsg_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* SettingsResponseMsg_ResponseType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* SensorStatusMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SensorStatusMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* SensorStatusMsg_Attribute_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SensorStatusMsg_Attribute_reflection_ = NULL;
const ::google::protobuf::Descriptor* SensorStatusMsg_Sensor_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SensorStatusMsg_Sensor_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* SensorStatusMsg_SensorStatusType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* SensorStatusMsg_AttributeStatusType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* StatusMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StatusMsg_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* StatusMsg_StatusType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CreateNewProjectRequestMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateNewProjectRequestMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateNewProjectResponseMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateNewProjectResponseMsg_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CreateNewProjectResponseMsg_ResponseType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* RenameProjectRequestMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RenameProjectRequestMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* RenameProjectResponseMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RenameProjectResponseMsg_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* RenameProjectResponseMsg_ResponseType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* RemoveProjectRequestMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RemoveProjectRequestMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* RemoveProjectResponseMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RemoveProjectResponseMsg_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* RemoveProjectResponseMsg_ResponseType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* SetActiveProjectRequestMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetActiveProjectRequestMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetActiveProjectResponseMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetActiveProjectResponseMsg_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* SetActiveProjectResponseMsg_ResponseType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ActiveProjectMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActiveProjectMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* ActiveExperimentMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActiveExperimentMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProjectListMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProjectListMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProjectMetadataStruct_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProjectMetadataStruct_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetProjectMetadataRequestMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetProjectMetadataRequestMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetProjectMetadataResponseMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetProjectMetadataResponseMsg_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* SetProjectMetadataResponseMsg_ResponseType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ProjectMetadataMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProjectMetadataMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExperimentDataCollectionStartRequestMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExperimentDataCollectionStartRequestMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExperimentDataCollectionStartResponseMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExperimentDataCollectionStartResponseMsg_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ExperimentDataCollectionStartResponseMsg_ResponseType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ExperimentDataCollectionStopRequestMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExperimentDataCollectionStopRequestMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExperimentDataCollectionStopResponseMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExperimentDataCollectionStopResponseMsg_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ExperimentDataCollectionStopResponseMsg_ResponseType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* RenameExperimentRequestMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RenameExperimentRequestMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* RenameExperimentResponseMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RenameExperimentResponseMsg_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* RenameExperimentResponseMsg_ResponseType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* RemoveExperimentRequestMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RemoveExperimentRequestMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* RemoveExperimentResponseMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RemoveExperimentResponseMsg_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* RemoveExperimentResponseMsg_ResponseType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ExperimentPlaybackStartRequestMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExperimentPlaybackStartRequestMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExperimentPlaybackStartResponseMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExperimentPlaybackStartResponseMsg_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ExperimentPlaybackStartResponseMsg_ResponseType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ExperimentPlaybackStopRequestMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExperimentPlaybackStopRequestMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExperimentPlaybackStopResponseMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExperimentPlaybackStopResponseMsg_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ExperimentPlaybackStopResponseMsg_ResponseType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ExperimentListMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExperimentListMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetExperimentMetadataRequestMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetExperimentMetadataRequestMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetExperimentMetadataResponseMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetExperimentMetadataResponseMsg_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* SetExperimentMetadataResponseMsg_ResponseType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ExperimentMetadataMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExperimentMetadataMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExperimentMetadataMsg_MetadataStruct_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExperimentMetadataMsg_MetadataStruct_reflection_ = NULL;
const ::google::protobuf::Descriptor* DebugMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DebugMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* ErrorMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ErrorMsg_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ErrorMsg_ErrorType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_protocol_2eproto() {
  protobuf_AddDesc_protocol_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "protocol.proto");
  GOOGLE_CHECK(file != NULL);
  GeneralMsg_descriptor_ = file->message_type(0);
  static const int GeneralMsg_offsets_[42] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMsg, sub_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMsg, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMsg, set_dynamic_event_request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMsg, set_dynamic_event_response_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMsg, dynamic_event_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMsg, configuration_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMsg, settings_request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMsg, settings_response_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMsg, sensor_status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMsg, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMsg, create_new_project_request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMsg, create_new_project_response_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMsg, rename_project_request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMsg, rename_project_response_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMsg, remove_project_request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMsg, remove_project_response_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMsg, set_active_project_request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMsg, set_active_project_response_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMsg, active_project_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMsg, project_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMsg, set_project_metadata_request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMsg, set_project_metadata_response_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMsg, project_metadata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMsg, experiment_data_collection_start_request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMsg, experiment_data_collection_start_response_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMsg, experiment_data_collection_stop_request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMsg, experiment_data_collection_stop_response_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMsg, rename_experiment_request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMsg, rename_experiment_response_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMsg, remove_experiment_request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMsg, remove_experiment_response_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMsg, experiment_playback_start_request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMsg, experiment_playback_start_response_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMsg, experiment_playback_stop_request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMsg, experiment_playback_stop_response_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMsg, experiment_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMsg, set_experiment_metadata_request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMsg, set_experiment_metadata_response_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMsg, experiment_metadata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMsg, debug_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMsg, error_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMsg, active_experiment_),
  };
  GeneralMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GeneralMsg_descriptor_,
      GeneralMsg::default_instance_,
      GeneralMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GeneralMsg));
  GeneralMsg_SubType_descriptor_ = GeneralMsg_descriptor_->enum_type(0);
  DataMsg_descriptor_ = file->message_type(1);
  static const int DataMsg_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataMsg, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataMsg, type_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataMsg, data_),
  };
  DataMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DataMsg_descriptor_,
      DataMsg::default_instance_,
      DataMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DataMsg));
  DynamicEventStruct_descriptor_ = file->message_type(2);
  static const int DynamicEventStruct_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DynamicEventStruct, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DynamicEventStruct, message_),
  };
  DynamicEventStruct_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DynamicEventStruct_descriptor_,
      DynamicEventStruct::default_instance_,
      DynamicEventStruct_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DynamicEventStruct, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DynamicEventStruct, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DynamicEventStruct));
  SetDynamicEventRequestMsg_descriptor_ = file->message_type(3);
  static const int SetDynamicEventRequestMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetDynamicEventRequestMsg, dynamic_event_),
  };
  SetDynamicEventRequestMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetDynamicEventRequestMsg_descriptor_,
      SetDynamicEventRequestMsg::default_instance_,
      SetDynamicEventRequestMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetDynamicEventRequestMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetDynamicEventRequestMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetDynamicEventRequestMsg));
  SetDynamicEventResponseMsg_descriptor_ = file->message_type(4);
  static const int SetDynamicEventResponseMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetDynamicEventResponseMsg, response_type_),
  };
  SetDynamicEventResponseMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetDynamicEventResponseMsg_descriptor_,
      SetDynamicEventResponseMsg::default_instance_,
      SetDynamicEventResponseMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetDynamicEventResponseMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetDynamicEventResponseMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetDynamicEventResponseMsg));
  SetDynamicEventResponseMsg_ResponseType_descriptor_ = SetDynamicEventResponseMsg_descriptor_->enum_type(0);
  DynamicEventMsg_descriptor_ = file->message_type(5);
  static const int DynamicEventMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DynamicEventMsg, dynamic_event_),
  };
  DynamicEventMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DynamicEventMsg_descriptor_,
      DynamicEventMsg::default_instance_,
      DynamicEventMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DynamicEventMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DynamicEventMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DynamicEventMsg));
  AttributeConfiguration_descriptor_ = file->message_type(6);
  static const int AttributeConfiguration_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeConfiguration, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeConfiguration, name_),
  };
  AttributeConfiguration_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AttributeConfiguration_descriptor_,
      AttributeConfiguration::default_instance_,
      AttributeConfiguration_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeConfiguration, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeConfiguration, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AttributeConfiguration));
  SensorConfiguration_descriptor_ = file->message_type(7);
  static const int SensorConfiguration_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SensorConfiguration, sensor_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SensorConfiguration, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SensorConfiguration, max_attributes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SensorConfiguration, attribute_configurations_),
  };
  SensorConfiguration_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SensorConfiguration_descriptor_,
      SensorConfiguration::default_instance_,
      SensorConfiguration_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SensorConfiguration, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SensorConfiguration, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SensorConfiguration));
  ConfigurationMsg_descriptor_ = file->message_type(8);
  static const int ConfigurationMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigurationMsg, sensor_configurations_),
  };
  ConfigurationMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ConfigurationMsg_descriptor_,
      ConfigurationMsg::default_instance_,
      ConfigurationMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigurationMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigurationMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ConfigurationMsg));
  SettingsRequestMsg_descriptor_ = file->message_type(9);
  static const int SettingsRequestMsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SettingsRequestMsg, min_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SettingsRequestMsg, sensor_ids_),
  };
  SettingsRequestMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SettingsRequestMsg_descriptor_,
      SettingsRequestMsg::default_instance_,
      SettingsRequestMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SettingsRequestMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SettingsRequestMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SettingsRequestMsg));
  SettingsResponseMsg_descriptor_ = file->message_type(10);
  static const int SettingsResponseMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SettingsResponseMsg, response_type_),
  };
  SettingsResponseMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SettingsResponseMsg_descriptor_,
      SettingsResponseMsg::default_instance_,
      SettingsResponseMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SettingsResponseMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SettingsResponseMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SettingsResponseMsg));
  SettingsResponseMsg_ResponseType_descriptor_ = SettingsResponseMsg_descriptor_->enum_type(0);
  SensorStatusMsg_descriptor_ = file->message_type(11);
  static const int SensorStatusMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SensorStatusMsg, sensors_),
  };
  SensorStatusMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SensorStatusMsg_descriptor_,
      SensorStatusMsg::default_instance_,
      SensorStatusMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SensorStatusMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SensorStatusMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SensorStatusMsg));
  SensorStatusMsg_Attribute_descriptor_ = SensorStatusMsg_descriptor_->nested_type(0);
  static const int SensorStatusMsg_Attribute_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SensorStatusMsg_Attribute, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SensorStatusMsg_Attribute, status_),
  };
  SensorStatusMsg_Attribute_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SensorStatusMsg_Attribute_descriptor_,
      SensorStatusMsg_Attribute::default_instance_,
      SensorStatusMsg_Attribute_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SensorStatusMsg_Attribute, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SensorStatusMsg_Attribute, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SensorStatusMsg_Attribute));
  SensorStatusMsg_Sensor_descriptor_ = SensorStatusMsg_descriptor_->nested_type(1);
  static const int SensorStatusMsg_Sensor_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SensorStatusMsg_Sensor, sensor_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SensorStatusMsg_Sensor, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SensorStatusMsg_Sensor, attributes_),
  };
  SensorStatusMsg_Sensor_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SensorStatusMsg_Sensor_descriptor_,
      SensorStatusMsg_Sensor::default_instance_,
      SensorStatusMsg_Sensor_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SensorStatusMsg_Sensor, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SensorStatusMsg_Sensor, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SensorStatusMsg_Sensor));
  SensorStatusMsg_SensorStatusType_descriptor_ = SensorStatusMsg_descriptor_->enum_type(0);
  SensorStatusMsg_AttributeStatusType_descriptor_ = SensorStatusMsg_descriptor_->enum_type(1);
  StatusMsg_descriptor_ = file->message_type(12);
  static const int StatusMsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StatusMsg, status_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StatusMsg, project_name_),
  };
  StatusMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StatusMsg_descriptor_,
      StatusMsg::default_instance_,
      StatusMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StatusMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StatusMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StatusMsg));
  StatusMsg_StatusType_descriptor_ = StatusMsg_descriptor_->enum_type(0);
  CreateNewProjectRequestMsg_descriptor_ = file->message_type(13);
  static const int CreateNewProjectRequestMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewProjectRequestMsg, name_),
  };
  CreateNewProjectRequestMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CreateNewProjectRequestMsg_descriptor_,
      CreateNewProjectRequestMsg::default_instance_,
      CreateNewProjectRequestMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewProjectRequestMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewProjectRequestMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CreateNewProjectRequestMsg));
  CreateNewProjectResponseMsg_descriptor_ = file->message_type(14);
  static const int CreateNewProjectResponseMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewProjectResponseMsg, response_type_),
  };
  CreateNewProjectResponseMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CreateNewProjectResponseMsg_descriptor_,
      CreateNewProjectResponseMsg::default_instance_,
      CreateNewProjectResponseMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewProjectResponseMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewProjectResponseMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CreateNewProjectResponseMsg));
  CreateNewProjectResponseMsg_ResponseType_descriptor_ = CreateNewProjectResponseMsg_descriptor_->enum_type(0);
  RenameProjectRequestMsg_descriptor_ = file->message_type(15);
  static const int RenameProjectRequestMsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RenameProjectRequestMsg, old_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RenameProjectRequestMsg, new_name_),
  };
  RenameProjectRequestMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RenameProjectRequestMsg_descriptor_,
      RenameProjectRequestMsg::default_instance_,
      RenameProjectRequestMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RenameProjectRequestMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RenameProjectRequestMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RenameProjectRequestMsg));
  RenameProjectResponseMsg_descriptor_ = file->message_type(16);
  static const int RenameProjectResponseMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RenameProjectResponseMsg, response_type_),
  };
  RenameProjectResponseMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RenameProjectResponseMsg_descriptor_,
      RenameProjectResponseMsg::default_instance_,
      RenameProjectResponseMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RenameProjectResponseMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RenameProjectResponseMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RenameProjectResponseMsg));
  RenameProjectResponseMsg_ResponseType_descriptor_ = RenameProjectResponseMsg_descriptor_->enum_type(0);
  RemoveProjectRequestMsg_descriptor_ = file->message_type(17);
  static const int RemoveProjectRequestMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveProjectRequestMsg, name_),
  };
  RemoveProjectRequestMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RemoveProjectRequestMsg_descriptor_,
      RemoveProjectRequestMsg::default_instance_,
      RemoveProjectRequestMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveProjectRequestMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveProjectRequestMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RemoveProjectRequestMsg));
  RemoveProjectResponseMsg_descriptor_ = file->message_type(18);
  static const int RemoveProjectResponseMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveProjectResponseMsg, response_type_),
  };
  RemoveProjectResponseMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RemoveProjectResponseMsg_descriptor_,
      RemoveProjectResponseMsg::default_instance_,
      RemoveProjectResponseMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveProjectResponseMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveProjectResponseMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RemoveProjectResponseMsg));
  RemoveProjectResponseMsg_ResponseType_descriptor_ = RemoveProjectResponseMsg_descriptor_->enum_type(0);
  SetActiveProjectRequestMsg_descriptor_ = file->message_type(19);
  static const int SetActiveProjectRequestMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetActiveProjectRequestMsg, name_),
  };
  SetActiveProjectRequestMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetActiveProjectRequestMsg_descriptor_,
      SetActiveProjectRequestMsg::default_instance_,
      SetActiveProjectRequestMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetActiveProjectRequestMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetActiveProjectRequestMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetActiveProjectRequestMsg));
  SetActiveProjectResponseMsg_descriptor_ = file->message_type(20);
  static const int SetActiveProjectResponseMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetActiveProjectResponseMsg, response_type_),
  };
  SetActiveProjectResponseMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetActiveProjectResponseMsg_descriptor_,
      SetActiveProjectResponseMsg::default_instance_,
      SetActiveProjectResponseMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetActiveProjectResponseMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetActiveProjectResponseMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetActiveProjectResponseMsg));
  SetActiveProjectResponseMsg_ResponseType_descriptor_ = SetActiveProjectResponseMsg_descriptor_->enum_type(0);
  ActiveProjectMsg_descriptor_ = file->message_type(21);
  static const int ActiveProjectMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActiveProjectMsg, name_),
  };
  ActiveProjectMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ActiveProjectMsg_descriptor_,
      ActiveProjectMsg::default_instance_,
      ActiveProjectMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActiveProjectMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActiveProjectMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ActiveProjectMsg));
  ActiveExperimentMsg_descriptor_ = file->message_type(22);
  static const int ActiveExperimentMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActiveExperimentMsg, name_),
  };
  ActiveExperimentMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ActiveExperimentMsg_descriptor_,
      ActiveExperimentMsg::default_instance_,
      ActiveExperimentMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActiveExperimentMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActiveExperimentMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ActiveExperimentMsg));
  ProjectListMsg_descriptor_ = file->message_type(23);
  static const int ProjectListMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectListMsg, projects_),
  };
  ProjectListMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProjectListMsg_descriptor_,
      ProjectListMsg::default_instance_,
      ProjectListMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectListMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectListMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProjectListMsg));
  ProjectMetadataStruct_descriptor_ = file->message_type(24);
  static const int ProjectMetadataStruct_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectMetadataStruct, test_leader_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectMetadataStruct, date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectMetadataStruct, email_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectMetadataStruct, member_names_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectMetadataStruct, tags_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectMetadataStruct, description_),
  };
  ProjectMetadataStruct_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProjectMetadataStruct_descriptor_,
      ProjectMetadataStruct::default_instance_,
      ProjectMetadataStruct_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectMetadataStruct, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectMetadataStruct, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProjectMetadataStruct));
  SetProjectMetadataRequestMsg_descriptor_ = file->message_type(25);
  static const int SetProjectMetadataRequestMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetProjectMetadataRequestMsg, metadata_),
  };
  SetProjectMetadataRequestMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetProjectMetadataRequestMsg_descriptor_,
      SetProjectMetadataRequestMsg::default_instance_,
      SetProjectMetadataRequestMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetProjectMetadataRequestMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetProjectMetadataRequestMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetProjectMetadataRequestMsg));
  SetProjectMetadataResponseMsg_descriptor_ = file->message_type(26);
  static const int SetProjectMetadataResponseMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetProjectMetadataResponseMsg, response_type_),
  };
  SetProjectMetadataResponseMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetProjectMetadataResponseMsg_descriptor_,
      SetProjectMetadataResponseMsg::default_instance_,
      SetProjectMetadataResponseMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetProjectMetadataResponseMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetProjectMetadataResponseMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetProjectMetadataResponseMsg));
  SetProjectMetadataResponseMsg_ResponseType_descriptor_ = SetProjectMetadataResponseMsg_descriptor_->enum_type(0);
  ProjectMetadataMsg_descriptor_ = file->message_type(27);
  static const int ProjectMetadataMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectMetadataMsg, metadata_),
  };
  ProjectMetadataMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProjectMetadataMsg_descriptor_,
      ProjectMetadataMsg::default_instance_,
      ProjectMetadataMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectMetadataMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectMetadataMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProjectMetadataMsg));
  ExperimentDataCollectionStartRequestMsg_descriptor_ = file->message_type(28);
  static const int ExperimentDataCollectionStartRequestMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExperimentDataCollectionStartRequestMsg, name_),
  };
  ExperimentDataCollectionStartRequestMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ExperimentDataCollectionStartRequestMsg_descriptor_,
      ExperimentDataCollectionStartRequestMsg::default_instance_,
      ExperimentDataCollectionStartRequestMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExperimentDataCollectionStartRequestMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExperimentDataCollectionStartRequestMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ExperimentDataCollectionStartRequestMsg));
  ExperimentDataCollectionStartResponseMsg_descriptor_ = file->message_type(29);
  static const int ExperimentDataCollectionStartResponseMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExperimentDataCollectionStartResponseMsg, response_type_),
  };
  ExperimentDataCollectionStartResponseMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ExperimentDataCollectionStartResponseMsg_descriptor_,
      ExperimentDataCollectionStartResponseMsg::default_instance_,
      ExperimentDataCollectionStartResponseMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExperimentDataCollectionStartResponseMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExperimentDataCollectionStartResponseMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ExperimentDataCollectionStartResponseMsg));
  ExperimentDataCollectionStartResponseMsg_ResponseType_descriptor_ = ExperimentDataCollectionStartResponseMsg_descriptor_->enum_type(0);
  ExperimentDataCollectionStopRequestMsg_descriptor_ = file->message_type(30);
  static const int ExperimentDataCollectionStopRequestMsg_offsets_[1] = {
  };
  ExperimentDataCollectionStopRequestMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ExperimentDataCollectionStopRequestMsg_descriptor_,
      ExperimentDataCollectionStopRequestMsg::default_instance_,
      ExperimentDataCollectionStopRequestMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExperimentDataCollectionStopRequestMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExperimentDataCollectionStopRequestMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ExperimentDataCollectionStopRequestMsg));
  ExperimentDataCollectionStopResponseMsg_descriptor_ = file->message_type(31);
  static const int ExperimentDataCollectionStopResponseMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExperimentDataCollectionStopResponseMsg, response_type_),
  };
  ExperimentDataCollectionStopResponseMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ExperimentDataCollectionStopResponseMsg_descriptor_,
      ExperimentDataCollectionStopResponseMsg::default_instance_,
      ExperimentDataCollectionStopResponseMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExperimentDataCollectionStopResponseMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExperimentDataCollectionStopResponseMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ExperimentDataCollectionStopResponseMsg));
  ExperimentDataCollectionStopResponseMsg_ResponseType_descriptor_ = ExperimentDataCollectionStopResponseMsg_descriptor_->enum_type(0);
  RenameExperimentRequestMsg_descriptor_ = file->message_type(32);
  static const int RenameExperimentRequestMsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RenameExperimentRequestMsg, old_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RenameExperimentRequestMsg, new_name_),
  };
  RenameExperimentRequestMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RenameExperimentRequestMsg_descriptor_,
      RenameExperimentRequestMsg::default_instance_,
      RenameExperimentRequestMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RenameExperimentRequestMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RenameExperimentRequestMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RenameExperimentRequestMsg));
  RenameExperimentResponseMsg_descriptor_ = file->message_type(33);
  static const int RenameExperimentResponseMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RenameExperimentResponseMsg, response_type_),
  };
  RenameExperimentResponseMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RenameExperimentResponseMsg_descriptor_,
      RenameExperimentResponseMsg::default_instance_,
      RenameExperimentResponseMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RenameExperimentResponseMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RenameExperimentResponseMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RenameExperimentResponseMsg));
  RenameExperimentResponseMsg_ResponseType_descriptor_ = RenameExperimentResponseMsg_descriptor_->enum_type(0);
  RemoveExperimentRequestMsg_descriptor_ = file->message_type(34);
  static const int RemoveExperimentRequestMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveExperimentRequestMsg, name_),
  };
  RemoveExperimentRequestMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RemoveExperimentRequestMsg_descriptor_,
      RemoveExperimentRequestMsg::default_instance_,
      RemoveExperimentRequestMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveExperimentRequestMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveExperimentRequestMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RemoveExperimentRequestMsg));
  RemoveExperimentResponseMsg_descriptor_ = file->message_type(35);
  static const int RemoveExperimentResponseMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveExperimentResponseMsg, response_type_),
  };
  RemoveExperimentResponseMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RemoveExperimentResponseMsg_descriptor_,
      RemoveExperimentResponseMsg::default_instance_,
      RemoveExperimentResponseMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveExperimentResponseMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveExperimentResponseMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RemoveExperimentResponseMsg));
  RemoveExperimentResponseMsg_ResponseType_descriptor_ = RemoveExperimentResponseMsg_descriptor_->enum_type(0);
  ExperimentPlaybackStartRequestMsg_descriptor_ = file->message_type(36);
  static const int ExperimentPlaybackStartRequestMsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExperimentPlaybackStartRequestMsg, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExperimentPlaybackStartRequestMsg, sensor_ids_),
  };
  ExperimentPlaybackStartRequestMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ExperimentPlaybackStartRequestMsg_descriptor_,
      ExperimentPlaybackStartRequestMsg::default_instance_,
      ExperimentPlaybackStartRequestMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExperimentPlaybackStartRequestMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExperimentPlaybackStartRequestMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ExperimentPlaybackStartRequestMsg));
  ExperimentPlaybackStartResponseMsg_descriptor_ = file->message_type(37);
  static const int ExperimentPlaybackStartResponseMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExperimentPlaybackStartResponseMsg, response_type_),
  };
  ExperimentPlaybackStartResponseMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ExperimentPlaybackStartResponseMsg_descriptor_,
      ExperimentPlaybackStartResponseMsg::default_instance_,
      ExperimentPlaybackStartResponseMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExperimentPlaybackStartResponseMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExperimentPlaybackStartResponseMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ExperimentPlaybackStartResponseMsg));
  ExperimentPlaybackStartResponseMsg_ResponseType_descriptor_ = ExperimentPlaybackStartResponseMsg_descriptor_->enum_type(0);
  ExperimentPlaybackStopRequestMsg_descriptor_ = file->message_type(38);
  static const int ExperimentPlaybackStopRequestMsg_offsets_[1] = {
  };
  ExperimentPlaybackStopRequestMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ExperimentPlaybackStopRequestMsg_descriptor_,
      ExperimentPlaybackStopRequestMsg::default_instance_,
      ExperimentPlaybackStopRequestMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExperimentPlaybackStopRequestMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExperimentPlaybackStopRequestMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ExperimentPlaybackStopRequestMsg));
  ExperimentPlaybackStopResponseMsg_descriptor_ = file->message_type(39);
  static const int ExperimentPlaybackStopResponseMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExperimentPlaybackStopResponseMsg, response_type_),
  };
  ExperimentPlaybackStopResponseMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ExperimentPlaybackStopResponseMsg_descriptor_,
      ExperimentPlaybackStopResponseMsg::default_instance_,
      ExperimentPlaybackStopResponseMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExperimentPlaybackStopResponseMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExperimentPlaybackStopResponseMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ExperimentPlaybackStopResponseMsg));
  ExperimentPlaybackStopResponseMsg_ResponseType_descriptor_ = ExperimentPlaybackStopResponseMsg_descriptor_->enum_type(0);
  ExperimentListMsg_descriptor_ = file->message_type(40);
  static const int ExperimentListMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExperimentListMsg, names_),
  };
  ExperimentListMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ExperimentListMsg_descriptor_,
      ExperimentListMsg::default_instance_,
      ExperimentListMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExperimentListMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExperimentListMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ExperimentListMsg));
  SetExperimentMetadataRequestMsg_descriptor_ = file->message_type(41);
  static const int SetExperimentMetadataRequestMsg_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetExperimentMetadataRequestMsg, experiment_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetExperimentMetadataRequestMsg, tags_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetExperimentMetadataRequestMsg, notes_),
  };
  SetExperimentMetadataRequestMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetExperimentMetadataRequestMsg_descriptor_,
      SetExperimentMetadataRequestMsg::default_instance_,
      SetExperimentMetadataRequestMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetExperimentMetadataRequestMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetExperimentMetadataRequestMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetExperimentMetadataRequestMsg));
  SetExperimentMetadataResponseMsg_descriptor_ = file->message_type(42);
  static const int SetExperimentMetadataResponseMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetExperimentMetadataResponseMsg, response_type_),
  };
  SetExperimentMetadataResponseMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetExperimentMetadataResponseMsg_descriptor_,
      SetExperimentMetadataResponseMsg::default_instance_,
      SetExperimentMetadataResponseMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetExperimentMetadataResponseMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetExperimentMetadataResponseMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetExperimentMetadataResponseMsg));
  SetExperimentMetadataResponseMsg_ResponseType_descriptor_ = SetExperimentMetadataResponseMsg_descriptor_->enum_type(0);
  ExperimentMetadataMsg_descriptor_ = file->message_type(43);
  static const int ExperimentMetadataMsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExperimentMetadataMsg, experiment_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExperimentMetadataMsg, metadata_),
  };
  ExperimentMetadataMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ExperimentMetadataMsg_descriptor_,
      ExperimentMetadataMsg::default_instance_,
      ExperimentMetadataMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExperimentMetadataMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExperimentMetadataMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ExperimentMetadataMsg));
  ExperimentMetadataMsg_MetadataStruct_descriptor_ = ExperimentMetadataMsg_descriptor_->nested_type(0);
  static const int ExperimentMetadataMsg_MetadataStruct_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExperimentMetadataMsg_MetadataStruct, tags_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExperimentMetadataMsg_MetadataStruct, notes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExperimentMetadataMsg_MetadataStruct, sensor_configurations_),
  };
  ExperimentMetadataMsg_MetadataStruct_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ExperimentMetadataMsg_MetadataStruct_descriptor_,
      ExperimentMetadataMsg_MetadataStruct::default_instance_,
      ExperimentMetadataMsg_MetadataStruct_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExperimentMetadataMsg_MetadataStruct, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExperimentMetadataMsg_MetadataStruct, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ExperimentMetadataMsg_MetadataStruct));
  DebugMsg_descriptor_ = file->message_type(44);
  static const int DebugMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DebugMsg, debug_message_),
  };
  DebugMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DebugMsg_descriptor_,
      DebugMsg::default_instance_,
      DebugMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DebugMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DebugMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DebugMsg));
  ErrorMsg_descriptor_ = file->message_type(45);
  static const int ErrorMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorMsg, error_type_),
  };
  ErrorMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ErrorMsg_descriptor_,
      ErrorMsg::default_instance_,
      ErrorMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ErrorMsg));
  ErrorMsg_ErrorType_descriptor_ = ErrorMsg_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_protocol_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GeneralMsg_descriptor_, &GeneralMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DataMsg_descriptor_, &DataMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DynamicEventStruct_descriptor_, &DynamicEventStruct::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetDynamicEventRequestMsg_descriptor_, &SetDynamicEventRequestMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetDynamicEventResponseMsg_descriptor_, &SetDynamicEventResponseMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DynamicEventMsg_descriptor_, &DynamicEventMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AttributeConfiguration_descriptor_, &AttributeConfiguration::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SensorConfiguration_descriptor_, &SensorConfiguration::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ConfigurationMsg_descriptor_, &ConfigurationMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SettingsRequestMsg_descriptor_, &SettingsRequestMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SettingsResponseMsg_descriptor_, &SettingsResponseMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SensorStatusMsg_descriptor_, &SensorStatusMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SensorStatusMsg_Attribute_descriptor_, &SensorStatusMsg_Attribute::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SensorStatusMsg_Sensor_descriptor_, &SensorStatusMsg_Sensor::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StatusMsg_descriptor_, &StatusMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CreateNewProjectRequestMsg_descriptor_, &CreateNewProjectRequestMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CreateNewProjectResponseMsg_descriptor_, &CreateNewProjectResponseMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RenameProjectRequestMsg_descriptor_, &RenameProjectRequestMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RenameProjectResponseMsg_descriptor_, &RenameProjectResponseMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RemoveProjectRequestMsg_descriptor_, &RemoveProjectRequestMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RemoveProjectResponseMsg_descriptor_, &RemoveProjectResponseMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetActiveProjectRequestMsg_descriptor_, &SetActiveProjectRequestMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetActiveProjectResponseMsg_descriptor_, &SetActiveProjectResponseMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ActiveProjectMsg_descriptor_, &ActiveProjectMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ActiveExperimentMsg_descriptor_, &ActiveExperimentMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProjectListMsg_descriptor_, &ProjectListMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProjectMetadataStruct_descriptor_, &ProjectMetadataStruct::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetProjectMetadataRequestMsg_descriptor_, &SetProjectMetadataRequestMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetProjectMetadataResponseMsg_descriptor_, &SetProjectMetadataResponseMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProjectMetadataMsg_descriptor_, &ProjectMetadataMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ExperimentDataCollectionStartRequestMsg_descriptor_, &ExperimentDataCollectionStartRequestMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ExperimentDataCollectionStartResponseMsg_descriptor_, &ExperimentDataCollectionStartResponseMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ExperimentDataCollectionStopRequestMsg_descriptor_, &ExperimentDataCollectionStopRequestMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ExperimentDataCollectionStopResponseMsg_descriptor_, &ExperimentDataCollectionStopResponseMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RenameExperimentRequestMsg_descriptor_, &RenameExperimentRequestMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RenameExperimentResponseMsg_descriptor_, &RenameExperimentResponseMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RemoveExperimentRequestMsg_descriptor_, &RemoveExperimentRequestMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RemoveExperimentResponseMsg_descriptor_, &RemoveExperimentResponseMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ExperimentPlaybackStartRequestMsg_descriptor_, &ExperimentPlaybackStartRequestMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ExperimentPlaybackStartResponseMsg_descriptor_, &ExperimentPlaybackStartResponseMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ExperimentPlaybackStopRequestMsg_descriptor_, &ExperimentPlaybackStopRequestMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ExperimentPlaybackStopResponseMsg_descriptor_, &ExperimentPlaybackStopResponseMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ExperimentListMsg_descriptor_, &ExperimentListMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetExperimentMetadataRequestMsg_descriptor_, &SetExperimentMetadataRequestMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetExperimentMetadataResponseMsg_descriptor_, &SetExperimentMetadataResponseMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ExperimentMetadataMsg_descriptor_, &ExperimentMetadataMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ExperimentMetadataMsg_MetadataStruct_descriptor_, &ExperimentMetadataMsg_MetadataStruct::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DebugMsg_descriptor_, &DebugMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ErrorMsg_descriptor_, &ErrorMsg::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_protocol_2eproto() {
  delete GeneralMsg::default_instance_;
  delete GeneralMsg_reflection_;
  delete DataMsg::default_instance_;
  delete DataMsg_reflection_;
  delete DynamicEventStruct::default_instance_;
  delete DynamicEventStruct_reflection_;
  delete SetDynamicEventRequestMsg::default_instance_;
  delete SetDynamicEventRequestMsg_reflection_;
  delete SetDynamicEventResponseMsg::default_instance_;
  delete SetDynamicEventResponseMsg_reflection_;
  delete DynamicEventMsg::default_instance_;
  delete DynamicEventMsg_reflection_;
  delete AttributeConfiguration::default_instance_;
  delete AttributeConfiguration_reflection_;
  delete SensorConfiguration::default_instance_;
  delete SensorConfiguration_reflection_;
  delete ConfigurationMsg::default_instance_;
  delete ConfigurationMsg_reflection_;
  delete SettingsRequestMsg::default_instance_;
  delete SettingsRequestMsg_reflection_;
  delete SettingsResponseMsg::default_instance_;
  delete SettingsResponseMsg_reflection_;
  delete SensorStatusMsg::default_instance_;
  delete SensorStatusMsg_reflection_;
  delete SensorStatusMsg_Attribute::default_instance_;
  delete SensorStatusMsg_Attribute_reflection_;
  delete SensorStatusMsg_Sensor::default_instance_;
  delete SensorStatusMsg_Sensor_reflection_;
  delete StatusMsg::default_instance_;
  delete StatusMsg_reflection_;
  delete CreateNewProjectRequestMsg::default_instance_;
  delete CreateNewProjectRequestMsg_reflection_;
  delete CreateNewProjectResponseMsg::default_instance_;
  delete CreateNewProjectResponseMsg_reflection_;
  delete RenameProjectRequestMsg::default_instance_;
  delete RenameProjectRequestMsg_reflection_;
  delete RenameProjectResponseMsg::default_instance_;
  delete RenameProjectResponseMsg_reflection_;
  delete RemoveProjectRequestMsg::default_instance_;
  delete RemoveProjectRequestMsg_reflection_;
  delete RemoveProjectResponseMsg::default_instance_;
  delete RemoveProjectResponseMsg_reflection_;
  delete SetActiveProjectRequestMsg::default_instance_;
  delete SetActiveProjectRequestMsg_reflection_;
  delete SetActiveProjectResponseMsg::default_instance_;
  delete SetActiveProjectResponseMsg_reflection_;
  delete ActiveProjectMsg::default_instance_;
  delete ActiveProjectMsg_reflection_;
  delete ActiveExperimentMsg::default_instance_;
  delete ActiveExperimentMsg_reflection_;
  delete ProjectListMsg::default_instance_;
  delete ProjectListMsg_reflection_;
  delete ProjectMetadataStruct::default_instance_;
  delete ProjectMetadataStruct_reflection_;
  delete SetProjectMetadataRequestMsg::default_instance_;
  delete SetProjectMetadataRequestMsg_reflection_;
  delete SetProjectMetadataResponseMsg::default_instance_;
  delete SetProjectMetadataResponseMsg_reflection_;
  delete ProjectMetadataMsg::default_instance_;
  delete ProjectMetadataMsg_reflection_;
  delete ExperimentDataCollectionStartRequestMsg::default_instance_;
  delete ExperimentDataCollectionStartRequestMsg_reflection_;
  delete ExperimentDataCollectionStartResponseMsg::default_instance_;
  delete ExperimentDataCollectionStartResponseMsg_reflection_;
  delete ExperimentDataCollectionStopRequestMsg::default_instance_;
  delete ExperimentDataCollectionStopRequestMsg_reflection_;
  delete ExperimentDataCollectionStopResponseMsg::default_instance_;
  delete ExperimentDataCollectionStopResponseMsg_reflection_;
  delete RenameExperimentRequestMsg::default_instance_;
  delete RenameExperimentRequestMsg_reflection_;
  delete RenameExperimentResponseMsg::default_instance_;
  delete RenameExperimentResponseMsg_reflection_;
  delete RemoveExperimentRequestMsg::default_instance_;
  delete RemoveExperimentRequestMsg_reflection_;
  delete RemoveExperimentResponseMsg::default_instance_;
  delete RemoveExperimentResponseMsg_reflection_;
  delete ExperimentPlaybackStartRequestMsg::default_instance_;
  delete ExperimentPlaybackStartRequestMsg_reflection_;
  delete ExperimentPlaybackStartResponseMsg::default_instance_;
  delete ExperimentPlaybackStartResponseMsg_reflection_;
  delete ExperimentPlaybackStopRequestMsg::default_instance_;
  delete ExperimentPlaybackStopRequestMsg_reflection_;
  delete ExperimentPlaybackStopResponseMsg::default_instance_;
  delete ExperimentPlaybackStopResponseMsg_reflection_;
  delete ExperimentListMsg::default_instance_;
  delete ExperimentListMsg_reflection_;
  delete SetExperimentMetadataRequestMsg::default_instance_;
  delete SetExperimentMetadataRequestMsg_reflection_;
  delete SetExperimentMetadataResponseMsg::default_instance_;
  delete SetExperimentMetadataResponseMsg_reflection_;
  delete ExperimentMetadataMsg::default_instance_;
  delete ExperimentMetadataMsg_reflection_;
  delete ExperimentMetadataMsg_MetadataStruct::default_instance_;
  delete ExperimentMetadataMsg_MetadataStruct_reflection_;
  delete DebugMsg::default_instance_;
  delete DebugMsg_reflection_;
  delete ErrorMsg::default_instance_;
  delete ErrorMsg_reflection_;
}

void protobuf_AddDesc_protocol_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016protocol.proto\022\010protobuf\"\343 \n\nGeneralMs"
    "g\022.\n\010sub_type\030\001 \002(\0162\034.protobuf.GeneralMs"
    "g.SubType\022\037\n\004data\030\002 \001(\0132\021.protobuf.DataM"
    "sg\022F\n\031set_dynamic_event_request\030\003 \001(\0132#."
    "protobuf.SetDynamicEventRequestMsg\022H\n\032se"
    "t_dynamic_event_response\030\004 \001(\0132$.protobu"
    "f.SetDynamicEventResponseMsg\0220\n\rdynamic_"
    "event\030\005 \001(\0132\031.protobuf.DynamicEventMsg\0221"
    "\n\rconfiguration\030\006 \001(\0132\032.protobuf.Configu"
    "rationMsg\0226\n\020settings_request\030\007 \001(\0132\034.pr"
    "otobuf.SettingsRequestMsg\0228\n\021settings_re"
    "sponse\030\010 \001(\0132\035.protobuf.SettingsResponse"
    "Msg\0220\n\rsensor_status\030\t \001(\0132\031.protobuf.Se"
    "nsorStatusMsg\022#\n\006status\030\n \001(\0132\023.protobuf"
    ".StatusMsg\022H\n\032create_new_project_request"
    "\030\013 \001(\0132$.protobuf.CreateNewProjectReques"
    "tMsg\022J\n\033create_new_project_response\030\014 \001("
    "\0132%.protobuf.CreateNewProjectResponseMsg"
    "\022A\n\026rename_project_request\030\r \001(\0132!.proto"
    "buf.RenameProjectRequestMsg\022C\n\027rename_pr"
    "oject_response\030\016 \001(\0132\".protobuf.RenamePr"
    "ojectResponseMsg\022A\n\026remove_project_reque"
    "st\030\017 \001(\0132!.protobuf.RemoveProjectRequest"
    "Msg\022C\n\027remove_project_response\030\020 \001(\0132\".p"
    "rotobuf.RemoveProjectResponseMsg\022H\n\032set_"
    "active_project_request\030\021 \001(\0132$.protobuf."
    "SetActiveProjectRequestMsg\022J\n\033set_active"
    "_project_response\030\022 \001(\0132%.protobuf.SetAc"
    "tiveProjectResponseMsg\0222\n\016active_project"
    "\030\023 \001(\0132\032.protobuf.ActiveProjectMsg\022.\n\014pr"
    "oject_list\030\024 \001(\0132\030.protobuf.ProjectListM"
    "sg\022L\n\034set_project_metadata_request\030\025 \001(\013"
    "2&.protobuf.SetProjectMetadataRequestMsg"
    "\022N\n\035set_project_metadata_response\030\026 \001(\0132"
    "\'.protobuf.SetProjectMetadataResponseMsg"
    "\0226\n\020project_metadata\030\027 \001(\0132\034.protobuf.Pr"
    "ojectMetadataMsg\022c\n(experiment_data_coll"
    "ection_start_request\030\030 \001(\01321.protobuf.Ex"
    "perimentDataCollectionStartRequestMsg\022e\n"
    ")experiment_data_collection_start_respon"
    "se\030\031 \001(\01322.protobuf.ExperimentDataCollec"
    "tionStartResponseMsg\022a\n\'experiment_data_"
    "collection_stop_request\030\032 \001(\01320.protobuf"
    ".ExperimentDataCollectionStopRequestMsg\022"
    "c\n(experiment_data_collection_stop_respo"
    "nse\030\033 \001(\01321.protobuf.ExperimentDataColle"
    "ctionStopResponseMsg\022G\n\031rename_experimen"
    "t_request\030\034 \001(\0132$.protobuf.RenameExperim"
    "entRequestMsg\022I\n\032rename_experiment_respo"
    "nse\030\035 \001(\0132%.protobuf.RenameExperimentRes"
    "ponseMsg\022G\n\031remove_experiment_request\030\036 "
    "\001(\0132$.protobuf.RemoveExperimentRequestMs"
    "g\022I\n\032remove_experiment_response\030\037 \001(\0132%."
    "protobuf.RemoveExperimentResponseMsg\022V\n!"
    "experiment_playback_start_request\030  \001(\0132"
    "+.protobuf.ExperimentPlaybackStartReques"
    "tMsg\022X\n\"experiment_playback_start_respon"
    "se\030! \001(\0132,.protobuf.ExperimentPlaybackSt"
    "artResponseMsg\022T\n experiment_playback_st"
    "op_request\030\" \001(\0132*.protobuf.ExperimentPl"
    "aybackStopRequestMsg\022V\n!experiment_playb"
    "ack_stop_response\030# \001(\0132+.protobuf.Exper"
    "imentPlaybackStopResponseMsg\0224\n\017experime"
    "nt_list\030$ \001(\0132\033.protobuf.ExperimentListM"
    "sg\022R\n\037set_experiment_metadata_request\030% "
    "\001(\0132).protobuf.SetExperimentMetadataRequ"
    "estMsg\022T\n set_experiment_metadata_respon"
    "se\030& \001(\0132*.protobuf.SetExperimentMetadat"
    "aResponseMsg\022<\n\023experiment_metadata\030\' \001("
    "\0132\037.protobuf.ExperimentMetadataMsg\022)\n\rde"
    "bug_message\030( \001(\0132\022.protobuf.DebugMsg\022)\n"
    "\rerror_message\030) \001(\0132\022.protobuf.ErrorMsg"
    "\0228\n\021active_experiment\030* \001(\0132\035.protobuf.A"
    "ctiveExperimentMsg\"\203\n\n\007SubType\022\n\n\006DATA_T"
    "\020\001\022\037\n\033SET_DYNAMIC_EVENT_REQUEST_T\020\002\022 \n\034S"
    "ET_DYNAMIC_EVENT_RESPONSE_T\020\003\022\023\n\017DYNAMIC"
    "_EVENT_T\020\004\022\023\n\017CONFIGURATION_T\020\005\022\026\n\022SETTI"
    "NGS_REQUEST_T\020\006\022\027\n\023SETTINGS_RESPONSE_T\020\007"
    "\022\023\n\017SENSOR_STATUS_T\020\010\022\014\n\010STATUS_T\020\t\022 \n\034C"
    "REATE_NEW_PROJECT_REQUEST_T\020\n\022!\n\035CREATE_"
    "NEW_PROJECT_RESPONSE_T\020\013\022\034\n\030RENAME_PROJE"
    "CT_REQUEST_T\020\014\022\035\n\031RENAME_PROJECT_RESPONS"
    "E_T\020\r\022\034\n\030REMOVE_PROJECT_REQUEST_T\020\016\022\035\n\031R"
    "EMOVE_PROJECT_RESPONSE_T\020\017\022 \n\034SET_ACTIVE"
    "_PROJECT_REQUEST_T\020\020\022!\n\035SET_ACTIVE_PROJE"
    "CT_RESPONSE_T\020\021\022\024\n\020ACTIVE_PROJECT_T\020\022\022\022\n"
    "\016PROJECT_LIST_T\020\023\022\"\n\036SET_PROJECT_METADAT"
    "A_REQUEST_T\020\024\022#\n\037SET_PROJECT_METADATA_RE"
    "SPONSE_T\020\025\022\026\n\022PROJECT_METADATA_T\020\026\022.\n*EX"
    "PERIMENT_DATA_COLLECTION_START_REQUEST_T"
    "\020\027\022/\n+EXPERIMENT_DATA_COLLECTION_START_R"
    "ESPONSE_T\020\030\022-\n)EXPERIMENT_DATA_COLLECTIO"
    "N_STOP_REQUEST_T\020\031\022.\n*EXPERIMENT_DATA_CO"
    "LLECTION_STOP_RESPONSE_T\020\032\022\037\n\033RENAME_EXP"
    "ERIMENT_REQUEST_T\020\033\022 \n\034RENAME_EXPERIMENT"
    "_RESPONSE_T\020\034\022\037\n\033REMOVE_EXPERIMENT_REQUE"
    "ST_T\020\035\022 \n\034REMOVE_EXPERIMENT_RESPONSE_T\020\036"
    "\022\'\n#EXPERIMENT_PLAYBACK_START_REQUEST_T\020"
    "\037\022(\n$EXPERIMENT_PLAYBACK_START_RESPONSE_"
    "T\020 \022&\n\"EXPERIMENT_PLAYBACK_STOP_REQUEST_"
    "T\020!\022\'\n#EXPERIMENT_PLAYBACK_STOP_RESPONSE"
    "_T\020\"\022\025\n\021EXPERIMENT_LIST_T\020#\022%\n!SET_EXPER"
    "IMENT_METADATA_REQUEST_T\020$\022&\n\"SET_EXPERI"
    "MENT_METADATA_RESPONSE_T\020%\022\031\n\025EXPERIMENT"
    "_METADATA_T\020&\022\013\n\007DEBUG_T\020\'\022\013\n\007ERROR_T\020(\022"
    "\027\n\023ACTIVE_EXPERIMENT_T\020)\"6\n\007DataMsg\022\014\n\004t"
    "ime\030\001 \002(\001\022\017\n\007type_id\030\002 \002(\005\022\014\n\004data\030\003 \003(\002"
    "\"3\n\022DynamicEventStruct\022\014\n\004time\030\001 \002(\001\022\017\n\007"
    "message\030\002 \002(\t\"P\n\031SetDynamicEventRequestM"
    "sg\0223\n\rdynamic_event\030\001 \002(\0132\034.protobuf.Dyn"
    "amicEventStruct\"\336\001\n\032SetDynamicEventRespo"
    "nseMsg\022H\n\rresponse_type\030\001 \002(\01621.protobuf"
    ".SetDynamicEventResponseMsg.ResponseType"
    "\"v\n\014ResponseType\022\013\n\007SUCCESS\020\001\022\020\n\014ILLEGAL"
    "_TIME\020\002\022\025\n\021NO_ACTIVE_PROJECT\020\003\022\037\n\033NOT_IN"
    "_DATA_COLLECTION_MODE\020\004\022\017\n\013OTHER_ERROR\020\005"
    "\"F\n\017DynamicEventMsg\0223\n\rdynamic_event\030\001 \002"
    "(\0132\034.protobuf.DynamicEventStruct\"5\n\026Attr"
    "ibuteConfiguration\022\r\n\005index\030\001 \002(\r\022\014\n\004nam"
    "e\030\002 \002(\t\"\222\001\n\023SensorConfiguration\022\021\n\tsenso"
    "r_id\030\001 \002(\005\022\014\n\004name\030\002 \002(\t\022\026\n\016max_attribut"
    "es\030\003 \002(\r\022B\n\030attribute_configurations\030\004 \003"
    "(\0132 .protobuf.AttributeConfiguration\"P\n\020"
    "ConfigurationMsg\022<\n\025sensor_configuration"
    "s\030\001 \003(\0132\035.protobuf.SensorConfiguration\":"
    "\n\022SettingsRequestMsg\022\020\n\010min_time\030\001 \002(\r\022\022"
    "\n\nsensor_ids\030\002 \003(\005\"\235\001\n\023SettingsResponseM"
    "sg\022A\n\rresponse_type\030\001 \002(\0162*.protobuf.Set"
    "tingsResponseMsg.ResponseType\"C\n\014Respons"
    "eType\022\013\n\007SUCCESS\020\001\022\025\n\021ILLEGAL_SENSOR_ID\020"
    "\002\022\017\n\013OTHER_ERROR\020\003\"\242\003\n\017SensorStatusMsg\0221"
    "\n\007sensors\030\001 \003(\0132 .protobuf.SensorStatusM"
    "sg.Sensor\032Y\n\tAttribute\022\r\n\005index\030\001 \002(\r\022=\n"
    "\006status\030\002 \002(\0162-.protobuf.SensorStatusMsg"
    ".AttributeStatusType\032\220\001\n\006Sensor\022\021\n\tsenso"
    "r_id\030\001 \002(\005\022:\n\006status\030\002 \002(\0162*.protobuf.Se"
    "nsorStatusMsg.SensorStatusType\0227\n\nattrib"
    "utes\030\003 \003(\0132#.protobuf.SensorStatusMsg.At"
    "tribute\"0\n\020SensorStatusType\022\013\n\007WORKING\020\001"
    "\022\017\n\013NOT_WORKING\020\002\"<\n\023AttributeStatusType"
    "\022\021\n\rINSIDE_LIMITS\020\001\022\022\n\016OUTSIDE_LIMITS\020\002\""
    "\234\001\n\tStatusMsg\0223\n\013status_type\030\001 \002(\0162\036.pro"
    "tobuf.StatusMsg.StatusType\022\024\n\014project_na"
    "me\030\002 \001(\t\"D\n\nStatusType\022\010\n\004IDLE\020\001\022\023\n\017DATA"
    "_COLLECTION\020\002\022\027\n\023EXPERIMENT_PLAYBACK\020\003\"*"
    "\n\032CreateNewProjectRequestMsg\022\014\n\004name\030\001 \002"
    "(\t\"\270\001\n\033CreateNewProjectResponseMsg\022I\n\rre"
    "sponse_type\030\001 \002(\01622.protobuf.CreateNewPr"
    "ojectResponseMsg.ResponseType\"N\n\014Respons"
    "eType\022\013\n\007SUCCESS\020\001\022\016\n\nNAME_TAKEN\020\002\022\020\n\014IL"
    "LEGAL_NAME\020\003\022\017\n\013OTHER_ERROR\020\004\"=\n\027RenameP"
    "rojectRequestMsg\022\020\n\010old_name\030\001 \002(\t\022\020\n\010ne"
    "w_name\030\002 \002(\t\"\311\001\n\030RenameProjectResponseMs"
    "g\022F\n\rresponse_type\030\001 \002(\0162/.protobuf.Rena"
    "meProjectResponseMsg.ResponseType\"e\n\014Res"
    "ponseType\022\013\n\007SUCCESS\020\001\022\020\n\014ILLEGAL_NAME\020\002"
    "\022\016\n\nNAME_TAKEN\020\003\022\025\n\021PROJECT_NOT_FOUND\020\004\022"
    "\017\n\013OTHER_ERROR\020\005\"\'\n\027RemoveProjectRequest"
    "Msg\022\014\n\004name\030\001 \002(\t\"\247\001\n\030RemoveProjectRespo"
    "nseMsg\022F\n\rresponse_type\030\001 \002(\0162/.protobuf"
    ".RemoveProjectResponseMsg.ResponseType\"C"
    "\n\014ResponseType\022\013\n\007SUCCESS\020\001\022\025\n\021PROJECT_N"
    "OT_FOUND\020\002\022\017\n\013OTHER_ERROR\020\003\"*\n\032SetActive"
    "ProjectRequestMsg\022\014\n\004name\030\001 \002(\t\"\303\001\n\033SetA"
    "ctiveProjectResponseMsg\022I\n\rresponse_type"
    "\030\001 \002(\01622.protobuf.SetActiveProjectRespon"
    "seMsg.ResponseType\"Y\n\014ResponseType\022\013\n\007SU"
    "CCESS\020\001\022\025\n\021PROJECT_NOT_FOUND\020\002\022\024\n\020NOT_IN"
    "_IDLE_MODE\020\003\022\017\n\013OTHER_ERROR\020\004\" \n\020ActiveP"
    "rojectMsg\022\014\n\004name\030\001 \001(\t\"#\n\023ActiveExperim"
    "entMsg\022\014\n\004name\030\001 \001(\t\"\"\n\016ProjectListMsg\022\020"
    "\n\010projects\030\001 \003(\t\"\202\001\n\025ProjectMetadataStru"
    "ct\022\023\n\013test_leader\030\001 \001(\t\022\014\n\004date\030\002 \001(\003\022\r\n"
    "\005email\030\003 \001(\t\022\024\n\014member_names\030\004 \003(\t\022\014\n\004ta"
    "gs\030\005 \003(\t\022\023\n\013description\030\006 \001(\t\"Q\n\034SetProj"
    "ectMetadataRequestMsg\0221\n\010metadata\030\001 \002(\0132"
    "\037.protobuf.ProjectMetadataStruct\"\261\001\n\035Set"
    "ProjectMetadataResponseMsg\022K\n\rresponse_t"
    "ype\030\001 \002(\01624.protobuf.SetProjectMetadataR"
    "esponseMsg.ResponseType\"C\n\014ResponseType\022"
    "\013\n\007SUCCESS\020\001\022\025\n\021NO_ACTIVE_PROJECT\020\002\022\017\n\013O"
    "THER_ERROR\020\003\"G\n\022ProjectMetadataMsg\0221\n\010me"
    "tadata\030\001 \002(\0132\037.protobuf.ProjectMetadataS"
    "truct\"7\n\'ExperimentDataCollectionStartRe"
    "questMsg\022\014\n\004name\030\001 \002(\t\"\377\001\n(ExperimentDat"
    "aCollectionStartResponseMsg\022V\n\rresponse_"
    "type\030\001 \002(\0162\?.protobuf.ExperimentDataColl"
    "ectionStartResponseMsg.ResponseType\"{\n\014R"
    "esponseType\022\013\n\007SUCCESS\020\001\022\025\n\021NO_ACTIVE_PR"
    "OJECT\020\002\022\024\n\020NOT_IN_IDLE_MODE\020\003\022\016\n\nNAME_TA"
    "KEN\020\004\022\020\n\014ILLEGAL_NAME\020\005\022\017\n\013OTHER_ERROR\020\006"
    "\"(\n&ExperimentDataCollectionStopRequestM"
    "sg\"\317\001\n\'ExperimentDataCollectionStopRespo"
    "nseMsg\022U\n\rresponse_type\030\001 \002(\0162>.protobuf"
    ".ExperimentDataCollectionStopResponseMsg"
    ".ResponseType\"M\n\014ResponseType\022\013\n\007SUCCESS"
    "\020\001\022\037\n\033NOT_IN_DATA_COLLECTION_MODE\020\002\022\017\n\013O"
    "THER_ERROR\020\003\"@\n\032RenameExperimentRequestM"
    "sg\022\020\n\010old_name\030\001 \002(\t\022\020\n\010new_name\030\002 \002(\t\"\327"
    "\001\n\033RenameExperimentResponseMsg\022I\n\rrespon"
    "se_type\030\001 \002(\01622.protobuf.RenameExperimen"
    "tResponseMsg.ResponseType\"m\n\014ResponseTyp"
    "e\022\013\n\007SUCCESS\020\001\022\025\n\021NO_ACTIVE_PROJECT\020\002\022\016\n"
    "\nNAME_TAKEN\020\003\022\030\n\024EXPERIMENT_NOT_FOUND\020\004\022"
    "\017\n\013OTHER_ERROR\020\005\"*\n\032RemoveExperimentRequ"
    "estMsg\022\014\n\004name\030\001 \002(\t\"\307\001\n\033RemoveExperimen"
    "tResponseMsg\022I\n\rresponse_type\030\001 \002(\01622.pr"
    "otobuf.RemoveExperimentResponseMsg.Respo"
    "nseType\"]\n\014ResponseType\022\013\n\007SUCCESS\020\001\022\025\n\021"
    "NO_ACTIVE_PROJECT\020\002\022\030\n\024EXPERIMENT_NOT_FO"
    "UND\020\003\022\017\n\013OTHER_ERROR\020\004\"E\n!ExperimentPlay"
    "backStartRequestMsg\022\014\n\004name\030\001 \002(\t\022\022\n\nsen"
    "sor_ids\030\002 \003(\005\"\353\001\n\"ExperimentPlaybackStar"
    "tResponseMsg\022P\n\rresponse_type\030\001 \002(\01629.pr"
    "otobuf.ExperimentPlaybackStartResponseMs"
    "g.ResponseType\"s\n\014ResponseType\022\013\n\007SUCCES"
    "S\020\001\022\025\n\021NO_ACTIVE_PROJECT\020\002\022\030\n\024EXPERIMENT"
    "_NOT_FOUND\020\003\022\024\n\020NOT_IN_IDLE_MODE\020\004\022\017\n\013OT"
    "HER_ERROR\020\005\"\"\n ExperimentPlaybackStopReq"
    "uestMsg\"\274\001\n!ExperimentPlaybackStopRespon"
    "seMsg\022O\n\rresponse_type\030\001 \002(\01628.protobuf."
    "ExperimentPlaybackStopResponseMsg.Respon"
    "seType\"F\n\014ResponseType\022\013\n\007SUCCESS\020\001\022\030\n\024N"
    "OT_IN_PLAYBACK_MODE\020\002\022\017\n\013OTHER_ERROR\020\003\"\""
    "\n\021ExperimentListMsg\022\r\n\005names\030\001 \003(\t\"W\n\037Se"
    "tExperimentMetadataRequestMsg\022\027\n\017experim"
    "ent_name\030\001 \002(\t\022\014\n\004tags\030\002 \003(\t\022\r\n\005notes\030\003 "
    "\001(\t\"\321\001\n SetExperimentMetadataResponseMsg"
    "\022N\n\rresponse_type\030\001 \002(\01627.protobuf.SetEx"
    "perimentMetadataResponseMsg.ResponseType"
    "\"]\n\014ResponseType\022\013\n\007SUCCESS\020\001\022\025\n\021NO_ACTI"
    "VE_PROJECT\020\002\022\030\n\024EXPERIMENT_NOT_FOUND\020\003\022\017"
    "\n\013OTHER_ERROR\020\004\"\337\001\n\025ExperimentMetadataMs"
    "g\022\027\n\017experiment_name\030\001 \002(\t\022@\n\010metadata\030\002"
    " \002(\0132..protobuf.ExperimentMetadataMsg.Me"
    "tadataStruct\032k\n\016MetadataStruct\022\014\n\004tags\030\001"
    " \003(\t\022\r\n\005notes\030\002 \001(\t\022<\n\025sensor_configurat"
    "ions\030\003 \003(\0132\035.protobuf.SensorConfiguratio"
    "n\"!\n\010DebugMsg\022\025\n\rdebug_message\030\001 \002(\t\"\200\001\n"
    "\010ErrorMsg\0220\n\nerror_type\030\001 \002(\0162\034.protobuf"
    ".ErrorMsg.ErrorType\"B\n\tErrorType\022\025\n\021UNKN"
    "OWN_SENSOR_ID\020\001\022\036\n\032UNKNOWN_GENERALMSG_SU"
    "BTYPE\020\002", 9687);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "protocol.proto", &protobuf_RegisterTypes);
  GeneralMsg::default_instance_ = new GeneralMsg();
  DataMsg::default_instance_ = new DataMsg();
  DynamicEventStruct::default_instance_ = new DynamicEventStruct();
  SetDynamicEventRequestMsg::default_instance_ = new SetDynamicEventRequestMsg();
  SetDynamicEventResponseMsg::default_instance_ = new SetDynamicEventResponseMsg();
  DynamicEventMsg::default_instance_ = new DynamicEventMsg();
  AttributeConfiguration::default_instance_ = new AttributeConfiguration();
  SensorConfiguration::default_instance_ = new SensorConfiguration();
  ConfigurationMsg::default_instance_ = new ConfigurationMsg();
  SettingsRequestMsg::default_instance_ = new SettingsRequestMsg();
  SettingsResponseMsg::default_instance_ = new SettingsResponseMsg();
  SensorStatusMsg::default_instance_ = new SensorStatusMsg();
  SensorStatusMsg_Attribute::default_instance_ = new SensorStatusMsg_Attribute();
  SensorStatusMsg_Sensor::default_instance_ = new SensorStatusMsg_Sensor();
  StatusMsg::default_instance_ = new StatusMsg();
  CreateNewProjectRequestMsg::default_instance_ = new CreateNewProjectRequestMsg();
  CreateNewProjectResponseMsg::default_instance_ = new CreateNewProjectResponseMsg();
  RenameProjectRequestMsg::default_instance_ = new RenameProjectRequestMsg();
  RenameProjectResponseMsg::default_instance_ = new RenameProjectResponseMsg();
  RemoveProjectRequestMsg::default_instance_ = new RemoveProjectRequestMsg();
  RemoveProjectResponseMsg::default_instance_ = new RemoveProjectResponseMsg();
  SetActiveProjectRequestMsg::default_instance_ = new SetActiveProjectRequestMsg();
  SetActiveProjectResponseMsg::default_instance_ = new SetActiveProjectResponseMsg();
  ActiveProjectMsg::default_instance_ = new ActiveProjectMsg();
  ActiveExperimentMsg::default_instance_ = new ActiveExperimentMsg();
  ProjectListMsg::default_instance_ = new ProjectListMsg();
  ProjectMetadataStruct::default_instance_ = new ProjectMetadataStruct();
  SetProjectMetadataRequestMsg::default_instance_ = new SetProjectMetadataRequestMsg();
  SetProjectMetadataResponseMsg::default_instance_ = new SetProjectMetadataResponseMsg();
  ProjectMetadataMsg::default_instance_ = new ProjectMetadataMsg();
  ExperimentDataCollectionStartRequestMsg::default_instance_ = new ExperimentDataCollectionStartRequestMsg();
  ExperimentDataCollectionStartResponseMsg::default_instance_ = new ExperimentDataCollectionStartResponseMsg();
  ExperimentDataCollectionStopRequestMsg::default_instance_ = new ExperimentDataCollectionStopRequestMsg();
  ExperimentDataCollectionStopResponseMsg::default_instance_ = new ExperimentDataCollectionStopResponseMsg();
  RenameExperimentRequestMsg::default_instance_ = new RenameExperimentRequestMsg();
  RenameExperimentResponseMsg::default_instance_ = new RenameExperimentResponseMsg();
  RemoveExperimentRequestMsg::default_instance_ = new RemoveExperimentRequestMsg();
  RemoveExperimentResponseMsg::default_instance_ = new RemoveExperimentResponseMsg();
  ExperimentPlaybackStartRequestMsg::default_instance_ = new ExperimentPlaybackStartRequestMsg();
  ExperimentPlaybackStartResponseMsg::default_instance_ = new ExperimentPlaybackStartResponseMsg();
  ExperimentPlaybackStopRequestMsg::default_instance_ = new ExperimentPlaybackStopRequestMsg();
  ExperimentPlaybackStopResponseMsg::default_instance_ = new ExperimentPlaybackStopResponseMsg();
  ExperimentListMsg::default_instance_ = new ExperimentListMsg();
  SetExperimentMetadataRequestMsg::default_instance_ = new SetExperimentMetadataRequestMsg();
  SetExperimentMetadataResponseMsg::default_instance_ = new SetExperimentMetadataResponseMsg();
  ExperimentMetadataMsg::default_instance_ = new ExperimentMetadataMsg();
  ExperimentMetadataMsg_MetadataStruct::default_instance_ = new ExperimentMetadataMsg_MetadataStruct();
  DebugMsg::default_instance_ = new DebugMsg();
  ErrorMsg::default_instance_ = new ErrorMsg();
  GeneralMsg::default_instance_->InitAsDefaultInstance();
  DataMsg::default_instance_->InitAsDefaultInstance();
  DynamicEventStruct::default_instance_->InitAsDefaultInstance();
  SetDynamicEventRequestMsg::default_instance_->InitAsDefaultInstance();
  SetDynamicEventResponseMsg::default_instance_->InitAsDefaultInstance();
  DynamicEventMsg::default_instance_->InitAsDefaultInstance();
  AttributeConfiguration::default_instance_->InitAsDefaultInstance();
  SensorConfiguration::default_instance_->InitAsDefaultInstance();
  ConfigurationMsg::default_instance_->InitAsDefaultInstance();
  SettingsRequestMsg::default_instance_->InitAsDefaultInstance();
  SettingsResponseMsg::default_instance_->InitAsDefaultInstance();
  SensorStatusMsg::default_instance_->InitAsDefaultInstance();
  SensorStatusMsg_Attribute::default_instance_->InitAsDefaultInstance();
  SensorStatusMsg_Sensor::default_instance_->InitAsDefaultInstance();
  StatusMsg::default_instance_->InitAsDefaultInstance();
  CreateNewProjectRequestMsg::default_instance_->InitAsDefaultInstance();
  CreateNewProjectResponseMsg::default_instance_->InitAsDefaultInstance();
  RenameProjectRequestMsg::default_instance_->InitAsDefaultInstance();
  RenameProjectResponseMsg::default_instance_->InitAsDefaultInstance();
  RemoveProjectRequestMsg::default_instance_->InitAsDefaultInstance();
  RemoveProjectResponseMsg::default_instance_->InitAsDefaultInstance();
  SetActiveProjectRequestMsg::default_instance_->InitAsDefaultInstance();
  SetActiveProjectResponseMsg::default_instance_->InitAsDefaultInstance();
  ActiveProjectMsg::default_instance_->InitAsDefaultInstance();
  ActiveExperimentMsg::default_instance_->InitAsDefaultInstance();
  ProjectListMsg::default_instance_->InitAsDefaultInstance();
  ProjectMetadataStruct::default_instance_->InitAsDefaultInstance();
  SetProjectMetadataRequestMsg::default_instance_->InitAsDefaultInstance();
  SetProjectMetadataResponseMsg::default_instance_->InitAsDefaultInstance();
  ProjectMetadataMsg::default_instance_->InitAsDefaultInstance();
  ExperimentDataCollectionStartRequestMsg::default_instance_->InitAsDefaultInstance();
  ExperimentDataCollectionStartResponseMsg::default_instance_->InitAsDefaultInstance();
  ExperimentDataCollectionStopRequestMsg::default_instance_->InitAsDefaultInstance();
  ExperimentDataCollectionStopResponseMsg::default_instance_->InitAsDefaultInstance();
  RenameExperimentRequestMsg::default_instance_->InitAsDefaultInstance();
  RenameExperimentResponseMsg::default_instance_->InitAsDefaultInstance();
  RemoveExperimentRequestMsg::default_instance_->InitAsDefaultInstance();
  RemoveExperimentResponseMsg::default_instance_->InitAsDefaultInstance();
  ExperimentPlaybackStartRequestMsg::default_instance_->InitAsDefaultInstance();
  ExperimentPlaybackStartResponseMsg::default_instance_->InitAsDefaultInstance();
  ExperimentPlaybackStopRequestMsg::default_instance_->InitAsDefaultInstance();
  ExperimentPlaybackStopResponseMsg::default_instance_->InitAsDefaultInstance();
  ExperimentListMsg::default_instance_->InitAsDefaultInstance();
  SetExperimentMetadataRequestMsg::default_instance_->InitAsDefaultInstance();
  SetExperimentMetadataResponseMsg::default_instance_->InitAsDefaultInstance();
  ExperimentMetadataMsg::default_instance_->InitAsDefaultInstance();
  ExperimentMetadataMsg_MetadataStruct::default_instance_->InitAsDefaultInstance();
  DebugMsg::default_instance_->InitAsDefaultInstance();
  ErrorMsg::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_protocol_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_protocol_2eproto {
  StaticDescriptorInitializer_protocol_2eproto() {
    protobuf_AddDesc_protocol_2eproto();
  }
} static_descriptor_initializer_protocol_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* GeneralMsg_SubType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GeneralMsg_SubType_descriptor_;
}
bool GeneralMsg_SubType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const GeneralMsg_SubType GeneralMsg::DATA_T;
const GeneralMsg_SubType GeneralMsg::SET_DYNAMIC_EVENT_REQUEST_T;
const GeneralMsg_SubType GeneralMsg::SET_DYNAMIC_EVENT_RESPONSE_T;
const GeneralMsg_SubType GeneralMsg::DYNAMIC_EVENT_T;
const GeneralMsg_SubType GeneralMsg::CONFIGURATION_T;
const GeneralMsg_SubType GeneralMsg::SETTINGS_REQUEST_T;
const GeneralMsg_SubType GeneralMsg::SETTINGS_RESPONSE_T;
const GeneralMsg_SubType GeneralMsg::SENSOR_STATUS_T;
const GeneralMsg_SubType GeneralMsg::STATUS_T;
const GeneralMsg_SubType GeneralMsg::CREATE_NEW_PROJECT_REQUEST_T;
const GeneralMsg_SubType GeneralMsg::CREATE_NEW_PROJECT_RESPONSE_T;
const GeneralMsg_SubType GeneralMsg::RENAME_PROJECT_REQUEST_T;
const GeneralMsg_SubType GeneralMsg::RENAME_PROJECT_RESPONSE_T;
const GeneralMsg_SubType GeneralMsg::REMOVE_PROJECT_REQUEST_T;
const GeneralMsg_SubType GeneralMsg::REMOVE_PROJECT_RESPONSE_T;
const GeneralMsg_SubType GeneralMsg::SET_ACTIVE_PROJECT_REQUEST_T;
const GeneralMsg_SubType GeneralMsg::SET_ACTIVE_PROJECT_RESPONSE_T;
const GeneralMsg_SubType GeneralMsg::ACTIVE_PROJECT_T;
const GeneralMsg_SubType GeneralMsg::PROJECT_LIST_T;
const GeneralMsg_SubType GeneralMsg::SET_PROJECT_METADATA_REQUEST_T;
const GeneralMsg_SubType GeneralMsg::SET_PROJECT_METADATA_RESPONSE_T;
const GeneralMsg_SubType GeneralMsg::PROJECT_METADATA_T;
const GeneralMsg_SubType GeneralMsg::EXPERIMENT_DATA_COLLECTION_START_REQUEST_T;
const GeneralMsg_SubType GeneralMsg::EXPERIMENT_DATA_COLLECTION_START_RESPONSE_T;
const GeneralMsg_SubType GeneralMsg::EXPERIMENT_DATA_COLLECTION_STOP_REQUEST_T;
const GeneralMsg_SubType GeneralMsg::EXPERIMENT_DATA_COLLECTION_STOP_RESPONSE_T;
const GeneralMsg_SubType GeneralMsg::RENAME_EXPERIMENT_REQUEST_T;
const GeneralMsg_SubType GeneralMsg::RENAME_EXPERIMENT_RESPONSE_T;
const GeneralMsg_SubType GeneralMsg::REMOVE_EXPERIMENT_REQUEST_T;
const GeneralMsg_SubType GeneralMsg::REMOVE_EXPERIMENT_RESPONSE_T;
const GeneralMsg_SubType GeneralMsg::EXPERIMENT_PLAYBACK_START_REQUEST_T;
const GeneralMsg_SubType GeneralMsg::EXPERIMENT_PLAYBACK_START_RESPONSE_T;
const GeneralMsg_SubType GeneralMsg::EXPERIMENT_PLAYBACK_STOP_REQUEST_T;
const GeneralMsg_SubType GeneralMsg::EXPERIMENT_PLAYBACK_STOP_RESPONSE_T;
const GeneralMsg_SubType GeneralMsg::EXPERIMENT_LIST_T;
const GeneralMsg_SubType GeneralMsg::SET_EXPERIMENT_METADATA_REQUEST_T;
const GeneralMsg_SubType GeneralMsg::SET_EXPERIMENT_METADATA_RESPONSE_T;
const GeneralMsg_SubType GeneralMsg::EXPERIMENT_METADATA_T;
const GeneralMsg_SubType GeneralMsg::DEBUG_T;
const GeneralMsg_SubType GeneralMsg::ERROR_T;
const GeneralMsg_SubType GeneralMsg::ACTIVE_EXPERIMENT_T;
const GeneralMsg_SubType GeneralMsg::SubType_MIN;
const GeneralMsg_SubType GeneralMsg::SubType_MAX;
const int GeneralMsg::SubType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int GeneralMsg::kSubTypeFieldNumber;
const int GeneralMsg::kDataFieldNumber;
const int GeneralMsg::kSetDynamicEventRequestFieldNumber;
const int GeneralMsg::kSetDynamicEventResponseFieldNumber;
const int GeneralMsg::kDynamicEventFieldNumber;
const int GeneralMsg::kConfigurationFieldNumber;
const int GeneralMsg::kSettingsRequestFieldNumber;
const int GeneralMsg::kSettingsResponseFieldNumber;
const int GeneralMsg::kSensorStatusFieldNumber;
const int GeneralMsg::kStatusFieldNumber;
const int GeneralMsg::kCreateNewProjectRequestFieldNumber;
const int GeneralMsg::kCreateNewProjectResponseFieldNumber;
const int GeneralMsg::kRenameProjectRequestFieldNumber;
const int GeneralMsg::kRenameProjectResponseFieldNumber;
const int GeneralMsg::kRemoveProjectRequestFieldNumber;
const int GeneralMsg::kRemoveProjectResponseFieldNumber;
const int GeneralMsg::kSetActiveProjectRequestFieldNumber;
const int GeneralMsg::kSetActiveProjectResponseFieldNumber;
const int GeneralMsg::kActiveProjectFieldNumber;
const int GeneralMsg::kProjectListFieldNumber;
const int GeneralMsg::kSetProjectMetadataRequestFieldNumber;
const int GeneralMsg::kSetProjectMetadataResponseFieldNumber;
const int GeneralMsg::kProjectMetadataFieldNumber;
const int GeneralMsg::kExperimentDataCollectionStartRequestFieldNumber;
const int GeneralMsg::kExperimentDataCollectionStartResponseFieldNumber;
const int GeneralMsg::kExperimentDataCollectionStopRequestFieldNumber;
const int GeneralMsg::kExperimentDataCollectionStopResponseFieldNumber;
const int GeneralMsg::kRenameExperimentRequestFieldNumber;
const int GeneralMsg::kRenameExperimentResponseFieldNumber;
const int GeneralMsg::kRemoveExperimentRequestFieldNumber;
const int GeneralMsg::kRemoveExperimentResponseFieldNumber;
const int GeneralMsg::kExperimentPlaybackStartRequestFieldNumber;
const int GeneralMsg::kExperimentPlaybackStartResponseFieldNumber;
const int GeneralMsg::kExperimentPlaybackStopRequestFieldNumber;
const int GeneralMsg::kExperimentPlaybackStopResponseFieldNumber;
const int GeneralMsg::kExperimentListFieldNumber;
const int GeneralMsg::kSetExperimentMetadataRequestFieldNumber;
const int GeneralMsg::kSetExperimentMetadataResponseFieldNumber;
const int GeneralMsg::kExperimentMetadataFieldNumber;
const int GeneralMsg::kDebugMessageFieldNumber;
const int GeneralMsg::kErrorMessageFieldNumber;
const int GeneralMsg::kActiveExperimentFieldNumber;
#endif  // !_MSC_VER

GeneralMsg::GeneralMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GeneralMsg::InitAsDefaultInstance() {
  data_ = const_cast< ::protobuf::DataMsg*>(&::protobuf::DataMsg::default_instance());
  set_dynamic_event_request_ = const_cast< ::protobuf::SetDynamicEventRequestMsg*>(&::protobuf::SetDynamicEventRequestMsg::default_instance());
  set_dynamic_event_response_ = const_cast< ::protobuf::SetDynamicEventResponseMsg*>(&::protobuf::SetDynamicEventResponseMsg::default_instance());
  dynamic_event_ = const_cast< ::protobuf::DynamicEventMsg*>(&::protobuf::DynamicEventMsg::default_instance());
  configuration_ = const_cast< ::protobuf::ConfigurationMsg*>(&::protobuf::ConfigurationMsg::default_instance());
  settings_request_ = const_cast< ::protobuf::SettingsRequestMsg*>(&::protobuf::SettingsRequestMsg::default_instance());
  settings_response_ = const_cast< ::protobuf::SettingsResponseMsg*>(&::protobuf::SettingsResponseMsg::default_instance());
  sensor_status_ = const_cast< ::protobuf::SensorStatusMsg*>(&::protobuf::SensorStatusMsg::default_instance());
  status_ = const_cast< ::protobuf::StatusMsg*>(&::protobuf::StatusMsg::default_instance());
  create_new_project_request_ = const_cast< ::protobuf::CreateNewProjectRequestMsg*>(&::protobuf::CreateNewProjectRequestMsg::default_instance());
  create_new_project_response_ = const_cast< ::protobuf::CreateNewProjectResponseMsg*>(&::protobuf::CreateNewProjectResponseMsg::default_instance());
  rename_project_request_ = const_cast< ::protobuf::RenameProjectRequestMsg*>(&::protobuf::RenameProjectRequestMsg::default_instance());
  rename_project_response_ = const_cast< ::protobuf::RenameProjectResponseMsg*>(&::protobuf::RenameProjectResponseMsg::default_instance());
  remove_project_request_ = const_cast< ::protobuf::RemoveProjectRequestMsg*>(&::protobuf::RemoveProjectRequestMsg::default_instance());
  remove_project_response_ = const_cast< ::protobuf::RemoveProjectResponseMsg*>(&::protobuf::RemoveProjectResponseMsg::default_instance());
  set_active_project_request_ = const_cast< ::protobuf::SetActiveProjectRequestMsg*>(&::protobuf::SetActiveProjectRequestMsg::default_instance());
  set_active_project_response_ = const_cast< ::protobuf::SetActiveProjectResponseMsg*>(&::protobuf::SetActiveProjectResponseMsg::default_instance());
  active_project_ = const_cast< ::protobuf::ActiveProjectMsg*>(&::protobuf::ActiveProjectMsg::default_instance());
  project_list_ = const_cast< ::protobuf::ProjectListMsg*>(&::protobuf::ProjectListMsg::default_instance());
  set_project_metadata_request_ = const_cast< ::protobuf::SetProjectMetadataRequestMsg*>(&::protobuf::SetProjectMetadataRequestMsg::default_instance());
  set_project_metadata_response_ = const_cast< ::protobuf::SetProjectMetadataResponseMsg*>(&::protobuf::SetProjectMetadataResponseMsg::default_instance());
  project_metadata_ = const_cast< ::protobuf::ProjectMetadataMsg*>(&::protobuf::ProjectMetadataMsg::default_instance());
  experiment_data_collection_start_request_ = const_cast< ::protobuf::ExperimentDataCollectionStartRequestMsg*>(&::protobuf::ExperimentDataCollectionStartRequestMsg::default_instance());
  experiment_data_collection_start_response_ = const_cast< ::protobuf::ExperimentDataCollectionStartResponseMsg*>(&::protobuf::ExperimentDataCollectionStartResponseMsg::default_instance());
  experiment_data_collection_stop_request_ = const_cast< ::protobuf::ExperimentDataCollectionStopRequestMsg*>(&::protobuf::ExperimentDataCollectionStopRequestMsg::default_instance());
  experiment_data_collection_stop_response_ = const_cast< ::protobuf::ExperimentDataCollectionStopResponseMsg*>(&::protobuf::ExperimentDataCollectionStopResponseMsg::default_instance());
  rename_experiment_request_ = const_cast< ::protobuf::RenameExperimentRequestMsg*>(&::protobuf::RenameExperimentRequestMsg::default_instance());
  rename_experiment_response_ = const_cast< ::protobuf::RenameExperimentResponseMsg*>(&::protobuf::RenameExperimentResponseMsg::default_instance());
  remove_experiment_request_ = const_cast< ::protobuf::RemoveExperimentRequestMsg*>(&::protobuf::RemoveExperimentRequestMsg::default_instance());
  remove_experiment_response_ = const_cast< ::protobuf::RemoveExperimentResponseMsg*>(&::protobuf::RemoveExperimentResponseMsg::default_instance());
  experiment_playback_start_request_ = const_cast< ::protobuf::ExperimentPlaybackStartRequestMsg*>(&::protobuf::ExperimentPlaybackStartRequestMsg::default_instance());
  experiment_playback_start_response_ = const_cast< ::protobuf::ExperimentPlaybackStartResponseMsg*>(&::protobuf::ExperimentPlaybackStartResponseMsg::default_instance());
  experiment_playback_stop_request_ = const_cast< ::protobuf::ExperimentPlaybackStopRequestMsg*>(&::protobuf::ExperimentPlaybackStopRequestMsg::default_instance());
  experiment_playback_stop_response_ = const_cast< ::protobuf::ExperimentPlaybackStopResponseMsg*>(&::protobuf::ExperimentPlaybackStopResponseMsg::default_instance());
  experiment_list_ = const_cast< ::protobuf::ExperimentListMsg*>(&::protobuf::ExperimentListMsg::default_instance());
  set_experiment_metadata_request_ = const_cast< ::protobuf::SetExperimentMetadataRequestMsg*>(&::protobuf::SetExperimentMetadataRequestMsg::default_instance());
  set_experiment_metadata_response_ = const_cast< ::protobuf::SetExperimentMetadataResponseMsg*>(&::protobuf::SetExperimentMetadataResponseMsg::default_instance());
  experiment_metadata_ = const_cast< ::protobuf::ExperimentMetadataMsg*>(&::protobuf::ExperimentMetadataMsg::default_instance());
  debug_message_ = const_cast< ::protobuf::DebugMsg*>(&::protobuf::DebugMsg::default_instance());
  error_message_ = const_cast< ::protobuf::ErrorMsg*>(&::protobuf::ErrorMsg::default_instance());
  active_experiment_ = const_cast< ::protobuf::ActiveExperimentMsg*>(&::protobuf::ActiveExperimentMsg::default_instance());
}

GeneralMsg::GeneralMsg(const GeneralMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GeneralMsg::SharedCtor() {
  _cached_size_ = 0;
  sub_type_ = 1;
  data_ = NULL;
  set_dynamic_event_request_ = NULL;
  set_dynamic_event_response_ = NULL;
  dynamic_event_ = NULL;
  configuration_ = NULL;
  settings_request_ = NULL;
  settings_response_ = NULL;
  sensor_status_ = NULL;
  status_ = NULL;
  create_new_project_request_ = NULL;
  create_new_project_response_ = NULL;
  rename_project_request_ = NULL;
  rename_project_response_ = NULL;
  remove_project_request_ = NULL;
  remove_project_response_ = NULL;
  set_active_project_request_ = NULL;
  set_active_project_response_ = NULL;
  active_project_ = NULL;
  project_list_ = NULL;
  set_project_metadata_request_ = NULL;
  set_project_metadata_response_ = NULL;
  project_metadata_ = NULL;
  experiment_data_collection_start_request_ = NULL;
  experiment_data_collection_start_response_ = NULL;
  experiment_data_collection_stop_request_ = NULL;
  experiment_data_collection_stop_response_ = NULL;
  rename_experiment_request_ = NULL;
  rename_experiment_response_ = NULL;
  remove_experiment_request_ = NULL;
  remove_experiment_response_ = NULL;
  experiment_playback_start_request_ = NULL;
  experiment_playback_start_response_ = NULL;
  experiment_playback_stop_request_ = NULL;
  experiment_playback_stop_response_ = NULL;
  experiment_list_ = NULL;
  set_experiment_metadata_request_ = NULL;
  set_experiment_metadata_response_ = NULL;
  experiment_metadata_ = NULL;
  debug_message_ = NULL;
  error_message_ = NULL;
  active_experiment_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GeneralMsg::~GeneralMsg() {
  SharedDtor();
}

void GeneralMsg::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
    delete set_dynamic_event_request_;
    delete set_dynamic_event_response_;
    delete dynamic_event_;
    delete configuration_;
    delete settings_request_;
    delete settings_response_;
    delete sensor_status_;
    delete status_;
    delete create_new_project_request_;
    delete create_new_project_response_;
    delete rename_project_request_;
    delete rename_project_response_;
    delete remove_project_request_;
    delete remove_project_response_;
    delete set_active_project_request_;
    delete set_active_project_response_;
    delete active_project_;
    delete project_list_;
    delete set_project_metadata_request_;
    delete set_project_metadata_response_;
    delete project_metadata_;
    delete experiment_data_collection_start_request_;
    delete experiment_data_collection_start_response_;
    delete experiment_data_collection_stop_request_;
    delete experiment_data_collection_stop_response_;
    delete rename_experiment_request_;
    delete rename_experiment_response_;
    delete remove_experiment_request_;
    delete remove_experiment_response_;
    delete experiment_playback_start_request_;
    delete experiment_playback_start_response_;
    delete experiment_playback_stop_request_;
    delete experiment_playback_stop_response_;
    delete experiment_list_;
    delete set_experiment_metadata_request_;
    delete set_experiment_metadata_response_;
    delete experiment_metadata_;
    delete debug_message_;
    delete error_message_;
    delete active_experiment_;
  }
}

void GeneralMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GeneralMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GeneralMsg_descriptor_;
}

const GeneralMsg& GeneralMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

GeneralMsg* GeneralMsg::default_instance_ = NULL;

GeneralMsg* GeneralMsg::New() const {
  return new GeneralMsg;
}

void GeneralMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    sub_type_ = 1;
    if (has_data()) {
      if (data_ != NULL) data_->::protobuf::DataMsg::Clear();
    }
    if (has_set_dynamic_event_request()) {
      if (set_dynamic_event_request_ != NULL) set_dynamic_event_request_->::protobuf::SetDynamicEventRequestMsg::Clear();
    }
    if (has_set_dynamic_event_response()) {
      if (set_dynamic_event_response_ != NULL) set_dynamic_event_response_->::protobuf::SetDynamicEventResponseMsg::Clear();
    }
    if (has_dynamic_event()) {
      if (dynamic_event_ != NULL) dynamic_event_->::protobuf::DynamicEventMsg::Clear();
    }
    if (has_configuration()) {
      if (configuration_ != NULL) configuration_->::protobuf::ConfigurationMsg::Clear();
    }
    if (has_settings_request()) {
      if (settings_request_ != NULL) settings_request_->::protobuf::SettingsRequestMsg::Clear();
    }
    if (has_settings_response()) {
      if (settings_response_ != NULL) settings_response_->::protobuf::SettingsResponseMsg::Clear();
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_sensor_status()) {
      if (sensor_status_ != NULL) sensor_status_->::protobuf::SensorStatusMsg::Clear();
    }
    if (has_status()) {
      if (status_ != NULL) status_->::protobuf::StatusMsg::Clear();
    }
    if (has_create_new_project_request()) {
      if (create_new_project_request_ != NULL) create_new_project_request_->::protobuf::CreateNewProjectRequestMsg::Clear();
    }
    if (has_create_new_project_response()) {
      if (create_new_project_response_ != NULL) create_new_project_response_->::protobuf::CreateNewProjectResponseMsg::Clear();
    }
    if (has_rename_project_request()) {
      if (rename_project_request_ != NULL) rename_project_request_->::protobuf::RenameProjectRequestMsg::Clear();
    }
    if (has_rename_project_response()) {
      if (rename_project_response_ != NULL) rename_project_response_->::protobuf::RenameProjectResponseMsg::Clear();
    }
    if (has_remove_project_request()) {
      if (remove_project_request_ != NULL) remove_project_request_->::protobuf::RemoveProjectRequestMsg::Clear();
    }
    if (has_remove_project_response()) {
      if (remove_project_response_ != NULL) remove_project_response_->::protobuf::RemoveProjectResponseMsg::Clear();
    }
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (has_set_active_project_request()) {
      if (set_active_project_request_ != NULL) set_active_project_request_->::protobuf::SetActiveProjectRequestMsg::Clear();
    }
    if (has_set_active_project_response()) {
      if (set_active_project_response_ != NULL) set_active_project_response_->::protobuf::SetActiveProjectResponseMsg::Clear();
    }
    if (has_active_project()) {
      if (active_project_ != NULL) active_project_->::protobuf::ActiveProjectMsg::Clear();
    }
    if (has_project_list()) {
      if (project_list_ != NULL) project_list_->::protobuf::ProjectListMsg::Clear();
    }
    if (has_set_project_metadata_request()) {
      if (set_project_metadata_request_ != NULL) set_project_metadata_request_->::protobuf::SetProjectMetadataRequestMsg::Clear();
    }
    if (has_set_project_metadata_response()) {
      if (set_project_metadata_response_ != NULL) set_project_metadata_response_->::protobuf::SetProjectMetadataResponseMsg::Clear();
    }
    if (has_project_metadata()) {
      if (project_metadata_ != NULL) project_metadata_->::protobuf::ProjectMetadataMsg::Clear();
    }
    if (has_experiment_data_collection_start_request()) {
      if (experiment_data_collection_start_request_ != NULL) experiment_data_collection_start_request_->::protobuf::ExperimentDataCollectionStartRequestMsg::Clear();
    }
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (has_experiment_data_collection_start_response()) {
      if (experiment_data_collection_start_response_ != NULL) experiment_data_collection_start_response_->::protobuf::ExperimentDataCollectionStartResponseMsg::Clear();
    }
    if (has_experiment_data_collection_stop_request()) {
      if (experiment_data_collection_stop_request_ != NULL) experiment_data_collection_stop_request_->::protobuf::ExperimentDataCollectionStopRequestMsg::Clear();
    }
    if (has_experiment_data_collection_stop_response()) {
      if (experiment_data_collection_stop_response_ != NULL) experiment_data_collection_stop_response_->::protobuf::ExperimentDataCollectionStopResponseMsg::Clear();
    }
    if (has_rename_experiment_request()) {
      if (rename_experiment_request_ != NULL) rename_experiment_request_->::protobuf::RenameExperimentRequestMsg::Clear();
    }
    if (has_rename_experiment_response()) {
      if (rename_experiment_response_ != NULL) rename_experiment_response_->::protobuf::RenameExperimentResponseMsg::Clear();
    }
    if (has_remove_experiment_request()) {
      if (remove_experiment_request_ != NULL) remove_experiment_request_->::protobuf::RemoveExperimentRequestMsg::Clear();
    }
    if (has_remove_experiment_response()) {
      if (remove_experiment_response_ != NULL) remove_experiment_response_->::protobuf::RemoveExperimentResponseMsg::Clear();
    }
    if (has_experiment_playback_start_request()) {
      if (experiment_playback_start_request_ != NULL) experiment_playback_start_request_->::protobuf::ExperimentPlaybackStartRequestMsg::Clear();
    }
  }
  if (_has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    if (has_experiment_playback_start_response()) {
      if (experiment_playback_start_response_ != NULL) experiment_playback_start_response_->::protobuf::ExperimentPlaybackStartResponseMsg::Clear();
    }
    if (has_experiment_playback_stop_request()) {
      if (experiment_playback_stop_request_ != NULL) experiment_playback_stop_request_->::protobuf::ExperimentPlaybackStopRequestMsg::Clear();
    }
    if (has_experiment_playback_stop_response()) {
      if (experiment_playback_stop_response_ != NULL) experiment_playback_stop_response_->::protobuf::ExperimentPlaybackStopResponseMsg::Clear();
    }
    if (has_experiment_list()) {
      if (experiment_list_ != NULL) experiment_list_->::protobuf::ExperimentListMsg::Clear();
    }
    if (has_set_experiment_metadata_request()) {
      if (set_experiment_metadata_request_ != NULL) set_experiment_metadata_request_->::protobuf::SetExperimentMetadataRequestMsg::Clear();
    }
    if (has_set_experiment_metadata_response()) {
      if (set_experiment_metadata_response_ != NULL) set_experiment_metadata_response_->::protobuf::SetExperimentMetadataResponseMsg::Clear();
    }
    if (has_experiment_metadata()) {
      if (experiment_metadata_ != NULL) experiment_metadata_->::protobuf::ExperimentMetadataMsg::Clear();
    }
    if (has_debug_message()) {
      if (debug_message_ != NULL) debug_message_->::protobuf::DebugMsg::Clear();
    }
  }
  if (_has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    if (has_error_message()) {
      if (error_message_ != NULL) error_message_->::protobuf::ErrorMsg::Clear();
    }
    if (has_active_experiment()) {
      if (active_experiment_ != NULL) active_experiment_->::protobuf::ActiveExperimentMsg::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GeneralMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .protobuf.GeneralMsg.SubType sub_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf::GeneralMsg_SubType_IsValid(value)) {
            set_sub_type(static_cast< ::protobuf::GeneralMsg_SubType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // optional .protobuf.DataMsg data = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_set_dynamic_event_request;
        break;
      }

      // optional .protobuf.SetDynamicEventRequestMsg set_dynamic_event_request = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_set_dynamic_event_request:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_set_dynamic_event_request()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_set_dynamic_event_response;
        break;
      }

      // optional .protobuf.SetDynamicEventResponseMsg set_dynamic_event_response = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_set_dynamic_event_response:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_set_dynamic_event_response()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_dynamic_event;
        break;
      }

      // optional .protobuf.DynamicEventMsg dynamic_event = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_dynamic_event:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dynamic_event()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_configuration;
        break;
      }

      // optional .protobuf.ConfigurationMsg configuration = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_configuration:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_configuration()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_settings_request;
        break;
      }

      // optional .protobuf.SettingsRequestMsg settings_request = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_settings_request:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_settings_request()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_settings_response;
        break;
      }

      // optional .protobuf.SettingsResponseMsg settings_response = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_settings_response:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_settings_response()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_sensor_status;
        break;
      }

      // optional .protobuf.SensorStatusMsg sensor_status = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sensor_status:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sensor_status()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_status;
        break;
      }

      // optional .protobuf.StatusMsg status = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_status:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_status()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_create_new_project_request;
        break;
      }

      // optional .protobuf.CreateNewProjectRequestMsg create_new_project_request = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_create_new_project_request:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_create_new_project_request()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_create_new_project_response;
        break;
      }

      // optional .protobuf.CreateNewProjectResponseMsg create_new_project_response = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_create_new_project_response:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_create_new_project_response()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_rename_project_request;
        break;
      }

      // optional .protobuf.RenameProjectRequestMsg rename_project_request = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rename_project_request:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rename_project_request()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_rename_project_response;
        break;
      }

      // optional .protobuf.RenameProjectResponseMsg rename_project_response = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rename_project_response:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rename_project_response()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_remove_project_request;
        break;
      }

      // optional .protobuf.RemoveProjectRequestMsg remove_project_request = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_remove_project_request:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_remove_project_request()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_remove_project_response;
        break;
      }

      // optional .protobuf.RemoveProjectResponseMsg remove_project_response = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_remove_project_response:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_remove_project_response()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_set_active_project_request;
        break;
      }

      // optional .protobuf.SetActiveProjectRequestMsg set_active_project_request = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_set_active_project_request:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_set_active_project_request()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_set_active_project_response;
        break;
      }

      // optional .protobuf.SetActiveProjectResponseMsg set_active_project_response = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_set_active_project_response:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_set_active_project_response()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_active_project;
        break;
      }

      // optional .protobuf.ActiveProjectMsg active_project = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_active_project:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_active_project()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(162)) goto parse_project_list;
        break;
      }

      // optional .protobuf.ProjectListMsg project_list = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_project_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_project_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(170)) goto parse_set_project_metadata_request;
        break;
      }

      // optional .protobuf.SetProjectMetadataRequestMsg set_project_metadata_request = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_set_project_metadata_request:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_set_project_metadata_request()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(178)) goto parse_set_project_metadata_response;
        break;
      }

      // optional .protobuf.SetProjectMetadataResponseMsg set_project_metadata_response = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_set_project_metadata_response:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_set_project_metadata_response()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(186)) goto parse_project_metadata;
        break;
      }

      // optional .protobuf.ProjectMetadataMsg project_metadata = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_project_metadata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_project_metadata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(194)) goto parse_experiment_data_collection_start_request;
        break;
      }

      // optional .protobuf.ExperimentDataCollectionStartRequestMsg experiment_data_collection_start_request = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_experiment_data_collection_start_request:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_experiment_data_collection_start_request()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(202)) goto parse_experiment_data_collection_start_response;
        break;
      }

      // optional .protobuf.ExperimentDataCollectionStartResponseMsg experiment_data_collection_start_response = 25;
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_experiment_data_collection_start_response:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_experiment_data_collection_start_response()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(210)) goto parse_experiment_data_collection_stop_request;
        break;
      }

      // optional .protobuf.ExperimentDataCollectionStopRequestMsg experiment_data_collection_stop_request = 26;
      case 26: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_experiment_data_collection_stop_request:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_experiment_data_collection_stop_request()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(218)) goto parse_experiment_data_collection_stop_response;
        break;
      }

      // optional .protobuf.ExperimentDataCollectionStopResponseMsg experiment_data_collection_stop_response = 27;
      case 27: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_experiment_data_collection_stop_response:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_experiment_data_collection_stop_response()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(226)) goto parse_rename_experiment_request;
        break;
      }

      // optional .protobuf.RenameExperimentRequestMsg rename_experiment_request = 28;
      case 28: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rename_experiment_request:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rename_experiment_request()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(234)) goto parse_rename_experiment_response;
        break;
      }

      // optional .protobuf.RenameExperimentResponseMsg rename_experiment_response = 29;
      case 29: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rename_experiment_response:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rename_experiment_response()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(242)) goto parse_remove_experiment_request;
        break;
      }

      // optional .protobuf.RemoveExperimentRequestMsg remove_experiment_request = 30;
      case 30: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_remove_experiment_request:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_remove_experiment_request()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(250)) goto parse_remove_experiment_response;
        break;
      }

      // optional .protobuf.RemoveExperimentResponseMsg remove_experiment_response = 31;
      case 31: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_remove_experiment_response:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_remove_experiment_response()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(258)) goto parse_experiment_playback_start_request;
        break;
      }

      // optional .protobuf.ExperimentPlaybackStartRequestMsg experiment_playback_start_request = 32;
      case 32: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_experiment_playback_start_request:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_experiment_playback_start_request()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(266)) goto parse_experiment_playback_start_response;
        break;
      }

      // optional .protobuf.ExperimentPlaybackStartResponseMsg experiment_playback_start_response = 33;
      case 33: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_experiment_playback_start_response:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_experiment_playback_start_response()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(274)) goto parse_experiment_playback_stop_request;
        break;
      }

      // optional .protobuf.ExperimentPlaybackStopRequestMsg experiment_playback_stop_request = 34;
      case 34: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_experiment_playback_stop_request:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_experiment_playback_stop_request()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(282)) goto parse_experiment_playback_stop_response;
        break;
      }

      // optional .protobuf.ExperimentPlaybackStopResponseMsg experiment_playback_stop_response = 35;
      case 35: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_experiment_playback_stop_response:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_experiment_playback_stop_response()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(290)) goto parse_experiment_list;
        break;
      }

      // optional .protobuf.ExperimentListMsg experiment_list = 36;
      case 36: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_experiment_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_experiment_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(298)) goto parse_set_experiment_metadata_request;
        break;
      }

      // optional .protobuf.SetExperimentMetadataRequestMsg set_experiment_metadata_request = 37;
      case 37: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_set_experiment_metadata_request:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_set_experiment_metadata_request()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(306)) goto parse_set_experiment_metadata_response;
        break;
      }

      // optional .protobuf.SetExperimentMetadataResponseMsg set_experiment_metadata_response = 38;
      case 38: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_set_experiment_metadata_response:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_set_experiment_metadata_response()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(314)) goto parse_experiment_metadata;
        break;
      }

      // optional .protobuf.ExperimentMetadataMsg experiment_metadata = 39;
      case 39: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_experiment_metadata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_experiment_metadata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(322)) goto parse_debug_message;
        break;
      }

      // optional .protobuf.DebugMsg debug_message = 40;
      case 40: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_debug_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_debug_message()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(330)) goto parse_error_message;
        break;
      }

      // optional .protobuf.ErrorMsg error_message = 41;
      case 41: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_error_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error_message()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(338)) goto parse_active_experiment;
        break;
      }

      // optional .protobuf.ActiveExperimentMsg active_experiment = 42;
      case 42: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_active_experiment:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_active_experiment()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GeneralMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .protobuf.GeneralMsg.SubType sub_type = 1;
  if (has_sub_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->sub_type(), output);
  }

  // optional .protobuf.DataMsg data = 2;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(), output);
  }

  // optional .protobuf.SetDynamicEventRequestMsg set_dynamic_event_request = 3;
  if (has_set_dynamic_event_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->set_dynamic_event_request(), output);
  }

  // optional .protobuf.SetDynamicEventResponseMsg set_dynamic_event_response = 4;
  if (has_set_dynamic_event_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->set_dynamic_event_response(), output);
  }

  // optional .protobuf.DynamicEventMsg dynamic_event = 5;
  if (has_dynamic_event()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->dynamic_event(), output);
  }

  // optional .protobuf.ConfigurationMsg configuration = 6;
  if (has_configuration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->configuration(), output);
  }

  // optional .protobuf.SettingsRequestMsg settings_request = 7;
  if (has_settings_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->settings_request(), output);
  }

  // optional .protobuf.SettingsResponseMsg settings_response = 8;
  if (has_settings_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->settings_response(), output);
  }

  // optional .protobuf.SensorStatusMsg sensor_status = 9;
  if (has_sensor_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->sensor_status(), output);
  }

  // optional .protobuf.StatusMsg status = 10;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->status(), output);
  }

  // optional .protobuf.CreateNewProjectRequestMsg create_new_project_request = 11;
  if (has_create_new_project_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->create_new_project_request(), output);
  }

  // optional .protobuf.CreateNewProjectResponseMsg create_new_project_response = 12;
  if (has_create_new_project_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->create_new_project_response(), output);
  }

  // optional .protobuf.RenameProjectRequestMsg rename_project_request = 13;
  if (has_rename_project_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->rename_project_request(), output);
  }

  // optional .protobuf.RenameProjectResponseMsg rename_project_response = 14;
  if (has_rename_project_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->rename_project_response(), output);
  }

  // optional .protobuf.RemoveProjectRequestMsg remove_project_request = 15;
  if (has_remove_project_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->remove_project_request(), output);
  }

  // optional .protobuf.RemoveProjectResponseMsg remove_project_response = 16;
  if (has_remove_project_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->remove_project_response(), output);
  }

  // optional .protobuf.SetActiveProjectRequestMsg set_active_project_request = 17;
  if (has_set_active_project_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->set_active_project_request(), output);
  }

  // optional .protobuf.SetActiveProjectResponseMsg set_active_project_response = 18;
  if (has_set_active_project_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->set_active_project_response(), output);
  }

  // optional .protobuf.ActiveProjectMsg active_project = 19;
  if (has_active_project()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->active_project(), output);
  }

  // optional .protobuf.ProjectListMsg project_list = 20;
  if (has_project_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->project_list(), output);
  }

  // optional .protobuf.SetProjectMetadataRequestMsg set_project_metadata_request = 21;
  if (has_set_project_metadata_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->set_project_metadata_request(), output);
  }

  // optional .protobuf.SetProjectMetadataResponseMsg set_project_metadata_response = 22;
  if (has_set_project_metadata_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->set_project_metadata_response(), output);
  }

  // optional .protobuf.ProjectMetadataMsg project_metadata = 23;
  if (has_project_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, this->project_metadata(), output);
  }

  // optional .protobuf.ExperimentDataCollectionStartRequestMsg experiment_data_collection_start_request = 24;
  if (has_experiment_data_collection_start_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, this->experiment_data_collection_start_request(), output);
  }

  // optional .protobuf.ExperimentDataCollectionStartResponseMsg experiment_data_collection_start_response = 25;
  if (has_experiment_data_collection_start_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, this->experiment_data_collection_start_response(), output);
  }

  // optional .protobuf.ExperimentDataCollectionStopRequestMsg experiment_data_collection_stop_request = 26;
  if (has_experiment_data_collection_stop_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, this->experiment_data_collection_stop_request(), output);
  }

  // optional .protobuf.ExperimentDataCollectionStopResponseMsg experiment_data_collection_stop_response = 27;
  if (has_experiment_data_collection_stop_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, this->experiment_data_collection_stop_response(), output);
  }

  // optional .protobuf.RenameExperimentRequestMsg rename_experiment_request = 28;
  if (has_rename_experiment_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28, this->rename_experiment_request(), output);
  }

  // optional .protobuf.RenameExperimentResponseMsg rename_experiment_response = 29;
  if (has_rename_experiment_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      29, this->rename_experiment_response(), output);
  }

  // optional .protobuf.RemoveExperimentRequestMsg remove_experiment_request = 30;
  if (has_remove_experiment_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30, this->remove_experiment_request(), output);
  }

  // optional .protobuf.RemoveExperimentResponseMsg remove_experiment_response = 31;
  if (has_remove_experiment_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      31, this->remove_experiment_response(), output);
  }

  // optional .protobuf.ExperimentPlaybackStartRequestMsg experiment_playback_start_request = 32;
  if (has_experiment_playback_start_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      32, this->experiment_playback_start_request(), output);
  }

  // optional .protobuf.ExperimentPlaybackStartResponseMsg experiment_playback_start_response = 33;
  if (has_experiment_playback_start_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      33, this->experiment_playback_start_response(), output);
  }

  // optional .protobuf.ExperimentPlaybackStopRequestMsg experiment_playback_stop_request = 34;
  if (has_experiment_playback_stop_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      34, this->experiment_playback_stop_request(), output);
  }

  // optional .protobuf.ExperimentPlaybackStopResponseMsg experiment_playback_stop_response = 35;
  if (has_experiment_playback_stop_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      35, this->experiment_playback_stop_response(), output);
  }

  // optional .protobuf.ExperimentListMsg experiment_list = 36;
  if (has_experiment_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      36, this->experiment_list(), output);
  }

  // optional .protobuf.SetExperimentMetadataRequestMsg set_experiment_metadata_request = 37;
  if (has_set_experiment_metadata_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      37, this->set_experiment_metadata_request(), output);
  }

  // optional .protobuf.SetExperimentMetadataResponseMsg set_experiment_metadata_response = 38;
  if (has_set_experiment_metadata_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      38, this->set_experiment_metadata_response(), output);
  }

  // optional .protobuf.ExperimentMetadataMsg experiment_metadata = 39;
  if (has_experiment_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      39, this->experiment_metadata(), output);
  }

  // optional .protobuf.DebugMsg debug_message = 40;
  if (has_debug_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      40, this->debug_message(), output);
  }

  // optional .protobuf.ErrorMsg error_message = 41;
  if (has_error_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      41, this->error_message(), output);
  }

  // optional .protobuf.ActiveExperimentMsg active_experiment = 42;
  if (has_active_experiment()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      42, this->active_experiment(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GeneralMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .protobuf.GeneralMsg.SubType sub_type = 1;
  if (has_sub_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->sub_type(), target);
  }

  // optional .protobuf.DataMsg data = 2;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(), target);
  }

  // optional .protobuf.SetDynamicEventRequestMsg set_dynamic_event_request = 3;
  if (has_set_dynamic_event_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->set_dynamic_event_request(), target);
  }

  // optional .protobuf.SetDynamicEventResponseMsg set_dynamic_event_response = 4;
  if (has_set_dynamic_event_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->set_dynamic_event_response(), target);
  }

  // optional .protobuf.DynamicEventMsg dynamic_event = 5;
  if (has_dynamic_event()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->dynamic_event(), target);
  }

  // optional .protobuf.ConfigurationMsg configuration = 6;
  if (has_configuration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->configuration(), target);
  }

  // optional .protobuf.SettingsRequestMsg settings_request = 7;
  if (has_settings_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->settings_request(), target);
  }

  // optional .protobuf.SettingsResponseMsg settings_response = 8;
  if (has_settings_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->settings_response(), target);
  }

  // optional .protobuf.SensorStatusMsg sensor_status = 9;
  if (has_sensor_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->sensor_status(), target);
  }

  // optional .protobuf.StatusMsg status = 10;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->status(), target);
  }

  // optional .protobuf.CreateNewProjectRequestMsg create_new_project_request = 11;
  if (has_create_new_project_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->create_new_project_request(), target);
  }

  // optional .protobuf.CreateNewProjectResponseMsg create_new_project_response = 12;
  if (has_create_new_project_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->create_new_project_response(), target);
  }

  // optional .protobuf.RenameProjectRequestMsg rename_project_request = 13;
  if (has_rename_project_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->rename_project_request(), target);
  }

  // optional .protobuf.RenameProjectResponseMsg rename_project_response = 14;
  if (has_rename_project_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        14, this->rename_project_response(), target);
  }

  // optional .protobuf.RemoveProjectRequestMsg remove_project_request = 15;
  if (has_remove_project_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        15, this->remove_project_request(), target);
  }

  // optional .protobuf.RemoveProjectResponseMsg remove_project_response = 16;
  if (has_remove_project_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        16, this->remove_project_response(), target);
  }

  // optional .protobuf.SetActiveProjectRequestMsg set_active_project_request = 17;
  if (has_set_active_project_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        17, this->set_active_project_request(), target);
  }

  // optional .protobuf.SetActiveProjectResponseMsg set_active_project_response = 18;
  if (has_set_active_project_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        18, this->set_active_project_response(), target);
  }

  // optional .protobuf.ActiveProjectMsg active_project = 19;
  if (has_active_project()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        19, this->active_project(), target);
  }

  // optional .protobuf.ProjectListMsg project_list = 20;
  if (has_project_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        20, this->project_list(), target);
  }

  // optional .protobuf.SetProjectMetadataRequestMsg set_project_metadata_request = 21;
  if (has_set_project_metadata_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        21, this->set_project_metadata_request(), target);
  }

  // optional .protobuf.SetProjectMetadataResponseMsg set_project_metadata_response = 22;
  if (has_set_project_metadata_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        22, this->set_project_metadata_response(), target);
  }

  // optional .protobuf.ProjectMetadataMsg project_metadata = 23;
  if (has_project_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        23, this->project_metadata(), target);
  }

  // optional .protobuf.ExperimentDataCollectionStartRequestMsg experiment_data_collection_start_request = 24;
  if (has_experiment_data_collection_start_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        24, this->experiment_data_collection_start_request(), target);
  }

  // optional .protobuf.ExperimentDataCollectionStartResponseMsg experiment_data_collection_start_response = 25;
  if (has_experiment_data_collection_start_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        25, this->experiment_data_collection_start_response(), target);
  }

  // optional .protobuf.ExperimentDataCollectionStopRequestMsg experiment_data_collection_stop_request = 26;
  if (has_experiment_data_collection_stop_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        26, this->experiment_data_collection_stop_request(), target);
  }

  // optional .protobuf.ExperimentDataCollectionStopResponseMsg experiment_data_collection_stop_response = 27;
  if (has_experiment_data_collection_stop_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        27, this->experiment_data_collection_stop_response(), target);
  }

  // optional .protobuf.RenameExperimentRequestMsg rename_experiment_request = 28;
  if (has_rename_experiment_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        28, this->rename_experiment_request(), target);
  }

  // optional .protobuf.RenameExperimentResponseMsg rename_experiment_response = 29;
  if (has_rename_experiment_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        29, this->rename_experiment_response(), target);
  }

  // optional .protobuf.RemoveExperimentRequestMsg remove_experiment_request = 30;
  if (has_remove_experiment_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        30, this->remove_experiment_request(), target);
  }

  // optional .protobuf.RemoveExperimentResponseMsg remove_experiment_response = 31;
  if (has_remove_experiment_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        31, this->remove_experiment_response(), target);
  }

  // optional .protobuf.ExperimentPlaybackStartRequestMsg experiment_playback_start_request = 32;
  if (has_experiment_playback_start_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        32, this->experiment_playback_start_request(), target);
  }

  // optional .protobuf.ExperimentPlaybackStartResponseMsg experiment_playback_start_response = 33;
  if (has_experiment_playback_start_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        33, this->experiment_playback_start_response(), target);
  }

  // optional .protobuf.ExperimentPlaybackStopRequestMsg experiment_playback_stop_request = 34;
  if (has_experiment_playback_stop_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        34, this->experiment_playback_stop_request(), target);
  }

  // optional .protobuf.ExperimentPlaybackStopResponseMsg experiment_playback_stop_response = 35;
  if (has_experiment_playback_stop_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        35, this->experiment_playback_stop_response(), target);
  }

  // optional .protobuf.ExperimentListMsg experiment_list = 36;
  if (has_experiment_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        36, this->experiment_list(), target);
  }

  // optional .protobuf.SetExperimentMetadataRequestMsg set_experiment_metadata_request = 37;
  if (has_set_experiment_metadata_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        37, this->set_experiment_metadata_request(), target);
  }

  // optional .protobuf.SetExperimentMetadataResponseMsg set_experiment_metadata_response = 38;
  if (has_set_experiment_metadata_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        38, this->set_experiment_metadata_response(), target);
  }

  // optional .protobuf.ExperimentMetadataMsg experiment_metadata = 39;
  if (has_experiment_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        39, this->experiment_metadata(), target);
  }

  // optional .protobuf.DebugMsg debug_message = 40;
  if (has_debug_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        40, this->debug_message(), target);
  }

  // optional .protobuf.ErrorMsg error_message = 41;
  if (has_error_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        41, this->error_message(), target);
  }

  // optional .protobuf.ActiveExperimentMsg active_experiment = 42;
  if (has_active_experiment()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        42, this->active_experiment(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GeneralMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .protobuf.GeneralMsg.SubType sub_type = 1;
    if (has_sub_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->sub_type());
    }

    // optional .protobuf.DataMsg data = 2;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

    // optional .protobuf.SetDynamicEventRequestMsg set_dynamic_event_request = 3;
    if (has_set_dynamic_event_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->set_dynamic_event_request());
    }

    // optional .protobuf.SetDynamicEventResponseMsg set_dynamic_event_response = 4;
    if (has_set_dynamic_event_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->set_dynamic_event_response());
    }

    // optional .protobuf.DynamicEventMsg dynamic_event = 5;
    if (has_dynamic_event()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->dynamic_event());
    }

    // optional .protobuf.ConfigurationMsg configuration = 6;
    if (has_configuration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->configuration());
    }

    // optional .protobuf.SettingsRequestMsg settings_request = 7;
    if (has_settings_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->settings_request());
    }

    // optional .protobuf.SettingsResponseMsg settings_response = 8;
    if (has_settings_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->settings_response());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional .protobuf.SensorStatusMsg sensor_status = 9;
    if (has_sensor_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sensor_status());
    }

    // optional .protobuf.StatusMsg status = 10;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->status());
    }

    // optional .protobuf.CreateNewProjectRequestMsg create_new_project_request = 11;
    if (has_create_new_project_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->create_new_project_request());
    }

    // optional .protobuf.CreateNewProjectResponseMsg create_new_project_response = 12;
    if (has_create_new_project_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->create_new_project_response());
    }

    // optional .protobuf.RenameProjectRequestMsg rename_project_request = 13;
    if (has_rename_project_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->rename_project_request());
    }

    // optional .protobuf.RenameProjectResponseMsg rename_project_response = 14;
    if (has_rename_project_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->rename_project_response());
    }

    // optional .protobuf.RemoveProjectRequestMsg remove_project_request = 15;
    if (has_remove_project_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->remove_project_request());
    }

    // optional .protobuf.RemoveProjectResponseMsg remove_project_response = 16;
    if (has_remove_project_response()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->remove_project_response());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional .protobuf.SetActiveProjectRequestMsg set_active_project_request = 17;
    if (has_set_active_project_request()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->set_active_project_request());
    }

    // optional .protobuf.SetActiveProjectResponseMsg set_active_project_response = 18;
    if (has_set_active_project_response()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->set_active_project_response());
    }

    // optional .protobuf.ActiveProjectMsg active_project = 19;
    if (has_active_project()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->active_project());
    }

    // optional .protobuf.ProjectListMsg project_list = 20;
    if (has_project_list()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->project_list());
    }

    // optional .protobuf.SetProjectMetadataRequestMsg set_project_metadata_request = 21;
    if (has_set_project_metadata_request()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->set_project_metadata_request());
    }

    // optional .protobuf.SetProjectMetadataResponseMsg set_project_metadata_response = 22;
    if (has_set_project_metadata_response()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->set_project_metadata_response());
    }

    // optional .protobuf.ProjectMetadataMsg project_metadata = 23;
    if (has_project_metadata()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->project_metadata());
    }

    // optional .protobuf.ExperimentDataCollectionStartRequestMsg experiment_data_collection_start_request = 24;
    if (has_experiment_data_collection_start_request()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->experiment_data_collection_start_request());
    }

  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // optional .protobuf.ExperimentDataCollectionStartResponseMsg experiment_data_collection_start_response = 25;
    if (has_experiment_data_collection_start_response()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->experiment_data_collection_start_response());
    }

    // optional .protobuf.ExperimentDataCollectionStopRequestMsg experiment_data_collection_stop_request = 26;
    if (has_experiment_data_collection_stop_request()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->experiment_data_collection_stop_request());
    }

    // optional .protobuf.ExperimentDataCollectionStopResponseMsg experiment_data_collection_stop_response = 27;
    if (has_experiment_data_collection_stop_response()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->experiment_data_collection_stop_response());
    }

    // optional .protobuf.RenameExperimentRequestMsg rename_experiment_request = 28;
    if (has_rename_experiment_request()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->rename_experiment_request());
    }

    // optional .protobuf.RenameExperimentResponseMsg rename_experiment_response = 29;
    if (has_rename_experiment_response()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->rename_experiment_response());
    }

    // optional .protobuf.RemoveExperimentRequestMsg remove_experiment_request = 30;
    if (has_remove_experiment_request()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->remove_experiment_request());
    }

    // optional .protobuf.RemoveExperimentResponseMsg remove_experiment_response = 31;
    if (has_remove_experiment_response()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->remove_experiment_response());
    }

    // optional .protobuf.ExperimentPlaybackStartRequestMsg experiment_playback_start_request = 32;
    if (has_experiment_playback_start_request()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->experiment_playback_start_request());
    }

  }
  if (_has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    // optional .protobuf.ExperimentPlaybackStartResponseMsg experiment_playback_start_response = 33;
    if (has_experiment_playback_start_response()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->experiment_playback_start_response());
    }

    // optional .protobuf.ExperimentPlaybackStopRequestMsg experiment_playback_stop_request = 34;
    if (has_experiment_playback_stop_request()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->experiment_playback_stop_request());
    }

    // optional .protobuf.ExperimentPlaybackStopResponseMsg experiment_playback_stop_response = 35;
    if (has_experiment_playback_stop_response()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->experiment_playback_stop_response());
    }

    // optional .protobuf.ExperimentListMsg experiment_list = 36;
    if (has_experiment_list()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->experiment_list());
    }

    // optional .protobuf.SetExperimentMetadataRequestMsg set_experiment_metadata_request = 37;
    if (has_set_experiment_metadata_request()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->set_experiment_metadata_request());
    }

    // optional .protobuf.SetExperimentMetadataResponseMsg set_experiment_metadata_response = 38;
    if (has_set_experiment_metadata_response()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->set_experiment_metadata_response());
    }

    // optional .protobuf.ExperimentMetadataMsg experiment_metadata = 39;
    if (has_experiment_metadata()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->experiment_metadata());
    }

    // optional .protobuf.DebugMsg debug_message = 40;
    if (has_debug_message()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->debug_message());
    }

  }
  if (_has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    // optional .protobuf.ErrorMsg error_message = 41;
    if (has_error_message()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->error_message());
    }

    // optional .protobuf.ActiveExperimentMsg active_experiment = 42;
    if (has_active_experiment()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->active_experiment());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GeneralMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GeneralMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GeneralMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GeneralMsg::MergeFrom(const GeneralMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sub_type()) {
      set_sub_type(from.sub_type());
    }
    if (from.has_data()) {
      mutable_data()->::protobuf::DataMsg::MergeFrom(from.data());
    }
    if (from.has_set_dynamic_event_request()) {
      mutable_set_dynamic_event_request()->::protobuf::SetDynamicEventRequestMsg::MergeFrom(from.set_dynamic_event_request());
    }
    if (from.has_set_dynamic_event_response()) {
      mutable_set_dynamic_event_response()->::protobuf::SetDynamicEventResponseMsg::MergeFrom(from.set_dynamic_event_response());
    }
    if (from.has_dynamic_event()) {
      mutable_dynamic_event()->::protobuf::DynamicEventMsg::MergeFrom(from.dynamic_event());
    }
    if (from.has_configuration()) {
      mutable_configuration()->::protobuf::ConfigurationMsg::MergeFrom(from.configuration());
    }
    if (from.has_settings_request()) {
      mutable_settings_request()->::protobuf::SettingsRequestMsg::MergeFrom(from.settings_request());
    }
    if (from.has_settings_response()) {
      mutable_settings_response()->::protobuf::SettingsResponseMsg::MergeFrom(from.settings_response());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_sensor_status()) {
      mutable_sensor_status()->::protobuf::SensorStatusMsg::MergeFrom(from.sensor_status());
    }
    if (from.has_status()) {
      mutable_status()->::protobuf::StatusMsg::MergeFrom(from.status());
    }
    if (from.has_create_new_project_request()) {
      mutable_create_new_project_request()->::protobuf::CreateNewProjectRequestMsg::MergeFrom(from.create_new_project_request());
    }
    if (from.has_create_new_project_response()) {
      mutable_create_new_project_response()->::protobuf::CreateNewProjectResponseMsg::MergeFrom(from.create_new_project_response());
    }
    if (from.has_rename_project_request()) {
      mutable_rename_project_request()->::protobuf::RenameProjectRequestMsg::MergeFrom(from.rename_project_request());
    }
    if (from.has_rename_project_response()) {
      mutable_rename_project_response()->::protobuf::RenameProjectResponseMsg::MergeFrom(from.rename_project_response());
    }
    if (from.has_remove_project_request()) {
      mutable_remove_project_request()->::protobuf::RemoveProjectRequestMsg::MergeFrom(from.remove_project_request());
    }
    if (from.has_remove_project_response()) {
      mutable_remove_project_response()->::protobuf::RemoveProjectResponseMsg::MergeFrom(from.remove_project_response());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_set_active_project_request()) {
      mutable_set_active_project_request()->::protobuf::SetActiveProjectRequestMsg::MergeFrom(from.set_active_project_request());
    }
    if (from.has_set_active_project_response()) {
      mutable_set_active_project_response()->::protobuf::SetActiveProjectResponseMsg::MergeFrom(from.set_active_project_response());
    }
    if (from.has_active_project()) {
      mutable_active_project()->::protobuf::ActiveProjectMsg::MergeFrom(from.active_project());
    }
    if (from.has_project_list()) {
      mutable_project_list()->::protobuf::ProjectListMsg::MergeFrom(from.project_list());
    }
    if (from.has_set_project_metadata_request()) {
      mutable_set_project_metadata_request()->::protobuf::SetProjectMetadataRequestMsg::MergeFrom(from.set_project_metadata_request());
    }
    if (from.has_set_project_metadata_response()) {
      mutable_set_project_metadata_response()->::protobuf::SetProjectMetadataResponseMsg::MergeFrom(from.set_project_metadata_response());
    }
    if (from.has_project_metadata()) {
      mutable_project_metadata()->::protobuf::ProjectMetadataMsg::MergeFrom(from.project_metadata());
    }
    if (from.has_experiment_data_collection_start_request()) {
      mutable_experiment_data_collection_start_request()->::protobuf::ExperimentDataCollectionStartRequestMsg::MergeFrom(from.experiment_data_collection_start_request());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_experiment_data_collection_start_response()) {
      mutable_experiment_data_collection_start_response()->::protobuf::ExperimentDataCollectionStartResponseMsg::MergeFrom(from.experiment_data_collection_start_response());
    }
    if (from.has_experiment_data_collection_stop_request()) {
      mutable_experiment_data_collection_stop_request()->::protobuf::ExperimentDataCollectionStopRequestMsg::MergeFrom(from.experiment_data_collection_stop_request());
    }
    if (from.has_experiment_data_collection_stop_response()) {
      mutable_experiment_data_collection_stop_response()->::protobuf::ExperimentDataCollectionStopResponseMsg::MergeFrom(from.experiment_data_collection_stop_response());
    }
    if (from.has_rename_experiment_request()) {
      mutable_rename_experiment_request()->::protobuf::RenameExperimentRequestMsg::MergeFrom(from.rename_experiment_request());
    }
    if (from.has_rename_experiment_response()) {
      mutable_rename_experiment_response()->::protobuf::RenameExperimentResponseMsg::MergeFrom(from.rename_experiment_response());
    }
    if (from.has_remove_experiment_request()) {
      mutable_remove_experiment_request()->::protobuf::RemoveExperimentRequestMsg::MergeFrom(from.remove_experiment_request());
    }
    if (from.has_remove_experiment_response()) {
      mutable_remove_experiment_response()->::protobuf::RemoveExperimentResponseMsg::MergeFrom(from.remove_experiment_response());
    }
    if (from.has_experiment_playback_start_request()) {
      mutable_experiment_playback_start_request()->::protobuf::ExperimentPlaybackStartRequestMsg::MergeFrom(from.experiment_playback_start_request());
    }
  }
  if (from._has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    if (from.has_experiment_playback_start_response()) {
      mutable_experiment_playback_start_response()->::protobuf::ExperimentPlaybackStartResponseMsg::MergeFrom(from.experiment_playback_start_response());
    }
    if (from.has_experiment_playback_stop_request()) {
      mutable_experiment_playback_stop_request()->::protobuf::ExperimentPlaybackStopRequestMsg::MergeFrom(from.experiment_playback_stop_request());
    }
    if (from.has_experiment_playback_stop_response()) {
      mutable_experiment_playback_stop_response()->::protobuf::ExperimentPlaybackStopResponseMsg::MergeFrom(from.experiment_playback_stop_response());
    }
    if (from.has_experiment_list()) {
      mutable_experiment_list()->::protobuf::ExperimentListMsg::MergeFrom(from.experiment_list());
    }
    if (from.has_set_experiment_metadata_request()) {
      mutable_set_experiment_metadata_request()->::protobuf::SetExperimentMetadataRequestMsg::MergeFrom(from.set_experiment_metadata_request());
    }
    if (from.has_set_experiment_metadata_response()) {
      mutable_set_experiment_metadata_response()->::protobuf::SetExperimentMetadataResponseMsg::MergeFrom(from.set_experiment_metadata_response());
    }
    if (from.has_experiment_metadata()) {
      mutable_experiment_metadata()->::protobuf::ExperimentMetadataMsg::MergeFrom(from.experiment_metadata());
    }
    if (from.has_debug_message()) {
      mutable_debug_message()->::protobuf::DebugMsg::MergeFrom(from.debug_message());
    }
  }
  if (from._has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    if (from.has_error_message()) {
      mutable_error_message()->::protobuf::ErrorMsg::MergeFrom(from.error_message());
    }
    if (from.has_active_experiment()) {
      mutable_active_experiment()->::protobuf::ActiveExperimentMsg::MergeFrom(from.active_experiment());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GeneralMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GeneralMsg::CopyFrom(const GeneralMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GeneralMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_data()) {
    if (!this->data().IsInitialized()) return false;
  }
  if (has_set_dynamic_event_request()) {
    if (!this->set_dynamic_event_request().IsInitialized()) return false;
  }
  if (has_set_dynamic_event_response()) {
    if (!this->set_dynamic_event_response().IsInitialized()) return false;
  }
  if (has_dynamic_event()) {
    if (!this->dynamic_event().IsInitialized()) return false;
  }
  if (has_configuration()) {
    if (!this->configuration().IsInitialized()) return false;
  }
  if (has_settings_request()) {
    if (!this->settings_request().IsInitialized()) return false;
  }
  if (has_settings_response()) {
    if (!this->settings_response().IsInitialized()) return false;
  }
  if (has_sensor_status()) {
    if (!this->sensor_status().IsInitialized()) return false;
  }
  if (has_status()) {
    if (!this->status().IsInitialized()) return false;
  }
  if (has_create_new_project_request()) {
    if (!this->create_new_project_request().IsInitialized()) return false;
  }
  if (has_create_new_project_response()) {
    if (!this->create_new_project_response().IsInitialized()) return false;
  }
  if (has_rename_project_request()) {
    if (!this->rename_project_request().IsInitialized()) return false;
  }
  if (has_rename_project_response()) {
    if (!this->rename_project_response().IsInitialized()) return false;
  }
  if (has_remove_project_request()) {
    if (!this->remove_project_request().IsInitialized()) return false;
  }
  if (has_remove_project_response()) {
    if (!this->remove_project_response().IsInitialized()) return false;
  }
  if (has_set_active_project_request()) {
    if (!this->set_active_project_request().IsInitialized()) return false;
  }
  if (has_set_active_project_response()) {
    if (!this->set_active_project_response().IsInitialized()) return false;
  }
  if (has_set_project_metadata_request()) {
    if (!this->set_project_metadata_request().IsInitialized()) return false;
  }
  if (has_set_project_metadata_response()) {
    if (!this->set_project_metadata_response().IsInitialized()) return false;
  }
  if (has_project_metadata()) {
    if (!this->project_metadata().IsInitialized()) return false;
  }
  if (has_experiment_data_collection_start_request()) {
    if (!this->experiment_data_collection_start_request().IsInitialized()) return false;
  }
  if (has_experiment_data_collection_start_response()) {
    if (!this->experiment_data_collection_start_response().IsInitialized()) return false;
  }
  if (has_experiment_data_collection_stop_response()) {
    if (!this->experiment_data_collection_stop_response().IsInitialized()) return false;
  }
  if (has_rename_experiment_request()) {
    if (!this->rename_experiment_request().IsInitialized()) return false;
  }
  if (has_rename_experiment_response()) {
    if (!this->rename_experiment_response().IsInitialized()) return false;
  }
  if (has_remove_experiment_request()) {
    if (!this->remove_experiment_request().IsInitialized()) return false;
  }
  if (has_remove_experiment_response()) {
    if (!this->remove_experiment_response().IsInitialized()) return false;
  }
  if (has_experiment_playback_start_request()) {
    if (!this->experiment_playback_start_request().IsInitialized()) return false;
  }
  if (has_experiment_playback_start_response()) {
    if (!this->experiment_playback_start_response().IsInitialized()) return false;
  }
  if (has_experiment_playback_stop_response()) {
    if (!this->experiment_playback_stop_response().IsInitialized()) return false;
  }
  if (has_set_experiment_metadata_request()) {
    if (!this->set_experiment_metadata_request().IsInitialized()) return false;
  }
  if (has_set_experiment_metadata_response()) {
    if (!this->set_experiment_metadata_response().IsInitialized()) return false;
  }
  if (has_experiment_metadata()) {
    if (!this->experiment_metadata().IsInitialized()) return false;
  }
  if (has_debug_message()) {
    if (!this->debug_message().IsInitialized()) return false;
  }
  if (has_error_message()) {
    if (!this->error_message().IsInitialized()) return false;
  }
  return true;
}

void GeneralMsg::Swap(GeneralMsg* other) {
  if (other != this) {
    std::swap(sub_type_, other->sub_type_);
    std::swap(data_, other->data_);
    std::swap(set_dynamic_event_request_, other->set_dynamic_event_request_);
    std::swap(set_dynamic_event_response_, other->set_dynamic_event_response_);
    std::swap(dynamic_event_, other->dynamic_event_);
    std::swap(configuration_, other->configuration_);
    std::swap(settings_request_, other->settings_request_);
    std::swap(settings_response_, other->settings_response_);
    std::swap(sensor_status_, other->sensor_status_);
    std::swap(status_, other->status_);
    std::swap(create_new_project_request_, other->create_new_project_request_);
    std::swap(create_new_project_response_, other->create_new_project_response_);
    std::swap(rename_project_request_, other->rename_project_request_);
    std::swap(rename_project_response_, other->rename_project_response_);
    std::swap(remove_project_request_, other->remove_project_request_);
    std::swap(remove_project_response_, other->remove_project_response_);
    std::swap(set_active_project_request_, other->set_active_project_request_);
    std::swap(set_active_project_response_, other->set_active_project_response_);
    std::swap(active_project_, other->active_project_);
    std::swap(project_list_, other->project_list_);
    std::swap(set_project_metadata_request_, other->set_project_metadata_request_);
    std::swap(set_project_metadata_response_, other->set_project_metadata_response_);
    std::swap(project_metadata_, other->project_metadata_);
    std::swap(experiment_data_collection_start_request_, other->experiment_data_collection_start_request_);
    std::swap(experiment_data_collection_start_response_, other->experiment_data_collection_start_response_);
    std::swap(experiment_data_collection_stop_request_, other->experiment_data_collection_stop_request_);
    std::swap(experiment_data_collection_stop_response_, other->experiment_data_collection_stop_response_);
    std::swap(rename_experiment_request_, other->rename_experiment_request_);
    std::swap(rename_experiment_response_, other->rename_experiment_response_);
    std::swap(remove_experiment_request_, other->remove_experiment_request_);
    std::swap(remove_experiment_response_, other->remove_experiment_response_);
    std::swap(experiment_playback_start_request_, other->experiment_playback_start_request_);
    std::swap(experiment_playback_start_response_, other->experiment_playback_start_response_);
    std::swap(experiment_playback_stop_request_, other->experiment_playback_stop_request_);
    std::swap(experiment_playback_stop_response_, other->experiment_playback_stop_response_);
    std::swap(experiment_list_, other->experiment_list_);
    std::swap(set_experiment_metadata_request_, other->set_experiment_metadata_request_);
    std::swap(set_experiment_metadata_response_, other->set_experiment_metadata_response_);
    std::swap(experiment_metadata_, other->experiment_metadata_);
    std::swap(debug_message_, other->debug_message_);
    std::swap(error_message_, other->error_message_);
    std::swap(active_experiment_, other->active_experiment_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_has_bits_[1], other->_has_bits_[1]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GeneralMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GeneralMsg_descriptor_;
  metadata.reflection = GeneralMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DataMsg::kTimeFieldNumber;
const int DataMsg::kTypeIdFieldNumber;
const int DataMsg::kDataFieldNumber;
#endif  // !_MSC_VER

DataMsg::DataMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DataMsg::InitAsDefaultInstance() {
}

DataMsg::DataMsg(const DataMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DataMsg::SharedCtor() {
  _cached_size_ = 0;
  time_ = 0;
  type_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DataMsg::~DataMsg() {
  SharedDtor();
}

void DataMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DataMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DataMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DataMsg_descriptor_;
}

const DataMsg& DataMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

DataMsg* DataMsg::default_instance_ = NULL;

DataMsg* DataMsg::New() const {
  return new DataMsg;
}

void DataMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    time_ = 0;
    type_id_ = 0;
  }
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DataMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_type_id;
        break;
      }

      // required int32 type_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_id_)));
          set_has_type_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(29)) goto parse_data;
        break;
      }

      // repeated float data = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_data:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 29, input, this->mutable_data())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_data())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(29)) goto parse_data;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DataMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required double time = 1;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->time(), output);
  }

  // required int32 type_id = 2;
  if (has_type_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type_id(), output);
  }

  // repeated float data = 3;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      3, this->data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DataMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required double time = 1;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->time(), target);
  }

  // required int32 type_id = 2;
  if (has_type_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type_id(), target);
  }

  // repeated float data = 3;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatToArray(3, this->data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DataMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double time = 1;
    if (has_time()) {
      total_size += 1 + 8;
    }

    // required int32 type_id = 2;
    if (has_type_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type_id());
    }

  }
  // repeated float data = 3;
  {
    int data_size = 0;
    data_size = 4 * this->data_size();
    total_size += 1 * this->data_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DataMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DataMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DataMsg::MergeFrom(const DataMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_time()) {
      set_time(from.time());
    }
    if (from.has_type_id()) {
      set_type_id(from.type_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DataMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataMsg::CopyFrom(const DataMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void DataMsg::Swap(DataMsg* other) {
  if (other != this) {
    std::swap(time_, other->time_);
    std::swap(type_id_, other->type_id_);
    data_.Swap(&other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DataMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DataMsg_descriptor_;
  metadata.reflection = DataMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DynamicEventStruct::kTimeFieldNumber;
const int DynamicEventStruct::kMessageFieldNumber;
#endif  // !_MSC_VER

DynamicEventStruct::DynamicEventStruct()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DynamicEventStruct::InitAsDefaultInstance() {
}

DynamicEventStruct::DynamicEventStruct(const DynamicEventStruct& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DynamicEventStruct::SharedCtor() {
  _cached_size_ = 0;
  time_ = 0;
  message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DynamicEventStruct::~DynamicEventStruct() {
  SharedDtor();
}

void DynamicEventStruct::SharedDtor() {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    delete message_;
  }
  if (this != default_instance_) {
  }
}

void DynamicEventStruct::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DynamicEventStruct::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DynamicEventStruct_descriptor_;
}

const DynamicEventStruct& DynamicEventStruct::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

DynamicEventStruct* DynamicEventStruct::default_instance_ = NULL;

DynamicEventStruct* DynamicEventStruct::New() const {
  return new DynamicEventStruct;
}

void DynamicEventStruct::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    time_ = 0;
    if (has_message()) {
      if (message_ != &::google::protobuf::internal::kEmptyString) {
        message_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DynamicEventStruct::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_message;
        break;
      }

      // required string message = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DynamicEventStruct::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required double time = 1;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->time(), output);
  }

  // required string message = 2;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->message(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DynamicEventStruct::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required double time = 1;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->time(), target);
  }

  // required string message = 2;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DynamicEventStruct::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double time = 1;
    if (has_time()) {
      total_size += 1 + 8;
    }

    // required string message = 2;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DynamicEventStruct::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DynamicEventStruct* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DynamicEventStruct*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DynamicEventStruct::MergeFrom(const DynamicEventStruct& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_time()) {
      set_time(from.time());
    }
    if (from.has_message()) {
      set_message(from.message());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DynamicEventStruct::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DynamicEventStruct::CopyFrom(const DynamicEventStruct& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DynamicEventStruct::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void DynamicEventStruct::Swap(DynamicEventStruct* other) {
  if (other != this) {
    std::swap(time_, other->time_);
    std::swap(message_, other->message_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DynamicEventStruct::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DynamicEventStruct_descriptor_;
  metadata.reflection = DynamicEventStruct_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SetDynamicEventRequestMsg::kDynamicEventFieldNumber;
#endif  // !_MSC_VER

SetDynamicEventRequestMsg::SetDynamicEventRequestMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SetDynamicEventRequestMsg::InitAsDefaultInstance() {
  dynamic_event_ = const_cast< ::protobuf::DynamicEventStruct*>(&::protobuf::DynamicEventStruct::default_instance());
}

SetDynamicEventRequestMsg::SetDynamicEventRequestMsg(const SetDynamicEventRequestMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SetDynamicEventRequestMsg::SharedCtor() {
  _cached_size_ = 0;
  dynamic_event_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetDynamicEventRequestMsg::~SetDynamicEventRequestMsg() {
  SharedDtor();
}

void SetDynamicEventRequestMsg::SharedDtor() {
  if (this != default_instance_) {
    delete dynamic_event_;
  }
}

void SetDynamicEventRequestMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetDynamicEventRequestMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetDynamicEventRequestMsg_descriptor_;
}

const SetDynamicEventRequestMsg& SetDynamicEventRequestMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

SetDynamicEventRequestMsg* SetDynamicEventRequestMsg::default_instance_ = NULL;

SetDynamicEventRequestMsg* SetDynamicEventRequestMsg::New() const {
  return new SetDynamicEventRequestMsg;
}

void SetDynamicEventRequestMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_dynamic_event()) {
      if (dynamic_event_ != NULL) dynamic_event_->::protobuf::DynamicEventStruct::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetDynamicEventRequestMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .protobuf.DynamicEventStruct dynamic_event = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dynamic_event()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SetDynamicEventRequestMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .protobuf.DynamicEventStruct dynamic_event = 1;
  if (has_dynamic_event()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->dynamic_event(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SetDynamicEventRequestMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .protobuf.DynamicEventStruct dynamic_event = 1;
  if (has_dynamic_event()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->dynamic_event(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SetDynamicEventRequestMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .protobuf.DynamicEventStruct dynamic_event = 1;
    if (has_dynamic_event()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->dynamic_event());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetDynamicEventRequestMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetDynamicEventRequestMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetDynamicEventRequestMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetDynamicEventRequestMsg::MergeFrom(const SetDynamicEventRequestMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_dynamic_event()) {
      mutable_dynamic_event()->::protobuf::DynamicEventStruct::MergeFrom(from.dynamic_event());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetDynamicEventRequestMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetDynamicEventRequestMsg::CopyFrom(const SetDynamicEventRequestMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetDynamicEventRequestMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_dynamic_event()) {
    if (!this->dynamic_event().IsInitialized()) return false;
  }
  return true;
}

void SetDynamicEventRequestMsg::Swap(SetDynamicEventRequestMsg* other) {
  if (other != this) {
    std::swap(dynamic_event_, other->dynamic_event_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetDynamicEventRequestMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetDynamicEventRequestMsg_descriptor_;
  metadata.reflection = SetDynamicEventRequestMsg_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* SetDynamicEventResponseMsg_ResponseType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetDynamicEventResponseMsg_ResponseType_descriptor_;
}
bool SetDynamicEventResponseMsg_ResponseType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const SetDynamicEventResponseMsg_ResponseType SetDynamicEventResponseMsg::SUCCESS;
const SetDynamicEventResponseMsg_ResponseType SetDynamicEventResponseMsg::ILLEGAL_TIME;
const SetDynamicEventResponseMsg_ResponseType SetDynamicEventResponseMsg::NO_ACTIVE_PROJECT;
const SetDynamicEventResponseMsg_ResponseType SetDynamicEventResponseMsg::NOT_IN_DATA_COLLECTION_MODE;
const SetDynamicEventResponseMsg_ResponseType SetDynamicEventResponseMsg::OTHER_ERROR;
const SetDynamicEventResponseMsg_ResponseType SetDynamicEventResponseMsg::ResponseType_MIN;
const SetDynamicEventResponseMsg_ResponseType SetDynamicEventResponseMsg::ResponseType_MAX;
const int SetDynamicEventResponseMsg::ResponseType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int SetDynamicEventResponseMsg::kResponseTypeFieldNumber;
#endif  // !_MSC_VER

SetDynamicEventResponseMsg::SetDynamicEventResponseMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SetDynamicEventResponseMsg::InitAsDefaultInstance() {
}

SetDynamicEventResponseMsg::SetDynamicEventResponseMsg(const SetDynamicEventResponseMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SetDynamicEventResponseMsg::SharedCtor() {
  _cached_size_ = 0;
  response_type_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetDynamicEventResponseMsg::~SetDynamicEventResponseMsg() {
  SharedDtor();
}

void SetDynamicEventResponseMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SetDynamicEventResponseMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetDynamicEventResponseMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetDynamicEventResponseMsg_descriptor_;
}

const SetDynamicEventResponseMsg& SetDynamicEventResponseMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

SetDynamicEventResponseMsg* SetDynamicEventResponseMsg::default_instance_ = NULL;

SetDynamicEventResponseMsg* SetDynamicEventResponseMsg::New() const {
  return new SetDynamicEventResponseMsg;
}

void SetDynamicEventResponseMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    response_type_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetDynamicEventResponseMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .protobuf.SetDynamicEventResponseMsg.ResponseType response_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf::SetDynamicEventResponseMsg_ResponseType_IsValid(value)) {
            set_response_type(static_cast< ::protobuf::SetDynamicEventResponseMsg_ResponseType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SetDynamicEventResponseMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .protobuf.SetDynamicEventResponseMsg.ResponseType response_type = 1;
  if (has_response_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->response_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SetDynamicEventResponseMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .protobuf.SetDynamicEventResponseMsg.ResponseType response_type = 1;
  if (has_response_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->response_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SetDynamicEventResponseMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .protobuf.SetDynamicEventResponseMsg.ResponseType response_type = 1;
    if (has_response_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->response_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetDynamicEventResponseMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetDynamicEventResponseMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetDynamicEventResponseMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetDynamicEventResponseMsg::MergeFrom(const SetDynamicEventResponseMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_response_type()) {
      set_response_type(from.response_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetDynamicEventResponseMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetDynamicEventResponseMsg::CopyFrom(const SetDynamicEventResponseMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetDynamicEventResponseMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SetDynamicEventResponseMsg::Swap(SetDynamicEventResponseMsg* other) {
  if (other != this) {
    std::swap(response_type_, other->response_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetDynamicEventResponseMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetDynamicEventResponseMsg_descriptor_;
  metadata.reflection = SetDynamicEventResponseMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DynamicEventMsg::kDynamicEventFieldNumber;
#endif  // !_MSC_VER

DynamicEventMsg::DynamicEventMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DynamicEventMsg::InitAsDefaultInstance() {
  dynamic_event_ = const_cast< ::protobuf::DynamicEventStruct*>(&::protobuf::DynamicEventStruct::default_instance());
}

DynamicEventMsg::DynamicEventMsg(const DynamicEventMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DynamicEventMsg::SharedCtor() {
  _cached_size_ = 0;
  dynamic_event_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DynamicEventMsg::~DynamicEventMsg() {
  SharedDtor();
}

void DynamicEventMsg::SharedDtor() {
  if (this != default_instance_) {
    delete dynamic_event_;
  }
}

void DynamicEventMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DynamicEventMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DynamicEventMsg_descriptor_;
}

const DynamicEventMsg& DynamicEventMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

DynamicEventMsg* DynamicEventMsg::default_instance_ = NULL;

DynamicEventMsg* DynamicEventMsg::New() const {
  return new DynamicEventMsg;
}

void DynamicEventMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_dynamic_event()) {
      if (dynamic_event_ != NULL) dynamic_event_->::protobuf::DynamicEventStruct::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DynamicEventMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .protobuf.DynamicEventStruct dynamic_event = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dynamic_event()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DynamicEventMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .protobuf.DynamicEventStruct dynamic_event = 1;
  if (has_dynamic_event()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->dynamic_event(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DynamicEventMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .protobuf.DynamicEventStruct dynamic_event = 1;
  if (has_dynamic_event()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->dynamic_event(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DynamicEventMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .protobuf.DynamicEventStruct dynamic_event = 1;
    if (has_dynamic_event()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->dynamic_event());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DynamicEventMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DynamicEventMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DynamicEventMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DynamicEventMsg::MergeFrom(const DynamicEventMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_dynamic_event()) {
      mutable_dynamic_event()->::protobuf::DynamicEventStruct::MergeFrom(from.dynamic_event());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DynamicEventMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DynamicEventMsg::CopyFrom(const DynamicEventMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DynamicEventMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_dynamic_event()) {
    if (!this->dynamic_event().IsInitialized()) return false;
  }
  return true;
}

void DynamicEventMsg::Swap(DynamicEventMsg* other) {
  if (other != this) {
    std::swap(dynamic_event_, other->dynamic_event_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DynamicEventMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DynamicEventMsg_descriptor_;
  metadata.reflection = DynamicEventMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AttributeConfiguration::kIndexFieldNumber;
const int AttributeConfiguration::kNameFieldNumber;
#endif  // !_MSC_VER

AttributeConfiguration::AttributeConfiguration()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AttributeConfiguration::InitAsDefaultInstance() {
}

AttributeConfiguration::AttributeConfiguration(const AttributeConfiguration& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AttributeConfiguration::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0u;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AttributeConfiguration::~AttributeConfiguration() {
  SharedDtor();
}

void AttributeConfiguration::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void AttributeConfiguration::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AttributeConfiguration::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AttributeConfiguration_descriptor_;
}

const AttributeConfiguration& AttributeConfiguration::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

AttributeConfiguration* AttributeConfiguration::default_instance_ = NULL;

AttributeConfiguration* AttributeConfiguration::New() const {
  return new AttributeConfiguration;
}

void AttributeConfiguration::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0u;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AttributeConfiguration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // required string name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AttributeConfiguration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->index(), output);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AttributeConfiguration::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->index(), target);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AttributeConfiguration::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->index());
    }

    // required string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AttributeConfiguration::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AttributeConfiguration* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AttributeConfiguration*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AttributeConfiguration::MergeFrom(const AttributeConfiguration& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AttributeConfiguration::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttributeConfiguration::CopyFrom(const AttributeConfiguration& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AttributeConfiguration::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void AttributeConfiguration::Swap(AttributeConfiguration* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AttributeConfiguration::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AttributeConfiguration_descriptor_;
  metadata.reflection = AttributeConfiguration_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SensorConfiguration::kSensorIdFieldNumber;
const int SensorConfiguration::kNameFieldNumber;
const int SensorConfiguration::kMaxAttributesFieldNumber;
const int SensorConfiguration::kAttributeConfigurationsFieldNumber;
#endif  // !_MSC_VER

SensorConfiguration::SensorConfiguration()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SensorConfiguration::InitAsDefaultInstance() {
}

SensorConfiguration::SensorConfiguration(const SensorConfiguration& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SensorConfiguration::SharedCtor() {
  _cached_size_ = 0;
  sensor_id_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  max_attributes_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SensorConfiguration::~SensorConfiguration() {
  SharedDtor();
}

void SensorConfiguration::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void SensorConfiguration::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SensorConfiguration::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SensorConfiguration_descriptor_;
}

const SensorConfiguration& SensorConfiguration::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

SensorConfiguration* SensorConfiguration::default_instance_ = NULL;

SensorConfiguration* SensorConfiguration::New() const {
  return new SensorConfiguration;
}

void SensorConfiguration::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    sensor_id_ = 0;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    max_attributes_ = 0u;
  }
  attribute_configurations_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SensorConfiguration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 sensor_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sensor_id_)));
          set_has_sensor_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // required string name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_max_attributes;
        break;
      }

      // required uint32 max_attributes = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_max_attributes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_attributes_)));
          set_has_max_attributes();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_attribute_configurations;
        break;
      }

      // repeated .protobuf.AttributeConfiguration attribute_configurations = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_attribute_configurations:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attribute_configurations()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_attribute_configurations;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SensorConfiguration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 sensor_id = 1;
  if (has_sensor_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->sensor_id(), output);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(), output);
  }

  // required uint32 max_attributes = 3;
  if (has_max_attributes()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->max_attributes(), output);
  }

  // repeated .protobuf.AttributeConfiguration attribute_configurations = 4;
  for (int i = 0; i < this->attribute_configurations_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->attribute_configurations(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SensorConfiguration::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 sensor_id = 1;
  if (has_sensor_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->sensor_id(), target);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // required uint32 max_attributes = 3;
  if (has_max_attributes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->max_attributes(), target);
  }

  // repeated .protobuf.AttributeConfiguration attribute_configurations = 4;
  for (int i = 0; i < this->attribute_configurations_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->attribute_configurations(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SensorConfiguration::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 sensor_id = 1;
    if (has_sensor_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sensor_id());
    }

    // required string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required uint32 max_attributes = 3;
    if (has_max_attributes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->max_attributes());
    }

  }
  // repeated .protobuf.AttributeConfiguration attribute_configurations = 4;
  total_size += 1 * this->attribute_configurations_size();
  for (int i = 0; i < this->attribute_configurations_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attribute_configurations(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SensorConfiguration::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SensorConfiguration* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SensorConfiguration*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SensorConfiguration::MergeFrom(const SensorConfiguration& from) {
  GOOGLE_CHECK_NE(&from, this);
  attribute_configurations_.MergeFrom(from.attribute_configurations_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sensor_id()) {
      set_sensor_id(from.sensor_id());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_max_attributes()) {
      set_max_attributes(from.max_attributes());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SensorConfiguration::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SensorConfiguration::CopyFrom(const SensorConfiguration& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SensorConfiguration::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  for (int i = 0; i < attribute_configurations_size(); i++) {
    if (!this->attribute_configurations(i).IsInitialized()) return false;
  }
  return true;
}

void SensorConfiguration::Swap(SensorConfiguration* other) {
  if (other != this) {
    std::swap(sensor_id_, other->sensor_id_);
    std::swap(name_, other->name_);
    std::swap(max_attributes_, other->max_attributes_);
    attribute_configurations_.Swap(&other->attribute_configurations_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SensorConfiguration::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SensorConfiguration_descriptor_;
  metadata.reflection = SensorConfiguration_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ConfigurationMsg::kSensorConfigurationsFieldNumber;
#endif  // !_MSC_VER

ConfigurationMsg::ConfigurationMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ConfigurationMsg::InitAsDefaultInstance() {
}

ConfigurationMsg::ConfigurationMsg(const ConfigurationMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ConfigurationMsg::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ConfigurationMsg::~ConfigurationMsg() {
  SharedDtor();
}

void ConfigurationMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ConfigurationMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConfigurationMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ConfigurationMsg_descriptor_;
}

const ConfigurationMsg& ConfigurationMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

ConfigurationMsg* ConfigurationMsg::default_instance_ = NULL;

ConfigurationMsg* ConfigurationMsg::New() const {
  return new ConfigurationMsg;
}

void ConfigurationMsg::Clear() {
  sensor_configurations_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ConfigurationMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .protobuf.SensorConfiguration sensor_configurations = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sensor_configurations:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_sensor_configurations()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_sensor_configurations;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ConfigurationMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .protobuf.SensorConfiguration sensor_configurations = 1;
  for (int i = 0; i < this->sensor_configurations_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->sensor_configurations(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ConfigurationMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .protobuf.SensorConfiguration sensor_configurations = 1;
  for (int i = 0; i < this->sensor_configurations_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->sensor_configurations(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ConfigurationMsg::ByteSize() const {
  int total_size = 0;

  // repeated .protobuf.SensorConfiguration sensor_configurations = 1;
  total_size += 1 * this->sensor_configurations_size();
  for (int i = 0; i < this->sensor_configurations_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->sensor_configurations(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConfigurationMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ConfigurationMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ConfigurationMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ConfigurationMsg::MergeFrom(const ConfigurationMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  sensor_configurations_.MergeFrom(from.sensor_configurations_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ConfigurationMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigurationMsg::CopyFrom(const ConfigurationMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigurationMsg::IsInitialized() const {

  for (int i = 0; i < sensor_configurations_size(); i++) {
    if (!this->sensor_configurations(i).IsInitialized()) return false;
  }
  return true;
}

void ConfigurationMsg::Swap(ConfigurationMsg* other) {
  if (other != this) {
    sensor_configurations_.Swap(&other->sensor_configurations_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ConfigurationMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ConfigurationMsg_descriptor_;
  metadata.reflection = ConfigurationMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SettingsRequestMsg::kMinTimeFieldNumber;
const int SettingsRequestMsg::kSensorIdsFieldNumber;
#endif  // !_MSC_VER

SettingsRequestMsg::SettingsRequestMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SettingsRequestMsg::InitAsDefaultInstance() {
}

SettingsRequestMsg::SettingsRequestMsg(const SettingsRequestMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SettingsRequestMsg::SharedCtor() {
  _cached_size_ = 0;
  min_time_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SettingsRequestMsg::~SettingsRequestMsg() {
  SharedDtor();
}

void SettingsRequestMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SettingsRequestMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SettingsRequestMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SettingsRequestMsg_descriptor_;
}

const SettingsRequestMsg& SettingsRequestMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

SettingsRequestMsg* SettingsRequestMsg::default_instance_ = NULL;

SettingsRequestMsg* SettingsRequestMsg::New() const {
  return new SettingsRequestMsg;
}

void SettingsRequestMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    min_time_ = 0u;
  }
  sensor_ids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SettingsRequestMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 min_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &min_time_)));
          set_has_min_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_sensor_ids;
        break;
      }

      // repeated int32 sensor_ids = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sensor_ids:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_sensor_ids())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_sensor_ids())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_sensor_ids;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SettingsRequestMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 min_time = 1;
  if (has_min_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->min_time(), output);
  }

  // repeated int32 sensor_ids = 2;
  for (int i = 0; i < this->sensor_ids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->sensor_ids(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SettingsRequestMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 min_time = 1;
  if (has_min_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->min_time(), target);
  }

  // repeated int32 sensor_ids = 2;
  for (int i = 0; i < this->sensor_ids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->sensor_ids(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SettingsRequestMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 min_time = 1;
    if (has_min_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->min_time());
    }

  }
  // repeated int32 sensor_ids = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->sensor_ids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->sensor_ids(i));
    }
    total_size += 1 * this->sensor_ids_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SettingsRequestMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SettingsRequestMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SettingsRequestMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SettingsRequestMsg::MergeFrom(const SettingsRequestMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  sensor_ids_.MergeFrom(from.sensor_ids_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_min_time()) {
      set_min_time(from.min_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SettingsRequestMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SettingsRequestMsg::CopyFrom(const SettingsRequestMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SettingsRequestMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SettingsRequestMsg::Swap(SettingsRequestMsg* other) {
  if (other != this) {
    std::swap(min_time_, other->min_time_);
    sensor_ids_.Swap(&other->sensor_ids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SettingsRequestMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SettingsRequestMsg_descriptor_;
  metadata.reflection = SettingsRequestMsg_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* SettingsResponseMsg_ResponseType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SettingsResponseMsg_ResponseType_descriptor_;
}
bool SettingsResponseMsg_ResponseType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const SettingsResponseMsg_ResponseType SettingsResponseMsg::SUCCESS;
const SettingsResponseMsg_ResponseType SettingsResponseMsg::ILLEGAL_SENSOR_ID;
const SettingsResponseMsg_ResponseType SettingsResponseMsg::OTHER_ERROR;
const SettingsResponseMsg_ResponseType SettingsResponseMsg::ResponseType_MIN;
const SettingsResponseMsg_ResponseType SettingsResponseMsg::ResponseType_MAX;
const int SettingsResponseMsg::ResponseType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int SettingsResponseMsg::kResponseTypeFieldNumber;
#endif  // !_MSC_VER

SettingsResponseMsg::SettingsResponseMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SettingsResponseMsg::InitAsDefaultInstance() {
}

SettingsResponseMsg::SettingsResponseMsg(const SettingsResponseMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SettingsResponseMsg::SharedCtor() {
  _cached_size_ = 0;
  response_type_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SettingsResponseMsg::~SettingsResponseMsg() {
  SharedDtor();
}

void SettingsResponseMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SettingsResponseMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SettingsResponseMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SettingsResponseMsg_descriptor_;
}

const SettingsResponseMsg& SettingsResponseMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

SettingsResponseMsg* SettingsResponseMsg::default_instance_ = NULL;

SettingsResponseMsg* SettingsResponseMsg::New() const {
  return new SettingsResponseMsg;
}

void SettingsResponseMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    response_type_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SettingsResponseMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .protobuf.SettingsResponseMsg.ResponseType response_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf::SettingsResponseMsg_ResponseType_IsValid(value)) {
            set_response_type(static_cast< ::protobuf::SettingsResponseMsg_ResponseType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SettingsResponseMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .protobuf.SettingsResponseMsg.ResponseType response_type = 1;
  if (has_response_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->response_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SettingsResponseMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .protobuf.SettingsResponseMsg.ResponseType response_type = 1;
  if (has_response_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->response_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SettingsResponseMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .protobuf.SettingsResponseMsg.ResponseType response_type = 1;
    if (has_response_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->response_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SettingsResponseMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SettingsResponseMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SettingsResponseMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SettingsResponseMsg::MergeFrom(const SettingsResponseMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_response_type()) {
      set_response_type(from.response_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SettingsResponseMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SettingsResponseMsg::CopyFrom(const SettingsResponseMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SettingsResponseMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SettingsResponseMsg::Swap(SettingsResponseMsg* other) {
  if (other != this) {
    std::swap(response_type_, other->response_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SettingsResponseMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SettingsResponseMsg_descriptor_;
  metadata.reflection = SettingsResponseMsg_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* SensorStatusMsg_SensorStatusType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SensorStatusMsg_SensorStatusType_descriptor_;
}
bool SensorStatusMsg_SensorStatusType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const SensorStatusMsg_SensorStatusType SensorStatusMsg::WORKING;
const SensorStatusMsg_SensorStatusType SensorStatusMsg::NOT_WORKING;
const SensorStatusMsg_SensorStatusType SensorStatusMsg::SensorStatusType_MIN;
const SensorStatusMsg_SensorStatusType SensorStatusMsg::SensorStatusType_MAX;
const int SensorStatusMsg::SensorStatusType_ARRAYSIZE;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* SensorStatusMsg_AttributeStatusType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SensorStatusMsg_AttributeStatusType_descriptor_;
}
bool SensorStatusMsg_AttributeStatusType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const SensorStatusMsg_AttributeStatusType SensorStatusMsg::INSIDE_LIMITS;
const SensorStatusMsg_AttributeStatusType SensorStatusMsg::OUTSIDE_LIMITS;
const SensorStatusMsg_AttributeStatusType SensorStatusMsg::AttributeStatusType_MIN;
const SensorStatusMsg_AttributeStatusType SensorStatusMsg::AttributeStatusType_MAX;
const int SensorStatusMsg::AttributeStatusType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int SensorStatusMsg_Attribute::kIndexFieldNumber;
const int SensorStatusMsg_Attribute::kStatusFieldNumber;
#endif  // !_MSC_VER

SensorStatusMsg_Attribute::SensorStatusMsg_Attribute()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SensorStatusMsg_Attribute::InitAsDefaultInstance() {
}

SensorStatusMsg_Attribute::SensorStatusMsg_Attribute(const SensorStatusMsg_Attribute& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SensorStatusMsg_Attribute::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0u;
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SensorStatusMsg_Attribute::~SensorStatusMsg_Attribute() {
  SharedDtor();
}

void SensorStatusMsg_Attribute::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SensorStatusMsg_Attribute::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SensorStatusMsg_Attribute::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SensorStatusMsg_Attribute_descriptor_;
}

const SensorStatusMsg_Attribute& SensorStatusMsg_Attribute::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

SensorStatusMsg_Attribute* SensorStatusMsg_Attribute::default_instance_ = NULL;

SensorStatusMsg_Attribute* SensorStatusMsg_Attribute::New() const {
  return new SensorStatusMsg_Attribute;
}

void SensorStatusMsg_Attribute::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0u;
    status_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SensorStatusMsg_Attribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_status;
        break;
      }

      // required .protobuf.SensorStatusMsg.AttributeStatusType status = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf::SensorStatusMsg_AttributeStatusType_IsValid(value)) {
            set_status(static_cast< ::protobuf::SensorStatusMsg_AttributeStatusType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SensorStatusMsg_Attribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->index(), output);
  }

  // required .protobuf.SensorStatusMsg.AttributeStatusType status = 2;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SensorStatusMsg_Attribute::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->index(), target);
  }

  // required .protobuf.SensorStatusMsg.AttributeStatusType status = 2;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SensorStatusMsg_Attribute::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->index());
    }

    // required .protobuf.SensorStatusMsg.AttributeStatusType status = 2;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SensorStatusMsg_Attribute::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SensorStatusMsg_Attribute* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SensorStatusMsg_Attribute*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SensorStatusMsg_Attribute::MergeFrom(const SensorStatusMsg_Attribute& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SensorStatusMsg_Attribute::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SensorStatusMsg_Attribute::CopyFrom(const SensorStatusMsg_Attribute& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SensorStatusMsg_Attribute::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void SensorStatusMsg_Attribute::Swap(SensorStatusMsg_Attribute* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SensorStatusMsg_Attribute::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SensorStatusMsg_Attribute_descriptor_;
  metadata.reflection = SensorStatusMsg_Attribute_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int SensorStatusMsg_Sensor::kSensorIdFieldNumber;
const int SensorStatusMsg_Sensor::kStatusFieldNumber;
const int SensorStatusMsg_Sensor::kAttributesFieldNumber;
#endif  // !_MSC_VER

SensorStatusMsg_Sensor::SensorStatusMsg_Sensor()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SensorStatusMsg_Sensor::InitAsDefaultInstance() {
}

SensorStatusMsg_Sensor::SensorStatusMsg_Sensor(const SensorStatusMsg_Sensor& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SensorStatusMsg_Sensor::SharedCtor() {
  _cached_size_ = 0;
  sensor_id_ = 0;
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SensorStatusMsg_Sensor::~SensorStatusMsg_Sensor() {
  SharedDtor();
}

void SensorStatusMsg_Sensor::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SensorStatusMsg_Sensor::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SensorStatusMsg_Sensor::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SensorStatusMsg_Sensor_descriptor_;
}

const SensorStatusMsg_Sensor& SensorStatusMsg_Sensor::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

SensorStatusMsg_Sensor* SensorStatusMsg_Sensor::default_instance_ = NULL;

SensorStatusMsg_Sensor* SensorStatusMsg_Sensor::New() const {
  return new SensorStatusMsg_Sensor;
}

void SensorStatusMsg_Sensor::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    sensor_id_ = 0;
    status_ = 1;
  }
  attributes_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SensorStatusMsg_Sensor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 sensor_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sensor_id_)));
          set_has_sensor_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_status;
        break;
      }

      // required .protobuf.SensorStatusMsg.SensorStatusType status = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf::SensorStatusMsg_SensorStatusType_IsValid(value)) {
            set_status(static_cast< ::protobuf::SensorStatusMsg_SensorStatusType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_attributes;
        break;
      }

      // repeated .protobuf.SensorStatusMsg.Attribute attributes = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_attributes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attributes()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_attributes;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SensorStatusMsg_Sensor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 sensor_id = 1;
  if (has_sensor_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->sensor_id(), output);
  }

  // required .protobuf.SensorStatusMsg.SensorStatusType status = 2;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->status(), output);
  }

  // repeated .protobuf.SensorStatusMsg.Attribute attributes = 3;
  for (int i = 0; i < this->attributes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->attributes(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SensorStatusMsg_Sensor::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 sensor_id = 1;
  if (has_sensor_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->sensor_id(), target);
  }

  // required .protobuf.SensorStatusMsg.SensorStatusType status = 2;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->status(), target);
  }

  // repeated .protobuf.SensorStatusMsg.Attribute attributes = 3;
  for (int i = 0; i < this->attributes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->attributes(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SensorStatusMsg_Sensor::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 sensor_id = 1;
    if (has_sensor_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sensor_id());
    }

    // required .protobuf.SensorStatusMsg.SensorStatusType status = 2;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  // repeated .protobuf.SensorStatusMsg.Attribute attributes = 3;
  total_size += 1 * this->attributes_size();
  for (int i = 0; i < this->attributes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attributes(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SensorStatusMsg_Sensor::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SensorStatusMsg_Sensor* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SensorStatusMsg_Sensor*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SensorStatusMsg_Sensor::MergeFrom(const SensorStatusMsg_Sensor& from) {
  GOOGLE_CHECK_NE(&from, this);
  attributes_.MergeFrom(from.attributes_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sensor_id()) {
      set_sensor_id(from.sensor_id());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SensorStatusMsg_Sensor::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SensorStatusMsg_Sensor::CopyFrom(const SensorStatusMsg_Sensor& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SensorStatusMsg_Sensor::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  for (int i = 0; i < attributes_size(); i++) {
    if (!this->attributes(i).IsInitialized()) return false;
  }
  return true;
}

void SensorStatusMsg_Sensor::Swap(SensorStatusMsg_Sensor* other) {
  if (other != this) {
    std::swap(sensor_id_, other->sensor_id_);
    std::swap(status_, other->status_);
    attributes_.Swap(&other->attributes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SensorStatusMsg_Sensor::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SensorStatusMsg_Sensor_descriptor_;
  metadata.reflection = SensorStatusMsg_Sensor_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int SensorStatusMsg::kSensorsFieldNumber;
#endif  // !_MSC_VER

SensorStatusMsg::SensorStatusMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SensorStatusMsg::InitAsDefaultInstance() {
}

SensorStatusMsg::SensorStatusMsg(const SensorStatusMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SensorStatusMsg::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SensorStatusMsg::~SensorStatusMsg() {
  SharedDtor();
}

void SensorStatusMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SensorStatusMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SensorStatusMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SensorStatusMsg_descriptor_;
}

const SensorStatusMsg& SensorStatusMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

SensorStatusMsg* SensorStatusMsg::default_instance_ = NULL;

SensorStatusMsg* SensorStatusMsg::New() const {
  return new SensorStatusMsg;
}

void SensorStatusMsg::Clear() {
  sensors_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SensorStatusMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .protobuf.SensorStatusMsg.Sensor sensors = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sensors:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_sensors()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_sensors;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SensorStatusMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .protobuf.SensorStatusMsg.Sensor sensors = 1;
  for (int i = 0; i < this->sensors_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->sensors(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SensorStatusMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .protobuf.SensorStatusMsg.Sensor sensors = 1;
  for (int i = 0; i < this->sensors_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->sensors(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SensorStatusMsg::ByteSize() const {
  int total_size = 0;

  // repeated .protobuf.SensorStatusMsg.Sensor sensors = 1;
  total_size += 1 * this->sensors_size();
  for (int i = 0; i < this->sensors_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->sensors(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SensorStatusMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SensorStatusMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SensorStatusMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SensorStatusMsg::MergeFrom(const SensorStatusMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  sensors_.MergeFrom(from.sensors_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SensorStatusMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SensorStatusMsg::CopyFrom(const SensorStatusMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SensorStatusMsg::IsInitialized() const {

  for (int i = 0; i < sensors_size(); i++) {
    if (!this->sensors(i).IsInitialized()) return false;
  }
  return true;
}

void SensorStatusMsg::Swap(SensorStatusMsg* other) {
  if (other != this) {
    sensors_.Swap(&other->sensors_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SensorStatusMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SensorStatusMsg_descriptor_;
  metadata.reflection = SensorStatusMsg_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* StatusMsg_StatusType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StatusMsg_StatusType_descriptor_;
}
bool StatusMsg_StatusType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const StatusMsg_StatusType StatusMsg::IDLE;
const StatusMsg_StatusType StatusMsg::DATA_COLLECTION;
const StatusMsg_StatusType StatusMsg::EXPERIMENT_PLAYBACK;
const StatusMsg_StatusType StatusMsg::StatusType_MIN;
const StatusMsg_StatusType StatusMsg::StatusType_MAX;
const int StatusMsg::StatusType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int StatusMsg::kStatusTypeFieldNumber;
const int StatusMsg::kProjectNameFieldNumber;
#endif  // !_MSC_VER

StatusMsg::StatusMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void StatusMsg::InitAsDefaultInstance() {
}

StatusMsg::StatusMsg(const StatusMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void StatusMsg::SharedCtor() {
  _cached_size_ = 0;
  status_type_ = 1;
  project_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StatusMsg::~StatusMsg() {
  SharedDtor();
}

void StatusMsg::SharedDtor() {
  if (project_name_ != &::google::protobuf::internal::kEmptyString) {
    delete project_name_;
  }
  if (this != default_instance_) {
  }
}

void StatusMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StatusMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StatusMsg_descriptor_;
}

const StatusMsg& StatusMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

StatusMsg* StatusMsg::default_instance_ = NULL;

StatusMsg* StatusMsg::New() const {
  return new StatusMsg;
}

void StatusMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    status_type_ = 1;
    if (has_project_name()) {
      if (project_name_ != &::google::protobuf::internal::kEmptyString) {
        project_name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StatusMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .protobuf.StatusMsg.StatusType status_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf::StatusMsg_StatusType_IsValid(value)) {
            set_status_type(static_cast< ::protobuf::StatusMsg_StatusType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_project_name;
        break;
      }

      // optional string project_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_project_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->project_name().data(), this->project_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void StatusMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .protobuf.StatusMsg.StatusType status_type = 1;
  if (has_status_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status_type(), output);
  }

  // optional string project_name = 2;
  if (has_project_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->project_name().data(), this->project_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->project_name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* StatusMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .protobuf.StatusMsg.StatusType status_type = 1;
  if (has_status_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status_type(), target);
  }

  // optional string project_name = 2;
  if (has_project_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->project_name().data(), this->project_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->project_name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int StatusMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .protobuf.StatusMsg.StatusType status_type = 1;
    if (has_status_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status_type());
    }

    // optional string project_name = 2;
    if (has_project_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->project_name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StatusMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StatusMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StatusMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StatusMsg::MergeFrom(const StatusMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status_type()) {
      set_status_type(from.status_type());
    }
    if (from.has_project_name()) {
      set_project_name(from.project_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StatusMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatusMsg::CopyFrom(const StatusMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatusMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void StatusMsg::Swap(StatusMsg* other) {
  if (other != this) {
    std::swap(status_type_, other->status_type_);
    std::swap(project_name_, other->project_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StatusMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StatusMsg_descriptor_;
  metadata.reflection = StatusMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CreateNewProjectRequestMsg::kNameFieldNumber;
#endif  // !_MSC_VER

CreateNewProjectRequestMsg::CreateNewProjectRequestMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CreateNewProjectRequestMsg::InitAsDefaultInstance() {
}

CreateNewProjectRequestMsg::CreateNewProjectRequestMsg(const CreateNewProjectRequestMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CreateNewProjectRequestMsg::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateNewProjectRequestMsg::~CreateNewProjectRequestMsg() {
  SharedDtor();
}

void CreateNewProjectRequestMsg::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void CreateNewProjectRequestMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateNewProjectRequestMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateNewProjectRequestMsg_descriptor_;
}

const CreateNewProjectRequestMsg& CreateNewProjectRequestMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

CreateNewProjectRequestMsg* CreateNewProjectRequestMsg::default_instance_ = NULL;

CreateNewProjectRequestMsg* CreateNewProjectRequestMsg::New() const {
  return new CreateNewProjectRequestMsg;
}

void CreateNewProjectRequestMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CreateNewProjectRequestMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CreateNewProjectRequestMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CreateNewProjectRequestMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CreateNewProjectRequestMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateNewProjectRequestMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CreateNewProjectRequestMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CreateNewProjectRequestMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CreateNewProjectRequestMsg::MergeFrom(const CreateNewProjectRequestMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CreateNewProjectRequestMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateNewProjectRequestMsg::CopyFrom(const CreateNewProjectRequestMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateNewProjectRequestMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CreateNewProjectRequestMsg::Swap(CreateNewProjectRequestMsg* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CreateNewProjectRequestMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateNewProjectRequestMsg_descriptor_;
  metadata.reflection = CreateNewProjectRequestMsg_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CreateNewProjectResponseMsg_ResponseType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateNewProjectResponseMsg_ResponseType_descriptor_;
}
bool CreateNewProjectResponseMsg_ResponseType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CreateNewProjectResponseMsg_ResponseType CreateNewProjectResponseMsg::SUCCESS;
const CreateNewProjectResponseMsg_ResponseType CreateNewProjectResponseMsg::NAME_TAKEN;
const CreateNewProjectResponseMsg_ResponseType CreateNewProjectResponseMsg::ILLEGAL_NAME;
const CreateNewProjectResponseMsg_ResponseType CreateNewProjectResponseMsg::OTHER_ERROR;
const CreateNewProjectResponseMsg_ResponseType CreateNewProjectResponseMsg::ResponseType_MIN;
const CreateNewProjectResponseMsg_ResponseType CreateNewProjectResponseMsg::ResponseType_MAX;
const int CreateNewProjectResponseMsg::ResponseType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CreateNewProjectResponseMsg::kResponseTypeFieldNumber;
#endif  // !_MSC_VER

CreateNewProjectResponseMsg::CreateNewProjectResponseMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CreateNewProjectResponseMsg::InitAsDefaultInstance() {
}

CreateNewProjectResponseMsg::CreateNewProjectResponseMsg(const CreateNewProjectResponseMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CreateNewProjectResponseMsg::SharedCtor() {
  _cached_size_ = 0;
  response_type_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateNewProjectResponseMsg::~CreateNewProjectResponseMsg() {
  SharedDtor();
}

void CreateNewProjectResponseMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CreateNewProjectResponseMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateNewProjectResponseMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateNewProjectResponseMsg_descriptor_;
}

const CreateNewProjectResponseMsg& CreateNewProjectResponseMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

CreateNewProjectResponseMsg* CreateNewProjectResponseMsg::default_instance_ = NULL;

CreateNewProjectResponseMsg* CreateNewProjectResponseMsg::New() const {
  return new CreateNewProjectResponseMsg;
}

void CreateNewProjectResponseMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    response_type_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CreateNewProjectResponseMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .protobuf.CreateNewProjectResponseMsg.ResponseType response_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf::CreateNewProjectResponseMsg_ResponseType_IsValid(value)) {
            set_response_type(static_cast< ::protobuf::CreateNewProjectResponseMsg_ResponseType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CreateNewProjectResponseMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .protobuf.CreateNewProjectResponseMsg.ResponseType response_type = 1;
  if (has_response_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->response_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CreateNewProjectResponseMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .protobuf.CreateNewProjectResponseMsg.ResponseType response_type = 1;
  if (has_response_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->response_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CreateNewProjectResponseMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .protobuf.CreateNewProjectResponseMsg.ResponseType response_type = 1;
    if (has_response_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->response_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateNewProjectResponseMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CreateNewProjectResponseMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CreateNewProjectResponseMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CreateNewProjectResponseMsg::MergeFrom(const CreateNewProjectResponseMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_response_type()) {
      set_response_type(from.response_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CreateNewProjectResponseMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateNewProjectResponseMsg::CopyFrom(const CreateNewProjectResponseMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateNewProjectResponseMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CreateNewProjectResponseMsg::Swap(CreateNewProjectResponseMsg* other) {
  if (other != this) {
    std::swap(response_type_, other->response_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CreateNewProjectResponseMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateNewProjectResponseMsg_descriptor_;
  metadata.reflection = CreateNewProjectResponseMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RenameProjectRequestMsg::kOldNameFieldNumber;
const int RenameProjectRequestMsg::kNewNameFieldNumber;
#endif  // !_MSC_VER

RenameProjectRequestMsg::RenameProjectRequestMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RenameProjectRequestMsg::InitAsDefaultInstance() {
}

RenameProjectRequestMsg::RenameProjectRequestMsg(const RenameProjectRequestMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RenameProjectRequestMsg::SharedCtor() {
  _cached_size_ = 0;
  old_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  new_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RenameProjectRequestMsg::~RenameProjectRequestMsg() {
  SharedDtor();
}

void RenameProjectRequestMsg::SharedDtor() {
  if (old_name_ != &::google::protobuf::internal::kEmptyString) {
    delete old_name_;
  }
  if (new_name_ != &::google::protobuf::internal::kEmptyString) {
    delete new_name_;
  }
  if (this != default_instance_) {
  }
}

void RenameProjectRequestMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RenameProjectRequestMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RenameProjectRequestMsg_descriptor_;
}

const RenameProjectRequestMsg& RenameProjectRequestMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

RenameProjectRequestMsg* RenameProjectRequestMsg::default_instance_ = NULL;

RenameProjectRequestMsg* RenameProjectRequestMsg::New() const {
  return new RenameProjectRequestMsg;
}

void RenameProjectRequestMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_old_name()) {
      if (old_name_ != &::google::protobuf::internal::kEmptyString) {
        old_name_->clear();
      }
    }
    if (has_new_name()) {
      if (new_name_ != &::google::protobuf::internal::kEmptyString) {
        new_name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RenameProjectRequestMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string old_name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_old_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->old_name().data(), this->old_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_new_name;
        break;
      }

      // required string new_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_new_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_new_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->new_name().data(), this->new_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RenameProjectRequestMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string old_name = 1;
  if (has_old_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->old_name().data(), this->old_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->old_name(), output);
  }

  // required string new_name = 2;
  if (has_new_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->new_name().data(), this->new_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->new_name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RenameProjectRequestMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string old_name = 1;
  if (has_old_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->old_name().data(), this->old_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->old_name(), target);
  }

  // required string new_name = 2;
  if (has_new_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->new_name().data(), this->new_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->new_name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RenameProjectRequestMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string old_name = 1;
    if (has_old_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->old_name());
    }

    // required string new_name = 2;
    if (has_new_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->new_name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RenameProjectRequestMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RenameProjectRequestMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RenameProjectRequestMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RenameProjectRequestMsg::MergeFrom(const RenameProjectRequestMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_old_name()) {
      set_old_name(from.old_name());
    }
    if (from.has_new_name()) {
      set_new_name(from.new_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RenameProjectRequestMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RenameProjectRequestMsg::CopyFrom(const RenameProjectRequestMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RenameProjectRequestMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void RenameProjectRequestMsg::Swap(RenameProjectRequestMsg* other) {
  if (other != this) {
    std::swap(old_name_, other->old_name_);
    std::swap(new_name_, other->new_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RenameProjectRequestMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RenameProjectRequestMsg_descriptor_;
  metadata.reflection = RenameProjectRequestMsg_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* RenameProjectResponseMsg_ResponseType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RenameProjectResponseMsg_ResponseType_descriptor_;
}
bool RenameProjectResponseMsg_ResponseType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const RenameProjectResponseMsg_ResponseType RenameProjectResponseMsg::SUCCESS;
const RenameProjectResponseMsg_ResponseType RenameProjectResponseMsg::ILLEGAL_NAME;
const RenameProjectResponseMsg_ResponseType RenameProjectResponseMsg::NAME_TAKEN;
const RenameProjectResponseMsg_ResponseType RenameProjectResponseMsg::PROJECT_NOT_FOUND;
const RenameProjectResponseMsg_ResponseType RenameProjectResponseMsg::OTHER_ERROR;
const RenameProjectResponseMsg_ResponseType RenameProjectResponseMsg::ResponseType_MIN;
const RenameProjectResponseMsg_ResponseType RenameProjectResponseMsg::ResponseType_MAX;
const int RenameProjectResponseMsg::ResponseType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int RenameProjectResponseMsg::kResponseTypeFieldNumber;
#endif  // !_MSC_VER

RenameProjectResponseMsg::RenameProjectResponseMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RenameProjectResponseMsg::InitAsDefaultInstance() {
}

RenameProjectResponseMsg::RenameProjectResponseMsg(const RenameProjectResponseMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RenameProjectResponseMsg::SharedCtor() {
  _cached_size_ = 0;
  response_type_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RenameProjectResponseMsg::~RenameProjectResponseMsg() {
  SharedDtor();
}

void RenameProjectResponseMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RenameProjectResponseMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RenameProjectResponseMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RenameProjectResponseMsg_descriptor_;
}

const RenameProjectResponseMsg& RenameProjectResponseMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

RenameProjectResponseMsg* RenameProjectResponseMsg::default_instance_ = NULL;

RenameProjectResponseMsg* RenameProjectResponseMsg::New() const {
  return new RenameProjectResponseMsg;
}

void RenameProjectResponseMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    response_type_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RenameProjectResponseMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .protobuf.RenameProjectResponseMsg.ResponseType response_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf::RenameProjectResponseMsg_ResponseType_IsValid(value)) {
            set_response_type(static_cast< ::protobuf::RenameProjectResponseMsg_ResponseType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RenameProjectResponseMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .protobuf.RenameProjectResponseMsg.ResponseType response_type = 1;
  if (has_response_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->response_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RenameProjectResponseMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .protobuf.RenameProjectResponseMsg.ResponseType response_type = 1;
  if (has_response_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->response_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RenameProjectResponseMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .protobuf.RenameProjectResponseMsg.ResponseType response_type = 1;
    if (has_response_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->response_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RenameProjectResponseMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RenameProjectResponseMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RenameProjectResponseMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RenameProjectResponseMsg::MergeFrom(const RenameProjectResponseMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_response_type()) {
      set_response_type(from.response_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RenameProjectResponseMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RenameProjectResponseMsg::CopyFrom(const RenameProjectResponseMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RenameProjectResponseMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RenameProjectResponseMsg::Swap(RenameProjectResponseMsg* other) {
  if (other != this) {
    std::swap(response_type_, other->response_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RenameProjectResponseMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RenameProjectResponseMsg_descriptor_;
  metadata.reflection = RenameProjectResponseMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RemoveProjectRequestMsg::kNameFieldNumber;
#endif  // !_MSC_VER

RemoveProjectRequestMsg::RemoveProjectRequestMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RemoveProjectRequestMsg::InitAsDefaultInstance() {
}

RemoveProjectRequestMsg::RemoveProjectRequestMsg(const RemoveProjectRequestMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RemoveProjectRequestMsg::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RemoveProjectRequestMsg::~RemoveProjectRequestMsg() {
  SharedDtor();
}

void RemoveProjectRequestMsg::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void RemoveProjectRequestMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveProjectRequestMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RemoveProjectRequestMsg_descriptor_;
}

const RemoveProjectRequestMsg& RemoveProjectRequestMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

RemoveProjectRequestMsg* RemoveProjectRequestMsg::default_instance_ = NULL;

RemoveProjectRequestMsg* RemoveProjectRequestMsg::New() const {
  return new RemoveProjectRequestMsg;
}

void RemoveProjectRequestMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RemoveProjectRequestMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RemoveProjectRequestMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RemoveProjectRequestMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RemoveProjectRequestMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoveProjectRequestMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RemoveProjectRequestMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RemoveProjectRequestMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RemoveProjectRequestMsg::MergeFrom(const RemoveProjectRequestMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RemoveProjectRequestMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveProjectRequestMsg::CopyFrom(const RemoveProjectRequestMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveProjectRequestMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RemoveProjectRequestMsg::Swap(RemoveProjectRequestMsg* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RemoveProjectRequestMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RemoveProjectRequestMsg_descriptor_;
  metadata.reflection = RemoveProjectRequestMsg_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* RemoveProjectResponseMsg_ResponseType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RemoveProjectResponseMsg_ResponseType_descriptor_;
}
bool RemoveProjectResponseMsg_ResponseType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const RemoveProjectResponseMsg_ResponseType RemoveProjectResponseMsg::SUCCESS;
const RemoveProjectResponseMsg_ResponseType RemoveProjectResponseMsg::PROJECT_NOT_FOUND;
const RemoveProjectResponseMsg_ResponseType RemoveProjectResponseMsg::OTHER_ERROR;
const RemoveProjectResponseMsg_ResponseType RemoveProjectResponseMsg::ResponseType_MIN;
const RemoveProjectResponseMsg_ResponseType RemoveProjectResponseMsg::ResponseType_MAX;
const int RemoveProjectResponseMsg::ResponseType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int RemoveProjectResponseMsg::kResponseTypeFieldNumber;
#endif  // !_MSC_VER

RemoveProjectResponseMsg::RemoveProjectResponseMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RemoveProjectResponseMsg::InitAsDefaultInstance() {
}

RemoveProjectResponseMsg::RemoveProjectResponseMsg(const RemoveProjectResponseMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RemoveProjectResponseMsg::SharedCtor() {
  _cached_size_ = 0;
  response_type_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RemoveProjectResponseMsg::~RemoveProjectResponseMsg() {
  SharedDtor();
}

void RemoveProjectResponseMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RemoveProjectResponseMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveProjectResponseMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RemoveProjectResponseMsg_descriptor_;
}

const RemoveProjectResponseMsg& RemoveProjectResponseMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

RemoveProjectResponseMsg* RemoveProjectResponseMsg::default_instance_ = NULL;

RemoveProjectResponseMsg* RemoveProjectResponseMsg::New() const {
  return new RemoveProjectResponseMsg;
}

void RemoveProjectResponseMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    response_type_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RemoveProjectResponseMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .protobuf.RemoveProjectResponseMsg.ResponseType response_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf::RemoveProjectResponseMsg_ResponseType_IsValid(value)) {
            set_response_type(static_cast< ::protobuf::RemoveProjectResponseMsg_ResponseType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RemoveProjectResponseMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .protobuf.RemoveProjectResponseMsg.ResponseType response_type = 1;
  if (has_response_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->response_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RemoveProjectResponseMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .protobuf.RemoveProjectResponseMsg.ResponseType response_type = 1;
  if (has_response_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->response_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RemoveProjectResponseMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .protobuf.RemoveProjectResponseMsg.ResponseType response_type = 1;
    if (has_response_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->response_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoveProjectResponseMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RemoveProjectResponseMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RemoveProjectResponseMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RemoveProjectResponseMsg::MergeFrom(const RemoveProjectResponseMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_response_type()) {
      set_response_type(from.response_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RemoveProjectResponseMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveProjectResponseMsg::CopyFrom(const RemoveProjectResponseMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveProjectResponseMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RemoveProjectResponseMsg::Swap(RemoveProjectResponseMsg* other) {
  if (other != this) {
    std::swap(response_type_, other->response_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RemoveProjectResponseMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RemoveProjectResponseMsg_descriptor_;
  metadata.reflection = RemoveProjectResponseMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SetActiveProjectRequestMsg::kNameFieldNumber;
#endif  // !_MSC_VER

SetActiveProjectRequestMsg::SetActiveProjectRequestMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SetActiveProjectRequestMsg::InitAsDefaultInstance() {
}

SetActiveProjectRequestMsg::SetActiveProjectRequestMsg(const SetActiveProjectRequestMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SetActiveProjectRequestMsg::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetActiveProjectRequestMsg::~SetActiveProjectRequestMsg() {
  SharedDtor();
}

void SetActiveProjectRequestMsg::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void SetActiveProjectRequestMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetActiveProjectRequestMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetActiveProjectRequestMsg_descriptor_;
}

const SetActiveProjectRequestMsg& SetActiveProjectRequestMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

SetActiveProjectRequestMsg* SetActiveProjectRequestMsg::default_instance_ = NULL;

SetActiveProjectRequestMsg* SetActiveProjectRequestMsg::New() const {
  return new SetActiveProjectRequestMsg;
}

void SetActiveProjectRequestMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetActiveProjectRequestMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SetActiveProjectRequestMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SetActiveProjectRequestMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SetActiveProjectRequestMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetActiveProjectRequestMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetActiveProjectRequestMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetActiveProjectRequestMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetActiveProjectRequestMsg::MergeFrom(const SetActiveProjectRequestMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetActiveProjectRequestMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetActiveProjectRequestMsg::CopyFrom(const SetActiveProjectRequestMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetActiveProjectRequestMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SetActiveProjectRequestMsg::Swap(SetActiveProjectRequestMsg* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetActiveProjectRequestMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetActiveProjectRequestMsg_descriptor_;
  metadata.reflection = SetActiveProjectRequestMsg_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* SetActiveProjectResponseMsg_ResponseType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetActiveProjectResponseMsg_ResponseType_descriptor_;
}
bool SetActiveProjectResponseMsg_ResponseType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const SetActiveProjectResponseMsg_ResponseType SetActiveProjectResponseMsg::SUCCESS;
const SetActiveProjectResponseMsg_ResponseType SetActiveProjectResponseMsg::PROJECT_NOT_FOUND;
const SetActiveProjectResponseMsg_ResponseType SetActiveProjectResponseMsg::NOT_IN_IDLE_MODE;
const SetActiveProjectResponseMsg_ResponseType SetActiveProjectResponseMsg::OTHER_ERROR;
const SetActiveProjectResponseMsg_ResponseType SetActiveProjectResponseMsg::ResponseType_MIN;
const SetActiveProjectResponseMsg_ResponseType SetActiveProjectResponseMsg::ResponseType_MAX;
const int SetActiveProjectResponseMsg::ResponseType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int SetActiveProjectResponseMsg::kResponseTypeFieldNumber;
#endif  // !_MSC_VER

SetActiveProjectResponseMsg::SetActiveProjectResponseMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SetActiveProjectResponseMsg::InitAsDefaultInstance() {
}

SetActiveProjectResponseMsg::SetActiveProjectResponseMsg(const SetActiveProjectResponseMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SetActiveProjectResponseMsg::SharedCtor() {
  _cached_size_ = 0;
  response_type_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetActiveProjectResponseMsg::~SetActiveProjectResponseMsg() {
  SharedDtor();
}

void SetActiveProjectResponseMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SetActiveProjectResponseMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetActiveProjectResponseMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetActiveProjectResponseMsg_descriptor_;
}

const SetActiveProjectResponseMsg& SetActiveProjectResponseMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

SetActiveProjectResponseMsg* SetActiveProjectResponseMsg::default_instance_ = NULL;

SetActiveProjectResponseMsg* SetActiveProjectResponseMsg::New() const {
  return new SetActiveProjectResponseMsg;
}

void SetActiveProjectResponseMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    response_type_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetActiveProjectResponseMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .protobuf.SetActiveProjectResponseMsg.ResponseType response_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf::SetActiveProjectResponseMsg_ResponseType_IsValid(value)) {
            set_response_type(static_cast< ::protobuf::SetActiveProjectResponseMsg_ResponseType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SetActiveProjectResponseMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .protobuf.SetActiveProjectResponseMsg.ResponseType response_type = 1;
  if (has_response_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->response_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SetActiveProjectResponseMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .protobuf.SetActiveProjectResponseMsg.ResponseType response_type = 1;
  if (has_response_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->response_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SetActiveProjectResponseMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .protobuf.SetActiveProjectResponseMsg.ResponseType response_type = 1;
    if (has_response_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->response_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetActiveProjectResponseMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetActiveProjectResponseMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetActiveProjectResponseMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetActiveProjectResponseMsg::MergeFrom(const SetActiveProjectResponseMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_response_type()) {
      set_response_type(from.response_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetActiveProjectResponseMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetActiveProjectResponseMsg::CopyFrom(const SetActiveProjectResponseMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetActiveProjectResponseMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SetActiveProjectResponseMsg::Swap(SetActiveProjectResponseMsg* other) {
  if (other != this) {
    std::swap(response_type_, other->response_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetActiveProjectResponseMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetActiveProjectResponseMsg_descriptor_;
  metadata.reflection = SetActiveProjectResponseMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ActiveProjectMsg::kNameFieldNumber;
#endif  // !_MSC_VER

ActiveProjectMsg::ActiveProjectMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ActiveProjectMsg::InitAsDefaultInstance() {
}

ActiveProjectMsg::ActiveProjectMsg(const ActiveProjectMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ActiveProjectMsg::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ActiveProjectMsg::~ActiveProjectMsg() {
  SharedDtor();
}

void ActiveProjectMsg::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void ActiveProjectMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActiveProjectMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActiveProjectMsg_descriptor_;
}

const ActiveProjectMsg& ActiveProjectMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

ActiveProjectMsg* ActiveProjectMsg::default_instance_ = NULL;

ActiveProjectMsg* ActiveProjectMsg::New() const {
  return new ActiveProjectMsg;
}

void ActiveProjectMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ActiveProjectMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ActiveProjectMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ActiveProjectMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ActiveProjectMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActiveProjectMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ActiveProjectMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ActiveProjectMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ActiveProjectMsg::MergeFrom(const ActiveProjectMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ActiveProjectMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActiveProjectMsg::CopyFrom(const ActiveProjectMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActiveProjectMsg::IsInitialized() const {

  return true;
}

void ActiveProjectMsg::Swap(ActiveProjectMsg* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ActiveProjectMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActiveProjectMsg_descriptor_;
  metadata.reflection = ActiveProjectMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ActiveExperimentMsg::kNameFieldNumber;
#endif  // !_MSC_VER

ActiveExperimentMsg::ActiveExperimentMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ActiveExperimentMsg::InitAsDefaultInstance() {
}

ActiveExperimentMsg::ActiveExperimentMsg(const ActiveExperimentMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ActiveExperimentMsg::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ActiveExperimentMsg::~ActiveExperimentMsg() {
  SharedDtor();
}

void ActiveExperimentMsg::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void ActiveExperimentMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActiveExperimentMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActiveExperimentMsg_descriptor_;
}

const ActiveExperimentMsg& ActiveExperimentMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

ActiveExperimentMsg* ActiveExperimentMsg::default_instance_ = NULL;

ActiveExperimentMsg* ActiveExperimentMsg::New() const {
  return new ActiveExperimentMsg;
}

void ActiveExperimentMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ActiveExperimentMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ActiveExperimentMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ActiveExperimentMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ActiveExperimentMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActiveExperimentMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ActiveExperimentMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ActiveExperimentMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ActiveExperimentMsg::MergeFrom(const ActiveExperimentMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ActiveExperimentMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActiveExperimentMsg::CopyFrom(const ActiveExperimentMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActiveExperimentMsg::IsInitialized() const {

  return true;
}

void ActiveExperimentMsg::Swap(ActiveExperimentMsg* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ActiveExperimentMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActiveExperimentMsg_descriptor_;
  metadata.reflection = ActiveExperimentMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProjectListMsg::kProjectsFieldNumber;
#endif  // !_MSC_VER

ProjectListMsg::ProjectListMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProjectListMsg::InitAsDefaultInstance() {
}

ProjectListMsg::ProjectListMsg(const ProjectListMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProjectListMsg::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProjectListMsg::~ProjectListMsg() {
  SharedDtor();
}

void ProjectListMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProjectListMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProjectListMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProjectListMsg_descriptor_;
}

const ProjectListMsg& ProjectListMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

ProjectListMsg* ProjectListMsg::default_instance_ = NULL;

ProjectListMsg* ProjectListMsg::New() const {
  return new ProjectListMsg;
}

void ProjectListMsg::Clear() {
  projects_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProjectListMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string projects = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_projects:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_projects()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->projects(this->projects_size() - 1).data(),
            this->projects(this->projects_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_projects;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProjectListMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated string projects = 1;
  for (int i = 0; i < this->projects_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->projects(i).data(), this->projects(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->projects(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProjectListMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated string projects = 1;
  for (int i = 0; i < this->projects_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->projects(i).data(), this->projects(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->projects(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProjectListMsg::ByteSize() const {
  int total_size = 0;

  // repeated string projects = 1;
  total_size += 1 * this->projects_size();
  for (int i = 0; i < this->projects_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->projects(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProjectListMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProjectListMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProjectListMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProjectListMsg::MergeFrom(const ProjectListMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  projects_.MergeFrom(from.projects_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProjectListMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProjectListMsg::CopyFrom(const ProjectListMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProjectListMsg::IsInitialized() const {

  return true;
}

void ProjectListMsg::Swap(ProjectListMsg* other) {
  if (other != this) {
    projects_.Swap(&other->projects_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProjectListMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProjectListMsg_descriptor_;
  metadata.reflection = ProjectListMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProjectMetadataStruct::kTestLeaderFieldNumber;
const int ProjectMetadataStruct::kDateFieldNumber;
const int ProjectMetadataStruct::kEmailFieldNumber;
const int ProjectMetadataStruct::kMemberNamesFieldNumber;
const int ProjectMetadataStruct::kTagsFieldNumber;
const int ProjectMetadataStruct::kDescriptionFieldNumber;
#endif  // !_MSC_VER

ProjectMetadataStruct::ProjectMetadataStruct()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProjectMetadataStruct::InitAsDefaultInstance() {
}

ProjectMetadataStruct::ProjectMetadataStruct(const ProjectMetadataStruct& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProjectMetadataStruct::SharedCtor() {
  _cached_size_ = 0;
  test_leader_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  date_ = GOOGLE_LONGLONG(0);
  email_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  description_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProjectMetadataStruct::~ProjectMetadataStruct() {
  SharedDtor();
}

void ProjectMetadataStruct::SharedDtor() {
  if (test_leader_ != &::google::protobuf::internal::kEmptyString) {
    delete test_leader_;
  }
  if (email_ != &::google::protobuf::internal::kEmptyString) {
    delete email_;
  }
  if (description_ != &::google::protobuf::internal::kEmptyString) {
    delete description_;
  }
  if (this != default_instance_) {
  }
}

void ProjectMetadataStruct::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProjectMetadataStruct::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProjectMetadataStruct_descriptor_;
}

const ProjectMetadataStruct& ProjectMetadataStruct::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

ProjectMetadataStruct* ProjectMetadataStruct::default_instance_ = NULL;

ProjectMetadataStruct* ProjectMetadataStruct::New() const {
  return new ProjectMetadataStruct;
}

void ProjectMetadataStruct::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_test_leader()) {
      if (test_leader_ != &::google::protobuf::internal::kEmptyString) {
        test_leader_->clear();
      }
    }
    date_ = GOOGLE_LONGLONG(0);
    if (has_email()) {
      if (email_ != &::google::protobuf::internal::kEmptyString) {
        email_->clear();
      }
    }
    if (has_description()) {
      if (description_ != &::google::protobuf::internal::kEmptyString) {
        description_->clear();
      }
    }
  }
  member_names_.Clear();
  tags_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProjectMetadataStruct::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string test_leader = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_test_leader()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->test_leader().data(), this->test_leader().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_date;
        break;
      }

      // optional int64 date = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_date:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &date_)));
          set_has_date();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_email;
        break;
      }

      // optional string email = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_email:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->email().data(), this->email().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_member_names;
        break;
      }

      // repeated string member_names = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_member_names:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_member_names()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->member_names(this->member_names_size() - 1).data(),
            this->member_names(this->member_names_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_member_names;
        if (input->ExpectTag(42)) goto parse_tags;
        break;
      }

      // repeated string tags = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_tags:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_tags()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->tags(this->tags_size() - 1).data(),
            this->tags(this->tags_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_tags;
        if (input->ExpectTag(50)) goto parse_description;
        break;
      }

      // optional string description = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_description:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProjectMetadataStruct::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string test_leader = 1;
  if (has_test_leader()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->test_leader().data(), this->test_leader().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->test_leader(), output);
  }

  // optional int64 date = 2;
  if (has_date()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->date(), output);
  }

  // optional string email = 3;
  if (has_email()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->email(), output);
  }

  // repeated string member_names = 4;
  for (int i = 0; i < this->member_names_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->member_names(i).data(), this->member_names(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->member_names(i), output);
  }

  // repeated string tags = 5;
  for (int i = 0; i < this->tags_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->tags(i).data(), this->tags(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->tags(i), output);
  }

  // optional string description = 6;
  if (has_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->description(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProjectMetadataStruct::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string test_leader = 1;
  if (has_test_leader()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->test_leader().data(), this->test_leader().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->test_leader(), target);
  }

  // optional int64 date = 2;
  if (has_date()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->date(), target);
  }

  // optional string email = 3;
  if (has_email()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->email(), target);
  }

  // repeated string member_names = 4;
  for (int i = 0; i < this->member_names_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->member_names(i).data(), this->member_names(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->member_names(i), target);
  }

  // repeated string tags = 5;
  for (int i = 0; i < this->tags_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->tags(i).data(), this->tags(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->tags(i), target);
  }

  // optional string description = 6;
  if (has_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->description(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProjectMetadataStruct::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string test_leader = 1;
    if (has_test_leader()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->test_leader());
    }

    // optional int64 date = 2;
    if (has_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->date());
    }

    // optional string email = 3;
    if (has_email()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->email());
    }

    // optional string description = 6;
    if (has_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->description());
    }

  }
  // repeated string member_names = 4;
  total_size += 1 * this->member_names_size();
  for (int i = 0; i < this->member_names_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->member_names(i));
  }

  // repeated string tags = 5;
  total_size += 1 * this->tags_size();
  for (int i = 0; i < this->tags_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->tags(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProjectMetadataStruct::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProjectMetadataStruct* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProjectMetadataStruct*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProjectMetadataStruct::MergeFrom(const ProjectMetadataStruct& from) {
  GOOGLE_CHECK_NE(&from, this);
  member_names_.MergeFrom(from.member_names_);
  tags_.MergeFrom(from.tags_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_test_leader()) {
      set_test_leader(from.test_leader());
    }
    if (from.has_date()) {
      set_date(from.date());
    }
    if (from.has_email()) {
      set_email(from.email());
    }
    if (from.has_description()) {
      set_description(from.description());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProjectMetadataStruct::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProjectMetadataStruct::CopyFrom(const ProjectMetadataStruct& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProjectMetadataStruct::IsInitialized() const {

  return true;
}

void ProjectMetadataStruct::Swap(ProjectMetadataStruct* other) {
  if (other != this) {
    std::swap(test_leader_, other->test_leader_);
    std::swap(date_, other->date_);
    std::swap(email_, other->email_);
    member_names_.Swap(&other->member_names_);
    tags_.Swap(&other->tags_);
    std::swap(description_, other->description_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProjectMetadataStruct::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProjectMetadataStruct_descriptor_;
  metadata.reflection = ProjectMetadataStruct_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SetProjectMetadataRequestMsg::kMetadataFieldNumber;
#endif  // !_MSC_VER

SetProjectMetadataRequestMsg::SetProjectMetadataRequestMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SetProjectMetadataRequestMsg::InitAsDefaultInstance() {
  metadata_ = const_cast< ::protobuf::ProjectMetadataStruct*>(&::protobuf::ProjectMetadataStruct::default_instance());
}

SetProjectMetadataRequestMsg::SetProjectMetadataRequestMsg(const SetProjectMetadataRequestMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SetProjectMetadataRequestMsg::SharedCtor() {
  _cached_size_ = 0;
  metadata_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetProjectMetadataRequestMsg::~SetProjectMetadataRequestMsg() {
  SharedDtor();
}

void SetProjectMetadataRequestMsg::SharedDtor() {
  if (this != default_instance_) {
    delete metadata_;
  }
}

void SetProjectMetadataRequestMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetProjectMetadataRequestMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetProjectMetadataRequestMsg_descriptor_;
}

const SetProjectMetadataRequestMsg& SetProjectMetadataRequestMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

SetProjectMetadataRequestMsg* SetProjectMetadataRequestMsg::default_instance_ = NULL;

SetProjectMetadataRequestMsg* SetProjectMetadataRequestMsg::New() const {
  return new SetProjectMetadataRequestMsg;
}

void SetProjectMetadataRequestMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_metadata()) {
      if (metadata_ != NULL) metadata_->::protobuf::ProjectMetadataStruct::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetProjectMetadataRequestMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .protobuf.ProjectMetadataStruct metadata = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_metadata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SetProjectMetadataRequestMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .protobuf.ProjectMetadataStruct metadata = 1;
  if (has_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->metadata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SetProjectMetadataRequestMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .protobuf.ProjectMetadataStruct metadata = 1;
  if (has_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->metadata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SetProjectMetadataRequestMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .protobuf.ProjectMetadataStruct metadata = 1;
    if (has_metadata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->metadata());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetProjectMetadataRequestMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetProjectMetadataRequestMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetProjectMetadataRequestMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetProjectMetadataRequestMsg::MergeFrom(const SetProjectMetadataRequestMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_metadata()) {
      mutable_metadata()->::protobuf::ProjectMetadataStruct::MergeFrom(from.metadata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetProjectMetadataRequestMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetProjectMetadataRequestMsg::CopyFrom(const SetProjectMetadataRequestMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetProjectMetadataRequestMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SetProjectMetadataRequestMsg::Swap(SetProjectMetadataRequestMsg* other) {
  if (other != this) {
    std::swap(metadata_, other->metadata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetProjectMetadataRequestMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetProjectMetadataRequestMsg_descriptor_;
  metadata.reflection = SetProjectMetadataRequestMsg_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* SetProjectMetadataResponseMsg_ResponseType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetProjectMetadataResponseMsg_ResponseType_descriptor_;
}
bool SetProjectMetadataResponseMsg_ResponseType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const SetProjectMetadataResponseMsg_ResponseType SetProjectMetadataResponseMsg::SUCCESS;
const SetProjectMetadataResponseMsg_ResponseType SetProjectMetadataResponseMsg::NO_ACTIVE_PROJECT;
const SetProjectMetadataResponseMsg_ResponseType SetProjectMetadataResponseMsg::OTHER_ERROR;
const SetProjectMetadataResponseMsg_ResponseType SetProjectMetadataResponseMsg::ResponseType_MIN;
const SetProjectMetadataResponseMsg_ResponseType SetProjectMetadataResponseMsg::ResponseType_MAX;
const int SetProjectMetadataResponseMsg::ResponseType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int SetProjectMetadataResponseMsg::kResponseTypeFieldNumber;
#endif  // !_MSC_VER

SetProjectMetadataResponseMsg::SetProjectMetadataResponseMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SetProjectMetadataResponseMsg::InitAsDefaultInstance() {
}

SetProjectMetadataResponseMsg::SetProjectMetadataResponseMsg(const SetProjectMetadataResponseMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SetProjectMetadataResponseMsg::SharedCtor() {
  _cached_size_ = 0;
  response_type_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetProjectMetadataResponseMsg::~SetProjectMetadataResponseMsg() {
  SharedDtor();
}

void SetProjectMetadataResponseMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SetProjectMetadataResponseMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetProjectMetadataResponseMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetProjectMetadataResponseMsg_descriptor_;
}

const SetProjectMetadataResponseMsg& SetProjectMetadataResponseMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

SetProjectMetadataResponseMsg* SetProjectMetadataResponseMsg::default_instance_ = NULL;

SetProjectMetadataResponseMsg* SetProjectMetadataResponseMsg::New() const {
  return new SetProjectMetadataResponseMsg;
}

void SetProjectMetadataResponseMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    response_type_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetProjectMetadataResponseMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .protobuf.SetProjectMetadataResponseMsg.ResponseType response_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf::SetProjectMetadataResponseMsg_ResponseType_IsValid(value)) {
            set_response_type(static_cast< ::protobuf::SetProjectMetadataResponseMsg_ResponseType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SetProjectMetadataResponseMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .protobuf.SetProjectMetadataResponseMsg.ResponseType response_type = 1;
  if (has_response_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->response_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SetProjectMetadataResponseMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .protobuf.SetProjectMetadataResponseMsg.ResponseType response_type = 1;
  if (has_response_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->response_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SetProjectMetadataResponseMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .protobuf.SetProjectMetadataResponseMsg.ResponseType response_type = 1;
    if (has_response_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->response_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetProjectMetadataResponseMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetProjectMetadataResponseMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetProjectMetadataResponseMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetProjectMetadataResponseMsg::MergeFrom(const SetProjectMetadataResponseMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_response_type()) {
      set_response_type(from.response_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetProjectMetadataResponseMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetProjectMetadataResponseMsg::CopyFrom(const SetProjectMetadataResponseMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetProjectMetadataResponseMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SetProjectMetadataResponseMsg::Swap(SetProjectMetadataResponseMsg* other) {
  if (other != this) {
    std::swap(response_type_, other->response_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetProjectMetadataResponseMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetProjectMetadataResponseMsg_descriptor_;
  metadata.reflection = SetProjectMetadataResponseMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProjectMetadataMsg::kMetadataFieldNumber;
#endif  // !_MSC_VER

ProjectMetadataMsg::ProjectMetadataMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProjectMetadataMsg::InitAsDefaultInstance() {
  metadata_ = const_cast< ::protobuf::ProjectMetadataStruct*>(&::protobuf::ProjectMetadataStruct::default_instance());
}

ProjectMetadataMsg::ProjectMetadataMsg(const ProjectMetadataMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProjectMetadataMsg::SharedCtor() {
  _cached_size_ = 0;
  metadata_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProjectMetadataMsg::~ProjectMetadataMsg() {
  SharedDtor();
}

void ProjectMetadataMsg::SharedDtor() {
  if (this != default_instance_) {
    delete metadata_;
  }
}

void ProjectMetadataMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProjectMetadataMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProjectMetadataMsg_descriptor_;
}

const ProjectMetadataMsg& ProjectMetadataMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

ProjectMetadataMsg* ProjectMetadataMsg::default_instance_ = NULL;

ProjectMetadataMsg* ProjectMetadataMsg::New() const {
  return new ProjectMetadataMsg;
}

void ProjectMetadataMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_metadata()) {
      if (metadata_ != NULL) metadata_->::protobuf::ProjectMetadataStruct::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProjectMetadataMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .protobuf.ProjectMetadataStruct metadata = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_metadata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProjectMetadataMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .protobuf.ProjectMetadataStruct metadata = 1;
  if (has_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->metadata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProjectMetadataMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .protobuf.ProjectMetadataStruct metadata = 1;
  if (has_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->metadata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProjectMetadataMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .protobuf.ProjectMetadataStruct metadata = 1;
    if (has_metadata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->metadata());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProjectMetadataMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProjectMetadataMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProjectMetadataMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProjectMetadataMsg::MergeFrom(const ProjectMetadataMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_metadata()) {
      mutable_metadata()->::protobuf::ProjectMetadataStruct::MergeFrom(from.metadata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProjectMetadataMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProjectMetadataMsg::CopyFrom(const ProjectMetadataMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProjectMetadataMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ProjectMetadataMsg::Swap(ProjectMetadataMsg* other) {
  if (other != this) {
    std::swap(metadata_, other->metadata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProjectMetadataMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProjectMetadataMsg_descriptor_;
  metadata.reflection = ProjectMetadataMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ExperimentDataCollectionStartRequestMsg::kNameFieldNumber;
#endif  // !_MSC_VER

ExperimentDataCollectionStartRequestMsg::ExperimentDataCollectionStartRequestMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ExperimentDataCollectionStartRequestMsg::InitAsDefaultInstance() {
}

ExperimentDataCollectionStartRequestMsg::ExperimentDataCollectionStartRequestMsg(const ExperimentDataCollectionStartRequestMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ExperimentDataCollectionStartRequestMsg::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ExperimentDataCollectionStartRequestMsg::~ExperimentDataCollectionStartRequestMsg() {
  SharedDtor();
}

void ExperimentDataCollectionStartRequestMsg::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void ExperimentDataCollectionStartRequestMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExperimentDataCollectionStartRequestMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExperimentDataCollectionStartRequestMsg_descriptor_;
}

const ExperimentDataCollectionStartRequestMsg& ExperimentDataCollectionStartRequestMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

ExperimentDataCollectionStartRequestMsg* ExperimentDataCollectionStartRequestMsg::default_instance_ = NULL;

ExperimentDataCollectionStartRequestMsg* ExperimentDataCollectionStartRequestMsg::New() const {
  return new ExperimentDataCollectionStartRequestMsg;
}

void ExperimentDataCollectionStartRequestMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ExperimentDataCollectionStartRequestMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ExperimentDataCollectionStartRequestMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ExperimentDataCollectionStartRequestMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ExperimentDataCollectionStartRequestMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExperimentDataCollectionStartRequestMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ExperimentDataCollectionStartRequestMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ExperimentDataCollectionStartRequestMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExperimentDataCollectionStartRequestMsg::MergeFrom(const ExperimentDataCollectionStartRequestMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ExperimentDataCollectionStartRequestMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExperimentDataCollectionStartRequestMsg::CopyFrom(const ExperimentDataCollectionStartRequestMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExperimentDataCollectionStartRequestMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ExperimentDataCollectionStartRequestMsg::Swap(ExperimentDataCollectionStartRequestMsg* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ExperimentDataCollectionStartRequestMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExperimentDataCollectionStartRequestMsg_descriptor_;
  metadata.reflection = ExperimentDataCollectionStartRequestMsg_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* ExperimentDataCollectionStartResponseMsg_ResponseType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExperimentDataCollectionStartResponseMsg_ResponseType_descriptor_;
}
bool ExperimentDataCollectionStartResponseMsg_ResponseType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const ExperimentDataCollectionStartResponseMsg_ResponseType ExperimentDataCollectionStartResponseMsg::SUCCESS;
const ExperimentDataCollectionStartResponseMsg_ResponseType ExperimentDataCollectionStartResponseMsg::NO_ACTIVE_PROJECT;
const ExperimentDataCollectionStartResponseMsg_ResponseType ExperimentDataCollectionStartResponseMsg::NOT_IN_IDLE_MODE;
const ExperimentDataCollectionStartResponseMsg_ResponseType ExperimentDataCollectionStartResponseMsg::NAME_TAKEN;
const ExperimentDataCollectionStartResponseMsg_ResponseType ExperimentDataCollectionStartResponseMsg::ILLEGAL_NAME;
const ExperimentDataCollectionStartResponseMsg_ResponseType ExperimentDataCollectionStartResponseMsg::OTHER_ERROR;
const ExperimentDataCollectionStartResponseMsg_ResponseType ExperimentDataCollectionStartResponseMsg::ResponseType_MIN;
const ExperimentDataCollectionStartResponseMsg_ResponseType ExperimentDataCollectionStartResponseMsg::ResponseType_MAX;
const int ExperimentDataCollectionStartResponseMsg::ResponseType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int ExperimentDataCollectionStartResponseMsg::kResponseTypeFieldNumber;
#endif  // !_MSC_VER

ExperimentDataCollectionStartResponseMsg::ExperimentDataCollectionStartResponseMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ExperimentDataCollectionStartResponseMsg::InitAsDefaultInstance() {
}

ExperimentDataCollectionStartResponseMsg::ExperimentDataCollectionStartResponseMsg(const ExperimentDataCollectionStartResponseMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ExperimentDataCollectionStartResponseMsg::SharedCtor() {
  _cached_size_ = 0;
  response_type_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ExperimentDataCollectionStartResponseMsg::~ExperimentDataCollectionStartResponseMsg() {
  SharedDtor();
}

void ExperimentDataCollectionStartResponseMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ExperimentDataCollectionStartResponseMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExperimentDataCollectionStartResponseMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExperimentDataCollectionStartResponseMsg_descriptor_;
}

const ExperimentDataCollectionStartResponseMsg& ExperimentDataCollectionStartResponseMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

ExperimentDataCollectionStartResponseMsg* ExperimentDataCollectionStartResponseMsg::default_instance_ = NULL;

ExperimentDataCollectionStartResponseMsg* ExperimentDataCollectionStartResponseMsg::New() const {
  return new ExperimentDataCollectionStartResponseMsg;
}

void ExperimentDataCollectionStartResponseMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    response_type_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ExperimentDataCollectionStartResponseMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .protobuf.ExperimentDataCollectionStartResponseMsg.ResponseType response_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf::ExperimentDataCollectionStartResponseMsg_ResponseType_IsValid(value)) {
            set_response_type(static_cast< ::protobuf::ExperimentDataCollectionStartResponseMsg_ResponseType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ExperimentDataCollectionStartResponseMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .protobuf.ExperimentDataCollectionStartResponseMsg.ResponseType response_type = 1;
  if (has_response_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->response_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ExperimentDataCollectionStartResponseMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .protobuf.ExperimentDataCollectionStartResponseMsg.ResponseType response_type = 1;
  if (has_response_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->response_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ExperimentDataCollectionStartResponseMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .protobuf.ExperimentDataCollectionStartResponseMsg.ResponseType response_type = 1;
    if (has_response_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->response_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExperimentDataCollectionStartResponseMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ExperimentDataCollectionStartResponseMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ExperimentDataCollectionStartResponseMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExperimentDataCollectionStartResponseMsg::MergeFrom(const ExperimentDataCollectionStartResponseMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_response_type()) {
      set_response_type(from.response_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ExperimentDataCollectionStartResponseMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExperimentDataCollectionStartResponseMsg::CopyFrom(const ExperimentDataCollectionStartResponseMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExperimentDataCollectionStartResponseMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ExperimentDataCollectionStartResponseMsg::Swap(ExperimentDataCollectionStartResponseMsg* other) {
  if (other != this) {
    std::swap(response_type_, other->response_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ExperimentDataCollectionStartResponseMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExperimentDataCollectionStartResponseMsg_descriptor_;
  metadata.reflection = ExperimentDataCollectionStartResponseMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ExperimentDataCollectionStopRequestMsg::ExperimentDataCollectionStopRequestMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ExperimentDataCollectionStopRequestMsg::InitAsDefaultInstance() {
}

ExperimentDataCollectionStopRequestMsg::ExperimentDataCollectionStopRequestMsg(const ExperimentDataCollectionStopRequestMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ExperimentDataCollectionStopRequestMsg::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ExperimentDataCollectionStopRequestMsg::~ExperimentDataCollectionStopRequestMsg() {
  SharedDtor();
}

void ExperimentDataCollectionStopRequestMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ExperimentDataCollectionStopRequestMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExperimentDataCollectionStopRequestMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExperimentDataCollectionStopRequestMsg_descriptor_;
}

const ExperimentDataCollectionStopRequestMsg& ExperimentDataCollectionStopRequestMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

ExperimentDataCollectionStopRequestMsg* ExperimentDataCollectionStopRequestMsg::default_instance_ = NULL;

ExperimentDataCollectionStopRequestMsg* ExperimentDataCollectionStopRequestMsg::New() const {
  return new ExperimentDataCollectionStopRequestMsg;
}

void ExperimentDataCollectionStopRequestMsg::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ExperimentDataCollectionStopRequestMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ExperimentDataCollectionStopRequestMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ExperimentDataCollectionStopRequestMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ExperimentDataCollectionStopRequestMsg::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExperimentDataCollectionStopRequestMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ExperimentDataCollectionStopRequestMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ExperimentDataCollectionStopRequestMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExperimentDataCollectionStopRequestMsg::MergeFrom(const ExperimentDataCollectionStopRequestMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ExperimentDataCollectionStopRequestMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExperimentDataCollectionStopRequestMsg::CopyFrom(const ExperimentDataCollectionStopRequestMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExperimentDataCollectionStopRequestMsg::IsInitialized() const {

  return true;
}

void ExperimentDataCollectionStopRequestMsg::Swap(ExperimentDataCollectionStopRequestMsg* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ExperimentDataCollectionStopRequestMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExperimentDataCollectionStopRequestMsg_descriptor_;
  metadata.reflection = ExperimentDataCollectionStopRequestMsg_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* ExperimentDataCollectionStopResponseMsg_ResponseType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExperimentDataCollectionStopResponseMsg_ResponseType_descriptor_;
}
bool ExperimentDataCollectionStopResponseMsg_ResponseType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const ExperimentDataCollectionStopResponseMsg_ResponseType ExperimentDataCollectionStopResponseMsg::SUCCESS;
const ExperimentDataCollectionStopResponseMsg_ResponseType ExperimentDataCollectionStopResponseMsg::NOT_IN_DATA_COLLECTION_MODE;
const ExperimentDataCollectionStopResponseMsg_ResponseType ExperimentDataCollectionStopResponseMsg::OTHER_ERROR;
const ExperimentDataCollectionStopResponseMsg_ResponseType ExperimentDataCollectionStopResponseMsg::ResponseType_MIN;
const ExperimentDataCollectionStopResponseMsg_ResponseType ExperimentDataCollectionStopResponseMsg::ResponseType_MAX;
const int ExperimentDataCollectionStopResponseMsg::ResponseType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int ExperimentDataCollectionStopResponseMsg::kResponseTypeFieldNumber;
#endif  // !_MSC_VER

ExperimentDataCollectionStopResponseMsg::ExperimentDataCollectionStopResponseMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ExperimentDataCollectionStopResponseMsg::InitAsDefaultInstance() {
}

ExperimentDataCollectionStopResponseMsg::ExperimentDataCollectionStopResponseMsg(const ExperimentDataCollectionStopResponseMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ExperimentDataCollectionStopResponseMsg::SharedCtor() {
  _cached_size_ = 0;
  response_type_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ExperimentDataCollectionStopResponseMsg::~ExperimentDataCollectionStopResponseMsg() {
  SharedDtor();
}

void ExperimentDataCollectionStopResponseMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ExperimentDataCollectionStopResponseMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExperimentDataCollectionStopResponseMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExperimentDataCollectionStopResponseMsg_descriptor_;
}

const ExperimentDataCollectionStopResponseMsg& ExperimentDataCollectionStopResponseMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

ExperimentDataCollectionStopResponseMsg* ExperimentDataCollectionStopResponseMsg::default_instance_ = NULL;

ExperimentDataCollectionStopResponseMsg* ExperimentDataCollectionStopResponseMsg::New() const {
  return new ExperimentDataCollectionStopResponseMsg;
}

void ExperimentDataCollectionStopResponseMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    response_type_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ExperimentDataCollectionStopResponseMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .protobuf.ExperimentDataCollectionStopResponseMsg.ResponseType response_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf::ExperimentDataCollectionStopResponseMsg_ResponseType_IsValid(value)) {
            set_response_type(static_cast< ::protobuf::ExperimentDataCollectionStopResponseMsg_ResponseType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ExperimentDataCollectionStopResponseMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .protobuf.ExperimentDataCollectionStopResponseMsg.ResponseType response_type = 1;
  if (has_response_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->response_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ExperimentDataCollectionStopResponseMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .protobuf.ExperimentDataCollectionStopResponseMsg.ResponseType response_type = 1;
  if (has_response_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->response_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ExperimentDataCollectionStopResponseMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .protobuf.ExperimentDataCollectionStopResponseMsg.ResponseType response_type = 1;
    if (has_response_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->response_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExperimentDataCollectionStopResponseMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ExperimentDataCollectionStopResponseMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ExperimentDataCollectionStopResponseMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExperimentDataCollectionStopResponseMsg::MergeFrom(const ExperimentDataCollectionStopResponseMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_response_type()) {
      set_response_type(from.response_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ExperimentDataCollectionStopResponseMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExperimentDataCollectionStopResponseMsg::CopyFrom(const ExperimentDataCollectionStopResponseMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExperimentDataCollectionStopResponseMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ExperimentDataCollectionStopResponseMsg::Swap(ExperimentDataCollectionStopResponseMsg* other) {
  if (other != this) {
    std::swap(response_type_, other->response_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ExperimentDataCollectionStopResponseMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExperimentDataCollectionStopResponseMsg_descriptor_;
  metadata.reflection = ExperimentDataCollectionStopResponseMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RenameExperimentRequestMsg::kOldNameFieldNumber;
const int RenameExperimentRequestMsg::kNewNameFieldNumber;
#endif  // !_MSC_VER

RenameExperimentRequestMsg::RenameExperimentRequestMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RenameExperimentRequestMsg::InitAsDefaultInstance() {
}

RenameExperimentRequestMsg::RenameExperimentRequestMsg(const RenameExperimentRequestMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RenameExperimentRequestMsg::SharedCtor() {
  _cached_size_ = 0;
  old_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  new_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RenameExperimentRequestMsg::~RenameExperimentRequestMsg() {
  SharedDtor();
}

void RenameExperimentRequestMsg::SharedDtor() {
  if (old_name_ != &::google::protobuf::internal::kEmptyString) {
    delete old_name_;
  }
  if (new_name_ != &::google::protobuf::internal::kEmptyString) {
    delete new_name_;
  }
  if (this != default_instance_) {
  }
}

void RenameExperimentRequestMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RenameExperimentRequestMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RenameExperimentRequestMsg_descriptor_;
}

const RenameExperimentRequestMsg& RenameExperimentRequestMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

RenameExperimentRequestMsg* RenameExperimentRequestMsg::default_instance_ = NULL;

RenameExperimentRequestMsg* RenameExperimentRequestMsg::New() const {
  return new RenameExperimentRequestMsg;
}

void RenameExperimentRequestMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_old_name()) {
      if (old_name_ != &::google::protobuf::internal::kEmptyString) {
        old_name_->clear();
      }
    }
    if (has_new_name()) {
      if (new_name_ != &::google::protobuf::internal::kEmptyString) {
        new_name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RenameExperimentRequestMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string old_name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_old_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->old_name().data(), this->old_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_new_name;
        break;
      }

      // required string new_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_new_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_new_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->new_name().data(), this->new_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RenameExperimentRequestMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string old_name = 1;
  if (has_old_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->old_name().data(), this->old_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->old_name(), output);
  }

  // required string new_name = 2;
  if (has_new_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->new_name().data(), this->new_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->new_name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RenameExperimentRequestMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string old_name = 1;
  if (has_old_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->old_name().data(), this->old_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->old_name(), target);
  }

  // required string new_name = 2;
  if (has_new_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->new_name().data(), this->new_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->new_name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RenameExperimentRequestMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string old_name = 1;
    if (has_old_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->old_name());
    }

    // required string new_name = 2;
    if (has_new_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->new_name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RenameExperimentRequestMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RenameExperimentRequestMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RenameExperimentRequestMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RenameExperimentRequestMsg::MergeFrom(const RenameExperimentRequestMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_old_name()) {
      set_old_name(from.old_name());
    }
    if (from.has_new_name()) {
      set_new_name(from.new_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RenameExperimentRequestMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RenameExperimentRequestMsg::CopyFrom(const RenameExperimentRequestMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RenameExperimentRequestMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void RenameExperimentRequestMsg::Swap(RenameExperimentRequestMsg* other) {
  if (other != this) {
    std::swap(old_name_, other->old_name_);
    std::swap(new_name_, other->new_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RenameExperimentRequestMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RenameExperimentRequestMsg_descriptor_;
  metadata.reflection = RenameExperimentRequestMsg_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* RenameExperimentResponseMsg_ResponseType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RenameExperimentResponseMsg_ResponseType_descriptor_;
}
bool RenameExperimentResponseMsg_ResponseType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const RenameExperimentResponseMsg_ResponseType RenameExperimentResponseMsg::SUCCESS;
const RenameExperimentResponseMsg_ResponseType RenameExperimentResponseMsg::NO_ACTIVE_PROJECT;
const RenameExperimentResponseMsg_ResponseType RenameExperimentResponseMsg::NAME_TAKEN;
const RenameExperimentResponseMsg_ResponseType RenameExperimentResponseMsg::EXPERIMENT_NOT_FOUND;
const RenameExperimentResponseMsg_ResponseType RenameExperimentResponseMsg::OTHER_ERROR;
const RenameExperimentResponseMsg_ResponseType RenameExperimentResponseMsg::ResponseType_MIN;
const RenameExperimentResponseMsg_ResponseType RenameExperimentResponseMsg::ResponseType_MAX;
const int RenameExperimentResponseMsg::ResponseType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int RenameExperimentResponseMsg::kResponseTypeFieldNumber;
#endif  // !_MSC_VER

RenameExperimentResponseMsg::RenameExperimentResponseMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RenameExperimentResponseMsg::InitAsDefaultInstance() {
}

RenameExperimentResponseMsg::RenameExperimentResponseMsg(const RenameExperimentResponseMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RenameExperimentResponseMsg::SharedCtor() {
  _cached_size_ = 0;
  response_type_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RenameExperimentResponseMsg::~RenameExperimentResponseMsg() {
  SharedDtor();
}

void RenameExperimentResponseMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RenameExperimentResponseMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RenameExperimentResponseMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RenameExperimentResponseMsg_descriptor_;
}

const RenameExperimentResponseMsg& RenameExperimentResponseMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

RenameExperimentResponseMsg* RenameExperimentResponseMsg::default_instance_ = NULL;

RenameExperimentResponseMsg* RenameExperimentResponseMsg::New() const {
  return new RenameExperimentResponseMsg;
}

void RenameExperimentResponseMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    response_type_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RenameExperimentResponseMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .protobuf.RenameExperimentResponseMsg.ResponseType response_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf::RenameExperimentResponseMsg_ResponseType_IsValid(value)) {
            set_response_type(static_cast< ::protobuf::RenameExperimentResponseMsg_ResponseType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RenameExperimentResponseMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .protobuf.RenameExperimentResponseMsg.ResponseType response_type = 1;
  if (has_response_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->response_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RenameExperimentResponseMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .protobuf.RenameExperimentResponseMsg.ResponseType response_type = 1;
  if (has_response_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->response_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RenameExperimentResponseMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .protobuf.RenameExperimentResponseMsg.ResponseType response_type = 1;
    if (has_response_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->response_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RenameExperimentResponseMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RenameExperimentResponseMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RenameExperimentResponseMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RenameExperimentResponseMsg::MergeFrom(const RenameExperimentResponseMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_response_type()) {
      set_response_type(from.response_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RenameExperimentResponseMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RenameExperimentResponseMsg::CopyFrom(const RenameExperimentResponseMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RenameExperimentResponseMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RenameExperimentResponseMsg::Swap(RenameExperimentResponseMsg* other) {
  if (other != this) {
    std::swap(response_type_, other->response_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RenameExperimentResponseMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RenameExperimentResponseMsg_descriptor_;
  metadata.reflection = RenameExperimentResponseMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RemoveExperimentRequestMsg::kNameFieldNumber;
#endif  // !_MSC_VER

RemoveExperimentRequestMsg::RemoveExperimentRequestMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RemoveExperimentRequestMsg::InitAsDefaultInstance() {
}

RemoveExperimentRequestMsg::RemoveExperimentRequestMsg(const RemoveExperimentRequestMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RemoveExperimentRequestMsg::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RemoveExperimentRequestMsg::~RemoveExperimentRequestMsg() {
  SharedDtor();
}

void RemoveExperimentRequestMsg::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void RemoveExperimentRequestMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveExperimentRequestMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RemoveExperimentRequestMsg_descriptor_;
}

const RemoveExperimentRequestMsg& RemoveExperimentRequestMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

RemoveExperimentRequestMsg* RemoveExperimentRequestMsg::default_instance_ = NULL;

RemoveExperimentRequestMsg* RemoveExperimentRequestMsg::New() const {
  return new RemoveExperimentRequestMsg;
}

void RemoveExperimentRequestMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RemoveExperimentRequestMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RemoveExperimentRequestMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RemoveExperimentRequestMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RemoveExperimentRequestMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoveExperimentRequestMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RemoveExperimentRequestMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RemoveExperimentRequestMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RemoveExperimentRequestMsg::MergeFrom(const RemoveExperimentRequestMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RemoveExperimentRequestMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveExperimentRequestMsg::CopyFrom(const RemoveExperimentRequestMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveExperimentRequestMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RemoveExperimentRequestMsg::Swap(RemoveExperimentRequestMsg* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RemoveExperimentRequestMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RemoveExperimentRequestMsg_descriptor_;
  metadata.reflection = RemoveExperimentRequestMsg_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* RemoveExperimentResponseMsg_ResponseType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RemoveExperimentResponseMsg_ResponseType_descriptor_;
}
bool RemoveExperimentResponseMsg_ResponseType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const RemoveExperimentResponseMsg_ResponseType RemoveExperimentResponseMsg::SUCCESS;
const RemoveExperimentResponseMsg_ResponseType RemoveExperimentResponseMsg::NO_ACTIVE_PROJECT;
const RemoveExperimentResponseMsg_ResponseType RemoveExperimentResponseMsg::EXPERIMENT_NOT_FOUND;
const RemoveExperimentResponseMsg_ResponseType RemoveExperimentResponseMsg::OTHER_ERROR;
const RemoveExperimentResponseMsg_ResponseType RemoveExperimentResponseMsg::ResponseType_MIN;
const RemoveExperimentResponseMsg_ResponseType RemoveExperimentResponseMsg::ResponseType_MAX;
const int RemoveExperimentResponseMsg::ResponseType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int RemoveExperimentResponseMsg::kResponseTypeFieldNumber;
#endif  // !_MSC_VER

RemoveExperimentResponseMsg::RemoveExperimentResponseMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RemoveExperimentResponseMsg::InitAsDefaultInstance() {
}

RemoveExperimentResponseMsg::RemoveExperimentResponseMsg(const RemoveExperimentResponseMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RemoveExperimentResponseMsg::SharedCtor() {
  _cached_size_ = 0;
  response_type_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RemoveExperimentResponseMsg::~RemoveExperimentResponseMsg() {
  SharedDtor();
}

void RemoveExperimentResponseMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RemoveExperimentResponseMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveExperimentResponseMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RemoveExperimentResponseMsg_descriptor_;
}

const RemoveExperimentResponseMsg& RemoveExperimentResponseMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

RemoveExperimentResponseMsg* RemoveExperimentResponseMsg::default_instance_ = NULL;

RemoveExperimentResponseMsg* RemoveExperimentResponseMsg::New() const {
  return new RemoveExperimentResponseMsg;
}

void RemoveExperimentResponseMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    response_type_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RemoveExperimentResponseMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .protobuf.RemoveExperimentResponseMsg.ResponseType response_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf::RemoveExperimentResponseMsg_ResponseType_IsValid(value)) {
            set_response_type(static_cast< ::protobuf::RemoveExperimentResponseMsg_ResponseType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RemoveExperimentResponseMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .protobuf.RemoveExperimentResponseMsg.ResponseType response_type = 1;
  if (has_response_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->response_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RemoveExperimentResponseMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .protobuf.RemoveExperimentResponseMsg.ResponseType response_type = 1;
  if (has_response_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->response_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RemoveExperimentResponseMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .protobuf.RemoveExperimentResponseMsg.ResponseType response_type = 1;
    if (has_response_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->response_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoveExperimentResponseMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RemoveExperimentResponseMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RemoveExperimentResponseMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RemoveExperimentResponseMsg::MergeFrom(const RemoveExperimentResponseMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_response_type()) {
      set_response_type(from.response_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RemoveExperimentResponseMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveExperimentResponseMsg::CopyFrom(const RemoveExperimentResponseMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveExperimentResponseMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RemoveExperimentResponseMsg::Swap(RemoveExperimentResponseMsg* other) {
  if (other != this) {
    std::swap(response_type_, other->response_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RemoveExperimentResponseMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RemoveExperimentResponseMsg_descriptor_;
  metadata.reflection = RemoveExperimentResponseMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ExperimentPlaybackStartRequestMsg::kNameFieldNumber;
const int ExperimentPlaybackStartRequestMsg::kSensorIdsFieldNumber;
#endif  // !_MSC_VER

ExperimentPlaybackStartRequestMsg::ExperimentPlaybackStartRequestMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ExperimentPlaybackStartRequestMsg::InitAsDefaultInstance() {
}

ExperimentPlaybackStartRequestMsg::ExperimentPlaybackStartRequestMsg(const ExperimentPlaybackStartRequestMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ExperimentPlaybackStartRequestMsg::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ExperimentPlaybackStartRequestMsg::~ExperimentPlaybackStartRequestMsg() {
  SharedDtor();
}

void ExperimentPlaybackStartRequestMsg::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void ExperimentPlaybackStartRequestMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExperimentPlaybackStartRequestMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExperimentPlaybackStartRequestMsg_descriptor_;
}

const ExperimentPlaybackStartRequestMsg& ExperimentPlaybackStartRequestMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

ExperimentPlaybackStartRequestMsg* ExperimentPlaybackStartRequestMsg::default_instance_ = NULL;

ExperimentPlaybackStartRequestMsg* ExperimentPlaybackStartRequestMsg::New() const {
  return new ExperimentPlaybackStartRequestMsg;
}

void ExperimentPlaybackStartRequestMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
  }
  sensor_ids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ExperimentPlaybackStartRequestMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_sensor_ids;
        break;
      }

      // repeated int32 sensor_ids = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sensor_ids:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_sensor_ids())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_sensor_ids())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_sensor_ids;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ExperimentPlaybackStartRequestMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }

  // repeated int32 sensor_ids = 2;
  for (int i = 0; i < this->sensor_ids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->sensor_ids(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ExperimentPlaybackStartRequestMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated int32 sensor_ids = 2;
  for (int i = 0; i < this->sensor_ids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->sensor_ids(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ExperimentPlaybackStartRequestMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  // repeated int32 sensor_ids = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->sensor_ids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->sensor_ids(i));
    }
    total_size += 1 * this->sensor_ids_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExperimentPlaybackStartRequestMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ExperimentPlaybackStartRequestMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ExperimentPlaybackStartRequestMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExperimentPlaybackStartRequestMsg::MergeFrom(const ExperimentPlaybackStartRequestMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  sensor_ids_.MergeFrom(from.sensor_ids_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ExperimentPlaybackStartRequestMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExperimentPlaybackStartRequestMsg::CopyFrom(const ExperimentPlaybackStartRequestMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExperimentPlaybackStartRequestMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ExperimentPlaybackStartRequestMsg::Swap(ExperimentPlaybackStartRequestMsg* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    sensor_ids_.Swap(&other->sensor_ids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ExperimentPlaybackStartRequestMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExperimentPlaybackStartRequestMsg_descriptor_;
  metadata.reflection = ExperimentPlaybackStartRequestMsg_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* ExperimentPlaybackStartResponseMsg_ResponseType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExperimentPlaybackStartResponseMsg_ResponseType_descriptor_;
}
bool ExperimentPlaybackStartResponseMsg_ResponseType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const ExperimentPlaybackStartResponseMsg_ResponseType ExperimentPlaybackStartResponseMsg::SUCCESS;
const ExperimentPlaybackStartResponseMsg_ResponseType ExperimentPlaybackStartResponseMsg::NO_ACTIVE_PROJECT;
const ExperimentPlaybackStartResponseMsg_ResponseType ExperimentPlaybackStartResponseMsg::EXPERIMENT_NOT_FOUND;
const ExperimentPlaybackStartResponseMsg_ResponseType ExperimentPlaybackStartResponseMsg::NOT_IN_IDLE_MODE;
const ExperimentPlaybackStartResponseMsg_ResponseType ExperimentPlaybackStartResponseMsg::OTHER_ERROR;
const ExperimentPlaybackStartResponseMsg_ResponseType ExperimentPlaybackStartResponseMsg::ResponseType_MIN;
const ExperimentPlaybackStartResponseMsg_ResponseType ExperimentPlaybackStartResponseMsg::ResponseType_MAX;
const int ExperimentPlaybackStartResponseMsg::ResponseType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int ExperimentPlaybackStartResponseMsg::kResponseTypeFieldNumber;
#endif  // !_MSC_VER

ExperimentPlaybackStartResponseMsg::ExperimentPlaybackStartResponseMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ExperimentPlaybackStartResponseMsg::InitAsDefaultInstance() {
}

ExperimentPlaybackStartResponseMsg::ExperimentPlaybackStartResponseMsg(const ExperimentPlaybackStartResponseMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ExperimentPlaybackStartResponseMsg::SharedCtor() {
  _cached_size_ = 0;
  response_type_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ExperimentPlaybackStartResponseMsg::~ExperimentPlaybackStartResponseMsg() {
  SharedDtor();
}

void ExperimentPlaybackStartResponseMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ExperimentPlaybackStartResponseMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExperimentPlaybackStartResponseMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExperimentPlaybackStartResponseMsg_descriptor_;
}

const ExperimentPlaybackStartResponseMsg& ExperimentPlaybackStartResponseMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

ExperimentPlaybackStartResponseMsg* ExperimentPlaybackStartResponseMsg::default_instance_ = NULL;

ExperimentPlaybackStartResponseMsg* ExperimentPlaybackStartResponseMsg::New() const {
  return new ExperimentPlaybackStartResponseMsg;
}

void ExperimentPlaybackStartResponseMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    response_type_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ExperimentPlaybackStartResponseMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .protobuf.ExperimentPlaybackStartResponseMsg.ResponseType response_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf::ExperimentPlaybackStartResponseMsg_ResponseType_IsValid(value)) {
            set_response_type(static_cast< ::protobuf::ExperimentPlaybackStartResponseMsg_ResponseType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ExperimentPlaybackStartResponseMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .protobuf.ExperimentPlaybackStartResponseMsg.ResponseType response_type = 1;
  if (has_response_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->response_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ExperimentPlaybackStartResponseMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .protobuf.ExperimentPlaybackStartResponseMsg.ResponseType response_type = 1;
  if (has_response_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->response_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ExperimentPlaybackStartResponseMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .protobuf.ExperimentPlaybackStartResponseMsg.ResponseType response_type = 1;
    if (has_response_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->response_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExperimentPlaybackStartResponseMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ExperimentPlaybackStartResponseMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ExperimentPlaybackStartResponseMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExperimentPlaybackStartResponseMsg::MergeFrom(const ExperimentPlaybackStartResponseMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_response_type()) {
      set_response_type(from.response_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ExperimentPlaybackStartResponseMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExperimentPlaybackStartResponseMsg::CopyFrom(const ExperimentPlaybackStartResponseMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExperimentPlaybackStartResponseMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ExperimentPlaybackStartResponseMsg::Swap(ExperimentPlaybackStartResponseMsg* other) {
  if (other != this) {
    std::swap(response_type_, other->response_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ExperimentPlaybackStartResponseMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExperimentPlaybackStartResponseMsg_descriptor_;
  metadata.reflection = ExperimentPlaybackStartResponseMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ExperimentPlaybackStopRequestMsg::ExperimentPlaybackStopRequestMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ExperimentPlaybackStopRequestMsg::InitAsDefaultInstance() {
}

ExperimentPlaybackStopRequestMsg::ExperimentPlaybackStopRequestMsg(const ExperimentPlaybackStopRequestMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ExperimentPlaybackStopRequestMsg::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ExperimentPlaybackStopRequestMsg::~ExperimentPlaybackStopRequestMsg() {
  SharedDtor();
}

void ExperimentPlaybackStopRequestMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ExperimentPlaybackStopRequestMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExperimentPlaybackStopRequestMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExperimentPlaybackStopRequestMsg_descriptor_;
}

const ExperimentPlaybackStopRequestMsg& ExperimentPlaybackStopRequestMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

ExperimentPlaybackStopRequestMsg* ExperimentPlaybackStopRequestMsg::default_instance_ = NULL;

ExperimentPlaybackStopRequestMsg* ExperimentPlaybackStopRequestMsg::New() const {
  return new ExperimentPlaybackStopRequestMsg;
}

void ExperimentPlaybackStopRequestMsg::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ExperimentPlaybackStopRequestMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ExperimentPlaybackStopRequestMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ExperimentPlaybackStopRequestMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ExperimentPlaybackStopRequestMsg::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExperimentPlaybackStopRequestMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ExperimentPlaybackStopRequestMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ExperimentPlaybackStopRequestMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExperimentPlaybackStopRequestMsg::MergeFrom(const ExperimentPlaybackStopRequestMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ExperimentPlaybackStopRequestMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExperimentPlaybackStopRequestMsg::CopyFrom(const ExperimentPlaybackStopRequestMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExperimentPlaybackStopRequestMsg::IsInitialized() const {

  return true;
}

void ExperimentPlaybackStopRequestMsg::Swap(ExperimentPlaybackStopRequestMsg* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ExperimentPlaybackStopRequestMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExperimentPlaybackStopRequestMsg_descriptor_;
  metadata.reflection = ExperimentPlaybackStopRequestMsg_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* ExperimentPlaybackStopResponseMsg_ResponseType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExperimentPlaybackStopResponseMsg_ResponseType_descriptor_;
}
bool ExperimentPlaybackStopResponseMsg_ResponseType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const ExperimentPlaybackStopResponseMsg_ResponseType ExperimentPlaybackStopResponseMsg::SUCCESS;
const ExperimentPlaybackStopResponseMsg_ResponseType ExperimentPlaybackStopResponseMsg::NOT_IN_PLAYBACK_MODE;
const ExperimentPlaybackStopResponseMsg_ResponseType ExperimentPlaybackStopResponseMsg::OTHER_ERROR;
const ExperimentPlaybackStopResponseMsg_ResponseType ExperimentPlaybackStopResponseMsg::ResponseType_MIN;
const ExperimentPlaybackStopResponseMsg_ResponseType ExperimentPlaybackStopResponseMsg::ResponseType_MAX;
const int ExperimentPlaybackStopResponseMsg::ResponseType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int ExperimentPlaybackStopResponseMsg::kResponseTypeFieldNumber;
#endif  // !_MSC_VER

ExperimentPlaybackStopResponseMsg::ExperimentPlaybackStopResponseMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ExperimentPlaybackStopResponseMsg::InitAsDefaultInstance() {
}

ExperimentPlaybackStopResponseMsg::ExperimentPlaybackStopResponseMsg(const ExperimentPlaybackStopResponseMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ExperimentPlaybackStopResponseMsg::SharedCtor() {
  _cached_size_ = 0;
  response_type_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ExperimentPlaybackStopResponseMsg::~ExperimentPlaybackStopResponseMsg() {
  SharedDtor();
}

void ExperimentPlaybackStopResponseMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ExperimentPlaybackStopResponseMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExperimentPlaybackStopResponseMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExperimentPlaybackStopResponseMsg_descriptor_;
}

const ExperimentPlaybackStopResponseMsg& ExperimentPlaybackStopResponseMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

ExperimentPlaybackStopResponseMsg* ExperimentPlaybackStopResponseMsg::default_instance_ = NULL;

ExperimentPlaybackStopResponseMsg* ExperimentPlaybackStopResponseMsg::New() const {
  return new ExperimentPlaybackStopResponseMsg;
}

void ExperimentPlaybackStopResponseMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    response_type_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ExperimentPlaybackStopResponseMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .protobuf.ExperimentPlaybackStopResponseMsg.ResponseType response_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf::ExperimentPlaybackStopResponseMsg_ResponseType_IsValid(value)) {
            set_response_type(static_cast< ::protobuf::ExperimentPlaybackStopResponseMsg_ResponseType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ExperimentPlaybackStopResponseMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .protobuf.ExperimentPlaybackStopResponseMsg.ResponseType response_type = 1;
  if (has_response_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->response_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ExperimentPlaybackStopResponseMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .protobuf.ExperimentPlaybackStopResponseMsg.ResponseType response_type = 1;
  if (has_response_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->response_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ExperimentPlaybackStopResponseMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .protobuf.ExperimentPlaybackStopResponseMsg.ResponseType response_type = 1;
    if (has_response_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->response_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExperimentPlaybackStopResponseMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ExperimentPlaybackStopResponseMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ExperimentPlaybackStopResponseMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExperimentPlaybackStopResponseMsg::MergeFrom(const ExperimentPlaybackStopResponseMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_response_type()) {
      set_response_type(from.response_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ExperimentPlaybackStopResponseMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExperimentPlaybackStopResponseMsg::CopyFrom(const ExperimentPlaybackStopResponseMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExperimentPlaybackStopResponseMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ExperimentPlaybackStopResponseMsg::Swap(ExperimentPlaybackStopResponseMsg* other) {
  if (other != this) {
    std::swap(response_type_, other->response_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ExperimentPlaybackStopResponseMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExperimentPlaybackStopResponseMsg_descriptor_;
  metadata.reflection = ExperimentPlaybackStopResponseMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ExperimentListMsg::kNamesFieldNumber;
#endif  // !_MSC_VER

ExperimentListMsg::ExperimentListMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ExperimentListMsg::InitAsDefaultInstance() {
}

ExperimentListMsg::ExperimentListMsg(const ExperimentListMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ExperimentListMsg::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ExperimentListMsg::~ExperimentListMsg() {
  SharedDtor();
}

void ExperimentListMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ExperimentListMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExperimentListMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExperimentListMsg_descriptor_;
}

const ExperimentListMsg& ExperimentListMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

ExperimentListMsg* ExperimentListMsg::default_instance_ = NULL;

ExperimentListMsg* ExperimentListMsg::New() const {
  return new ExperimentListMsg;
}

void ExperimentListMsg::Clear() {
  names_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ExperimentListMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string names = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_names:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_names()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->names(this->names_size() - 1).data(),
            this->names(this->names_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_names;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ExperimentListMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated string names = 1;
  for (int i = 0; i < this->names_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->names(i).data(), this->names(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->names(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ExperimentListMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated string names = 1;
  for (int i = 0; i < this->names_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->names(i).data(), this->names(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->names(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ExperimentListMsg::ByteSize() const {
  int total_size = 0;

  // repeated string names = 1;
  total_size += 1 * this->names_size();
  for (int i = 0; i < this->names_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->names(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExperimentListMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ExperimentListMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ExperimentListMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExperimentListMsg::MergeFrom(const ExperimentListMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  names_.MergeFrom(from.names_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ExperimentListMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExperimentListMsg::CopyFrom(const ExperimentListMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExperimentListMsg::IsInitialized() const {

  return true;
}

void ExperimentListMsg::Swap(ExperimentListMsg* other) {
  if (other != this) {
    names_.Swap(&other->names_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ExperimentListMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExperimentListMsg_descriptor_;
  metadata.reflection = ExperimentListMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SetExperimentMetadataRequestMsg::kExperimentNameFieldNumber;
const int SetExperimentMetadataRequestMsg::kTagsFieldNumber;
const int SetExperimentMetadataRequestMsg::kNotesFieldNumber;
#endif  // !_MSC_VER

SetExperimentMetadataRequestMsg::SetExperimentMetadataRequestMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SetExperimentMetadataRequestMsg::InitAsDefaultInstance() {
}

SetExperimentMetadataRequestMsg::SetExperimentMetadataRequestMsg(const SetExperimentMetadataRequestMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SetExperimentMetadataRequestMsg::SharedCtor() {
  _cached_size_ = 0;
  experiment_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  notes_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetExperimentMetadataRequestMsg::~SetExperimentMetadataRequestMsg() {
  SharedDtor();
}

void SetExperimentMetadataRequestMsg::SharedDtor() {
  if (experiment_name_ != &::google::protobuf::internal::kEmptyString) {
    delete experiment_name_;
  }
  if (notes_ != &::google::protobuf::internal::kEmptyString) {
    delete notes_;
  }
  if (this != default_instance_) {
  }
}

void SetExperimentMetadataRequestMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetExperimentMetadataRequestMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetExperimentMetadataRequestMsg_descriptor_;
}

const SetExperimentMetadataRequestMsg& SetExperimentMetadataRequestMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

SetExperimentMetadataRequestMsg* SetExperimentMetadataRequestMsg::default_instance_ = NULL;

SetExperimentMetadataRequestMsg* SetExperimentMetadataRequestMsg::New() const {
  return new SetExperimentMetadataRequestMsg;
}

void SetExperimentMetadataRequestMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_experiment_name()) {
      if (experiment_name_ != &::google::protobuf::internal::kEmptyString) {
        experiment_name_->clear();
      }
    }
    if (has_notes()) {
      if (notes_ != &::google::protobuf::internal::kEmptyString) {
        notes_->clear();
      }
    }
  }
  tags_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetExperimentMetadataRequestMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string experiment_name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_experiment_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->experiment_name().data(), this->experiment_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_tags;
        break;
      }

      // repeated string tags = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_tags:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_tags()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->tags(this->tags_size() - 1).data(),
            this->tags(this->tags_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_tags;
        if (input->ExpectTag(26)) goto parse_notes;
        break;
      }

      // optional string notes = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_notes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_notes()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->notes().data(), this->notes().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SetExperimentMetadataRequestMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string experiment_name = 1;
  if (has_experiment_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->experiment_name().data(), this->experiment_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->experiment_name(), output);
  }

  // repeated string tags = 2;
  for (int i = 0; i < this->tags_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->tags(i).data(), this->tags(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->tags(i), output);
  }

  // optional string notes = 3;
  if (has_notes()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->notes().data(), this->notes().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->notes(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SetExperimentMetadataRequestMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string experiment_name = 1;
  if (has_experiment_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->experiment_name().data(), this->experiment_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->experiment_name(), target);
  }

  // repeated string tags = 2;
  for (int i = 0; i < this->tags_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->tags(i).data(), this->tags(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->tags(i), target);
  }

  // optional string notes = 3;
  if (has_notes()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->notes().data(), this->notes().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->notes(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SetExperimentMetadataRequestMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string experiment_name = 1;
    if (has_experiment_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->experiment_name());
    }

    // optional string notes = 3;
    if (has_notes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->notes());
    }

  }
  // repeated string tags = 2;
  total_size += 1 * this->tags_size();
  for (int i = 0; i < this->tags_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->tags(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetExperimentMetadataRequestMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetExperimentMetadataRequestMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetExperimentMetadataRequestMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetExperimentMetadataRequestMsg::MergeFrom(const SetExperimentMetadataRequestMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  tags_.MergeFrom(from.tags_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_experiment_name()) {
      set_experiment_name(from.experiment_name());
    }
    if (from.has_notes()) {
      set_notes(from.notes());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetExperimentMetadataRequestMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetExperimentMetadataRequestMsg::CopyFrom(const SetExperimentMetadataRequestMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetExperimentMetadataRequestMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SetExperimentMetadataRequestMsg::Swap(SetExperimentMetadataRequestMsg* other) {
  if (other != this) {
    std::swap(experiment_name_, other->experiment_name_);
    tags_.Swap(&other->tags_);
    std::swap(notes_, other->notes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetExperimentMetadataRequestMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetExperimentMetadataRequestMsg_descriptor_;
  metadata.reflection = SetExperimentMetadataRequestMsg_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* SetExperimentMetadataResponseMsg_ResponseType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetExperimentMetadataResponseMsg_ResponseType_descriptor_;
}
bool SetExperimentMetadataResponseMsg_ResponseType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const SetExperimentMetadataResponseMsg_ResponseType SetExperimentMetadataResponseMsg::SUCCESS;
const SetExperimentMetadataResponseMsg_ResponseType SetExperimentMetadataResponseMsg::NO_ACTIVE_PROJECT;
const SetExperimentMetadataResponseMsg_ResponseType SetExperimentMetadataResponseMsg::EXPERIMENT_NOT_FOUND;
const SetExperimentMetadataResponseMsg_ResponseType SetExperimentMetadataResponseMsg::OTHER_ERROR;
const SetExperimentMetadataResponseMsg_ResponseType SetExperimentMetadataResponseMsg::ResponseType_MIN;
const SetExperimentMetadataResponseMsg_ResponseType SetExperimentMetadataResponseMsg::ResponseType_MAX;
const int SetExperimentMetadataResponseMsg::ResponseType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int SetExperimentMetadataResponseMsg::kResponseTypeFieldNumber;
#endif  // !_MSC_VER

SetExperimentMetadataResponseMsg::SetExperimentMetadataResponseMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SetExperimentMetadataResponseMsg::InitAsDefaultInstance() {
}

SetExperimentMetadataResponseMsg::SetExperimentMetadataResponseMsg(const SetExperimentMetadataResponseMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SetExperimentMetadataResponseMsg::SharedCtor() {
  _cached_size_ = 0;
  response_type_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetExperimentMetadataResponseMsg::~SetExperimentMetadataResponseMsg() {
  SharedDtor();
}

void SetExperimentMetadataResponseMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SetExperimentMetadataResponseMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetExperimentMetadataResponseMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetExperimentMetadataResponseMsg_descriptor_;
}

const SetExperimentMetadataResponseMsg& SetExperimentMetadataResponseMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

SetExperimentMetadataResponseMsg* SetExperimentMetadataResponseMsg::default_instance_ = NULL;

SetExperimentMetadataResponseMsg* SetExperimentMetadataResponseMsg::New() const {
  return new SetExperimentMetadataResponseMsg;
}

void SetExperimentMetadataResponseMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    response_type_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetExperimentMetadataResponseMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .protobuf.SetExperimentMetadataResponseMsg.ResponseType response_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf::SetExperimentMetadataResponseMsg_ResponseType_IsValid(value)) {
            set_response_type(static_cast< ::protobuf::SetExperimentMetadataResponseMsg_ResponseType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SetExperimentMetadataResponseMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .protobuf.SetExperimentMetadataResponseMsg.ResponseType response_type = 1;
  if (has_response_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->response_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SetExperimentMetadataResponseMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .protobuf.SetExperimentMetadataResponseMsg.ResponseType response_type = 1;
  if (has_response_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->response_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SetExperimentMetadataResponseMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .protobuf.SetExperimentMetadataResponseMsg.ResponseType response_type = 1;
    if (has_response_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->response_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetExperimentMetadataResponseMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetExperimentMetadataResponseMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetExperimentMetadataResponseMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetExperimentMetadataResponseMsg::MergeFrom(const SetExperimentMetadataResponseMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_response_type()) {
      set_response_type(from.response_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetExperimentMetadataResponseMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetExperimentMetadataResponseMsg::CopyFrom(const SetExperimentMetadataResponseMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetExperimentMetadataResponseMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SetExperimentMetadataResponseMsg::Swap(SetExperimentMetadataResponseMsg* other) {
  if (other != this) {
    std::swap(response_type_, other->response_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetExperimentMetadataResponseMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetExperimentMetadataResponseMsg_descriptor_;
  metadata.reflection = SetExperimentMetadataResponseMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ExperimentMetadataMsg_MetadataStruct::kTagsFieldNumber;
const int ExperimentMetadataMsg_MetadataStruct::kNotesFieldNumber;
const int ExperimentMetadataMsg_MetadataStruct::kSensorConfigurationsFieldNumber;
#endif  // !_MSC_VER

ExperimentMetadataMsg_MetadataStruct::ExperimentMetadataMsg_MetadataStruct()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ExperimentMetadataMsg_MetadataStruct::InitAsDefaultInstance() {
}

ExperimentMetadataMsg_MetadataStruct::ExperimentMetadataMsg_MetadataStruct(const ExperimentMetadataMsg_MetadataStruct& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ExperimentMetadataMsg_MetadataStruct::SharedCtor() {
  _cached_size_ = 0;
  notes_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ExperimentMetadataMsg_MetadataStruct::~ExperimentMetadataMsg_MetadataStruct() {
  SharedDtor();
}

void ExperimentMetadataMsg_MetadataStruct::SharedDtor() {
  if (notes_ != &::google::protobuf::internal::kEmptyString) {
    delete notes_;
  }
  if (this != default_instance_) {
  }
}

void ExperimentMetadataMsg_MetadataStruct::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExperimentMetadataMsg_MetadataStruct::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExperimentMetadataMsg_MetadataStruct_descriptor_;
}

const ExperimentMetadataMsg_MetadataStruct& ExperimentMetadataMsg_MetadataStruct::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

ExperimentMetadataMsg_MetadataStruct* ExperimentMetadataMsg_MetadataStruct::default_instance_ = NULL;

ExperimentMetadataMsg_MetadataStruct* ExperimentMetadataMsg_MetadataStruct::New() const {
  return new ExperimentMetadataMsg_MetadataStruct;
}

void ExperimentMetadataMsg_MetadataStruct::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_notes()) {
      if (notes_ != &::google::protobuf::internal::kEmptyString) {
        notes_->clear();
      }
    }
  }
  tags_.Clear();
  sensor_configurations_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ExperimentMetadataMsg_MetadataStruct::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string tags = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_tags:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_tags()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->tags(this->tags_size() - 1).data(),
            this->tags(this->tags_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_tags;
        if (input->ExpectTag(18)) goto parse_notes;
        break;
      }

      // optional string notes = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_notes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_notes()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->notes().data(), this->notes().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_sensor_configurations;
        break;
      }

      // repeated .protobuf.SensorConfiguration sensor_configurations = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sensor_configurations:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_sensor_configurations()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_sensor_configurations;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ExperimentMetadataMsg_MetadataStruct::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated string tags = 1;
  for (int i = 0; i < this->tags_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->tags(i).data(), this->tags(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->tags(i), output);
  }

  // optional string notes = 2;
  if (has_notes()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->notes().data(), this->notes().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->notes(), output);
  }

  // repeated .protobuf.SensorConfiguration sensor_configurations = 3;
  for (int i = 0; i < this->sensor_configurations_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->sensor_configurations(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ExperimentMetadataMsg_MetadataStruct::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated string tags = 1;
  for (int i = 0; i < this->tags_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->tags(i).data(), this->tags(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->tags(i), target);
  }

  // optional string notes = 2;
  if (has_notes()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->notes().data(), this->notes().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->notes(), target);
  }

  // repeated .protobuf.SensorConfiguration sensor_configurations = 3;
  for (int i = 0; i < this->sensor_configurations_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->sensor_configurations(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ExperimentMetadataMsg_MetadataStruct::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string notes = 2;
    if (has_notes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->notes());
    }

  }
  // repeated string tags = 1;
  total_size += 1 * this->tags_size();
  for (int i = 0; i < this->tags_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->tags(i));
  }

  // repeated .protobuf.SensorConfiguration sensor_configurations = 3;
  total_size += 1 * this->sensor_configurations_size();
  for (int i = 0; i < this->sensor_configurations_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->sensor_configurations(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExperimentMetadataMsg_MetadataStruct::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ExperimentMetadataMsg_MetadataStruct* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ExperimentMetadataMsg_MetadataStruct*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExperimentMetadataMsg_MetadataStruct::MergeFrom(const ExperimentMetadataMsg_MetadataStruct& from) {
  GOOGLE_CHECK_NE(&from, this);
  tags_.MergeFrom(from.tags_);
  sensor_configurations_.MergeFrom(from.sensor_configurations_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_notes()) {
      set_notes(from.notes());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ExperimentMetadataMsg_MetadataStruct::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExperimentMetadataMsg_MetadataStruct::CopyFrom(const ExperimentMetadataMsg_MetadataStruct& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExperimentMetadataMsg_MetadataStruct::IsInitialized() const {

  for (int i = 0; i < sensor_configurations_size(); i++) {
    if (!this->sensor_configurations(i).IsInitialized()) return false;
  }
  return true;
}

void ExperimentMetadataMsg_MetadataStruct::Swap(ExperimentMetadataMsg_MetadataStruct* other) {
  if (other != this) {
    tags_.Swap(&other->tags_);
    std::swap(notes_, other->notes_);
    sensor_configurations_.Swap(&other->sensor_configurations_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ExperimentMetadataMsg_MetadataStruct::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExperimentMetadataMsg_MetadataStruct_descriptor_;
  metadata.reflection = ExperimentMetadataMsg_MetadataStruct_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int ExperimentMetadataMsg::kExperimentNameFieldNumber;
const int ExperimentMetadataMsg::kMetadataFieldNumber;
#endif  // !_MSC_VER

ExperimentMetadataMsg::ExperimentMetadataMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ExperimentMetadataMsg::InitAsDefaultInstance() {
  metadata_ = const_cast< ::protobuf::ExperimentMetadataMsg_MetadataStruct*>(&::protobuf::ExperimentMetadataMsg_MetadataStruct::default_instance());
}

ExperimentMetadataMsg::ExperimentMetadataMsg(const ExperimentMetadataMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ExperimentMetadataMsg::SharedCtor() {
  _cached_size_ = 0;
  experiment_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  metadata_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ExperimentMetadataMsg::~ExperimentMetadataMsg() {
  SharedDtor();
}

void ExperimentMetadataMsg::SharedDtor() {
  if (experiment_name_ != &::google::protobuf::internal::kEmptyString) {
    delete experiment_name_;
  }
  if (this != default_instance_) {
    delete metadata_;
  }
}

void ExperimentMetadataMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExperimentMetadataMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExperimentMetadataMsg_descriptor_;
}

const ExperimentMetadataMsg& ExperimentMetadataMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

ExperimentMetadataMsg* ExperimentMetadataMsg::default_instance_ = NULL;

ExperimentMetadataMsg* ExperimentMetadataMsg::New() const {
  return new ExperimentMetadataMsg;
}

void ExperimentMetadataMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_experiment_name()) {
      if (experiment_name_ != &::google::protobuf::internal::kEmptyString) {
        experiment_name_->clear();
      }
    }
    if (has_metadata()) {
      if (metadata_ != NULL) metadata_->::protobuf::ExperimentMetadataMsg_MetadataStruct::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ExperimentMetadataMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string experiment_name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_experiment_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->experiment_name().data(), this->experiment_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_metadata;
        break;
      }

      // required .protobuf.ExperimentMetadataMsg.MetadataStruct metadata = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_metadata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_metadata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ExperimentMetadataMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string experiment_name = 1;
  if (has_experiment_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->experiment_name().data(), this->experiment_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->experiment_name(), output);
  }

  // required .protobuf.ExperimentMetadataMsg.MetadataStruct metadata = 2;
  if (has_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->metadata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ExperimentMetadataMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string experiment_name = 1;
  if (has_experiment_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->experiment_name().data(), this->experiment_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->experiment_name(), target);
  }

  // required .protobuf.ExperimentMetadataMsg.MetadataStruct metadata = 2;
  if (has_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->metadata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ExperimentMetadataMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string experiment_name = 1;
    if (has_experiment_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->experiment_name());
    }

    // required .protobuf.ExperimentMetadataMsg.MetadataStruct metadata = 2;
    if (has_metadata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->metadata());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExperimentMetadataMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ExperimentMetadataMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ExperimentMetadataMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExperimentMetadataMsg::MergeFrom(const ExperimentMetadataMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_experiment_name()) {
      set_experiment_name(from.experiment_name());
    }
    if (from.has_metadata()) {
      mutable_metadata()->::protobuf::ExperimentMetadataMsg_MetadataStruct::MergeFrom(from.metadata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ExperimentMetadataMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExperimentMetadataMsg::CopyFrom(const ExperimentMetadataMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExperimentMetadataMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_metadata()) {
    if (!this->metadata().IsInitialized()) return false;
  }
  return true;
}

void ExperimentMetadataMsg::Swap(ExperimentMetadataMsg* other) {
  if (other != this) {
    std::swap(experiment_name_, other->experiment_name_);
    std::swap(metadata_, other->metadata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ExperimentMetadataMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExperimentMetadataMsg_descriptor_;
  metadata.reflection = ExperimentMetadataMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DebugMsg::kDebugMessageFieldNumber;
#endif  // !_MSC_VER

DebugMsg::DebugMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DebugMsg::InitAsDefaultInstance() {
}

DebugMsg::DebugMsg(const DebugMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DebugMsg::SharedCtor() {
  _cached_size_ = 0;
  debug_message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DebugMsg::~DebugMsg() {
  SharedDtor();
}

void DebugMsg::SharedDtor() {
  if (debug_message_ != &::google::protobuf::internal::kEmptyString) {
    delete debug_message_;
  }
  if (this != default_instance_) {
  }
}

void DebugMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DebugMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DebugMsg_descriptor_;
}

const DebugMsg& DebugMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

DebugMsg* DebugMsg::default_instance_ = NULL;

DebugMsg* DebugMsg::New() const {
  return new DebugMsg;
}

void DebugMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_debug_message()) {
      if (debug_message_ != &::google::protobuf::internal::kEmptyString) {
        debug_message_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DebugMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string debug_message = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_debug_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->debug_message().data(), this->debug_message().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DebugMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string debug_message = 1;
  if (has_debug_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->debug_message().data(), this->debug_message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->debug_message(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DebugMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string debug_message = 1;
  if (has_debug_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->debug_message().data(), this->debug_message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->debug_message(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DebugMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string debug_message = 1;
    if (has_debug_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->debug_message());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DebugMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DebugMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DebugMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DebugMsg::MergeFrom(const DebugMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_debug_message()) {
      set_debug_message(from.debug_message());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DebugMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DebugMsg::CopyFrom(const DebugMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DebugMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void DebugMsg::Swap(DebugMsg* other) {
  if (other != this) {
    std::swap(debug_message_, other->debug_message_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DebugMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DebugMsg_descriptor_;
  metadata.reflection = DebugMsg_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* ErrorMsg_ErrorType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ErrorMsg_ErrorType_descriptor_;
}
bool ErrorMsg_ErrorType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const ErrorMsg_ErrorType ErrorMsg::UNKNOWN_SENSOR_ID;
const ErrorMsg_ErrorType ErrorMsg::UNKNOWN_GENERALMSG_SUBTYPE;
const ErrorMsg_ErrorType ErrorMsg::ErrorType_MIN;
const ErrorMsg_ErrorType ErrorMsg::ErrorType_MAX;
const int ErrorMsg::ErrorType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int ErrorMsg::kErrorTypeFieldNumber;
#endif  // !_MSC_VER

ErrorMsg::ErrorMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ErrorMsg::InitAsDefaultInstance() {
}

ErrorMsg::ErrorMsg(const ErrorMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ErrorMsg::SharedCtor() {
  _cached_size_ = 0;
  error_type_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ErrorMsg::~ErrorMsg() {
  SharedDtor();
}

void ErrorMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ErrorMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ErrorMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ErrorMsg_descriptor_;
}

const ErrorMsg& ErrorMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

ErrorMsg* ErrorMsg::default_instance_ = NULL;

ErrorMsg* ErrorMsg::New() const {
  return new ErrorMsg;
}

void ErrorMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    error_type_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ErrorMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .protobuf.ErrorMsg.ErrorType error_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protobuf::ErrorMsg_ErrorType_IsValid(value)) {
            set_error_type(static_cast< ::protobuf::ErrorMsg_ErrorType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ErrorMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .protobuf.ErrorMsg.ErrorType error_type = 1;
  if (has_error_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->error_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ErrorMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .protobuf.ErrorMsg.ErrorType error_type = 1;
  if (has_error_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->error_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ErrorMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .protobuf.ErrorMsg.ErrorType error_type = 1;
    if (has_error_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ErrorMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ErrorMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ErrorMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ErrorMsg::MergeFrom(const ErrorMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_error_type()) {
      set_error_type(from.error_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ErrorMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ErrorMsg::CopyFrom(const ErrorMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ErrorMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ErrorMsg::Swap(ErrorMsg* other) {
  if (other != this) {
    std::swap(error_type_, other->error_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ErrorMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ErrorMsg_descriptor_;
  metadata.reflection = ErrorMsg_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf

// @@protoc_insertion_point(global_scope)
