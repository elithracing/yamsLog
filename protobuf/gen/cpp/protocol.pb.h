// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol.proto

#ifndef PROTOBUF_protocol_2eproto__INCLUDED
#define PROTOBUF_protocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_protocol_2eproto();
void protobuf_AssignDesc_protocol_2eproto();
void protobuf_ShutdownFile_protocol_2eproto();

class GeneralMsg;
class DataMsg;
class DynamicEventStruct;
class SetDynamicEventRequestMsg;
class SetDynamicEventResponseMsg;
class DynamicEventMsg;
class AttributeConfiguration;
class SensorConfiguration;
class ConfigurationMsg;
class SettingsRequestMsg;
class SettingsResponseMsg;
class SensorStatusMsg;
class SensorStatusMsg_Attribute;
class SensorStatusMsg_Sensor;
class StatusMsg;
class CreateNewProjectRequestMsg;
class CreateNewProjectResponseMsg;
class RenameProjectRequestMsg;
class RenameProjectResponseMsg;
class RemoveProjectRequestMsg;
class RemoveProjectResponseMsg;
class SetActiveProjectRequestMsg;
class SetActiveProjectResponseMsg;
class ActiveProjectMsg;
class ActiveExperimentMsg;
class ProjectListMsg;
class ProjectMetadataStruct;
class SetProjectMetadataRequestMsg;
class SetProjectMetadataResponseMsg;
class ProjectMetadataMsg;
class ExperimentDataCollectionStartRequestMsg;
class ExperimentDataCollectionStartResponseMsg;
class ExperimentDataCollectionStopRequestMsg;
class ExperimentDataCollectionStopResponseMsg;
class RenameExperimentRequestMsg;
class RenameExperimentResponseMsg;
class RemoveExperimentRequestMsg;
class RemoveExperimentResponseMsg;
class ExperimentPlaybackStartRequestMsg;
class ExperimentPlaybackStartResponseMsg;
class ExperimentPlaybackStopRequestMsg;
class ExperimentPlaybackStopResponseMsg;
class ExperimentListMsg;
class SetExperimentMetadataRequestMsg;
class SetExperimentMetadataResponseMsg;
class ExperimentMetadataMsg;
class ExperimentMetadataMsg_MetadataStruct;
class DebugMsg;
class ErrorMsg;

enum GeneralMsg_SubType {
  GeneralMsg_SubType_DATA_T = 1,
  GeneralMsg_SubType_SET_DYNAMIC_EVENT_REQUEST_T = 2,
  GeneralMsg_SubType_SET_DYNAMIC_EVENT_RESPONSE_T = 3,
  GeneralMsg_SubType_DYNAMIC_EVENT_T = 4,
  GeneralMsg_SubType_CONFIGURATION_T = 5,
  GeneralMsg_SubType_SETTINGS_REQUEST_T = 6,
  GeneralMsg_SubType_SETTINGS_RESPONSE_T = 7,
  GeneralMsg_SubType_SENSOR_STATUS_T = 8,
  GeneralMsg_SubType_STATUS_T = 9,
  GeneralMsg_SubType_CREATE_NEW_PROJECT_REQUEST_T = 10,
  GeneralMsg_SubType_CREATE_NEW_PROJECT_RESPONSE_T = 11,
  GeneralMsg_SubType_RENAME_PROJECT_REQUEST_T = 12,
  GeneralMsg_SubType_RENAME_PROJECT_RESPONSE_T = 13,
  GeneralMsg_SubType_REMOVE_PROJECT_REQUEST_T = 14,
  GeneralMsg_SubType_REMOVE_PROJECT_RESPONSE_T = 15,
  GeneralMsg_SubType_SET_ACTIVE_PROJECT_REQUEST_T = 16,
  GeneralMsg_SubType_SET_ACTIVE_PROJECT_RESPONSE_T = 17,
  GeneralMsg_SubType_ACTIVE_PROJECT_T = 18,
  GeneralMsg_SubType_PROJECT_LIST_T = 19,
  GeneralMsg_SubType_SET_PROJECT_METADATA_REQUEST_T = 20,
  GeneralMsg_SubType_SET_PROJECT_METADATA_RESPONSE_T = 21,
  GeneralMsg_SubType_PROJECT_METADATA_T = 22,
  GeneralMsg_SubType_EXPERIMENT_DATA_COLLECTION_START_REQUEST_T = 23,
  GeneralMsg_SubType_EXPERIMENT_DATA_COLLECTION_START_RESPONSE_T = 24,
  GeneralMsg_SubType_EXPERIMENT_DATA_COLLECTION_STOP_REQUEST_T = 25,
  GeneralMsg_SubType_EXPERIMENT_DATA_COLLECTION_STOP_RESPONSE_T = 26,
  GeneralMsg_SubType_RENAME_EXPERIMENT_REQUEST_T = 27,
  GeneralMsg_SubType_RENAME_EXPERIMENT_RESPONSE_T = 28,
  GeneralMsg_SubType_REMOVE_EXPERIMENT_REQUEST_T = 29,
  GeneralMsg_SubType_REMOVE_EXPERIMENT_RESPONSE_T = 30,
  GeneralMsg_SubType_EXPERIMENT_PLAYBACK_START_REQUEST_T = 31,
  GeneralMsg_SubType_EXPERIMENT_PLAYBACK_START_RESPONSE_T = 32,
  GeneralMsg_SubType_EXPERIMENT_PLAYBACK_STOP_REQUEST_T = 33,
  GeneralMsg_SubType_EXPERIMENT_PLAYBACK_STOP_RESPONSE_T = 34,
  GeneralMsg_SubType_EXPERIMENT_LIST_T = 35,
  GeneralMsg_SubType_SET_EXPERIMENT_METADATA_REQUEST_T = 36,
  GeneralMsg_SubType_SET_EXPERIMENT_METADATA_RESPONSE_T = 37,
  GeneralMsg_SubType_EXPERIMENT_METADATA_T = 38,
  GeneralMsg_SubType_DEBUG_T = 39,
  GeneralMsg_SubType_ERROR_T = 40,
  GeneralMsg_SubType_ACTIVE_EXPERIMENT_T = 41
};
bool GeneralMsg_SubType_IsValid(int value);
const GeneralMsg_SubType GeneralMsg_SubType_SubType_MIN = GeneralMsg_SubType_DATA_T;
const GeneralMsg_SubType GeneralMsg_SubType_SubType_MAX = GeneralMsg_SubType_ACTIVE_EXPERIMENT_T;
const int GeneralMsg_SubType_SubType_ARRAYSIZE = GeneralMsg_SubType_SubType_MAX + 1;

const ::google::protobuf::EnumDescriptor* GeneralMsg_SubType_descriptor();
inline const ::std::string& GeneralMsg_SubType_Name(GeneralMsg_SubType value) {
  return ::google::protobuf::internal::NameOfEnum(
    GeneralMsg_SubType_descriptor(), value);
}
inline bool GeneralMsg_SubType_Parse(
    const ::std::string& name, GeneralMsg_SubType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GeneralMsg_SubType>(
    GeneralMsg_SubType_descriptor(), name, value);
}
enum SetDynamicEventResponseMsg_ResponseType {
  SetDynamicEventResponseMsg_ResponseType_SUCCESS = 1,
  SetDynamicEventResponseMsg_ResponseType_ILLEGAL_TIME = 2,
  SetDynamicEventResponseMsg_ResponseType_NO_ACTIVE_PROJECT = 3,
  SetDynamicEventResponseMsg_ResponseType_NOT_IN_DATA_COLLECTION_MODE = 4,
  SetDynamicEventResponseMsg_ResponseType_OTHER_ERROR = 5
};
bool SetDynamicEventResponseMsg_ResponseType_IsValid(int value);
const SetDynamicEventResponseMsg_ResponseType SetDynamicEventResponseMsg_ResponseType_ResponseType_MIN = SetDynamicEventResponseMsg_ResponseType_SUCCESS;
const SetDynamicEventResponseMsg_ResponseType SetDynamicEventResponseMsg_ResponseType_ResponseType_MAX = SetDynamicEventResponseMsg_ResponseType_OTHER_ERROR;
const int SetDynamicEventResponseMsg_ResponseType_ResponseType_ARRAYSIZE = SetDynamicEventResponseMsg_ResponseType_ResponseType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SetDynamicEventResponseMsg_ResponseType_descriptor();
inline const ::std::string& SetDynamicEventResponseMsg_ResponseType_Name(SetDynamicEventResponseMsg_ResponseType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SetDynamicEventResponseMsg_ResponseType_descriptor(), value);
}
inline bool SetDynamicEventResponseMsg_ResponseType_Parse(
    const ::std::string& name, SetDynamicEventResponseMsg_ResponseType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SetDynamicEventResponseMsg_ResponseType>(
    SetDynamicEventResponseMsg_ResponseType_descriptor(), name, value);
}
enum SettingsResponseMsg_ResponseType {
  SettingsResponseMsg_ResponseType_SUCCESS = 1,
  SettingsResponseMsg_ResponseType_ILLEGAL_SENSOR_ID = 2,
  SettingsResponseMsg_ResponseType_OTHER_ERROR = 3
};
bool SettingsResponseMsg_ResponseType_IsValid(int value);
const SettingsResponseMsg_ResponseType SettingsResponseMsg_ResponseType_ResponseType_MIN = SettingsResponseMsg_ResponseType_SUCCESS;
const SettingsResponseMsg_ResponseType SettingsResponseMsg_ResponseType_ResponseType_MAX = SettingsResponseMsg_ResponseType_OTHER_ERROR;
const int SettingsResponseMsg_ResponseType_ResponseType_ARRAYSIZE = SettingsResponseMsg_ResponseType_ResponseType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SettingsResponseMsg_ResponseType_descriptor();
inline const ::std::string& SettingsResponseMsg_ResponseType_Name(SettingsResponseMsg_ResponseType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SettingsResponseMsg_ResponseType_descriptor(), value);
}
inline bool SettingsResponseMsg_ResponseType_Parse(
    const ::std::string& name, SettingsResponseMsg_ResponseType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SettingsResponseMsg_ResponseType>(
    SettingsResponseMsg_ResponseType_descriptor(), name, value);
}
enum SensorStatusMsg_SensorStatusType {
  SensorStatusMsg_SensorStatusType_WORKING = 1,
  SensorStatusMsg_SensorStatusType_NOT_WORKING = 2
};
bool SensorStatusMsg_SensorStatusType_IsValid(int value);
const SensorStatusMsg_SensorStatusType SensorStatusMsg_SensorStatusType_SensorStatusType_MIN = SensorStatusMsg_SensorStatusType_WORKING;
const SensorStatusMsg_SensorStatusType SensorStatusMsg_SensorStatusType_SensorStatusType_MAX = SensorStatusMsg_SensorStatusType_NOT_WORKING;
const int SensorStatusMsg_SensorStatusType_SensorStatusType_ARRAYSIZE = SensorStatusMsg_SensorStatusType_SensorStatusType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SensorStatusMsg_SensorStatusType_descriptor();
inline const ::std::string& SensorStatusMsg_SensorStatusType_Name(SensorStatusMsg_SensorStatusType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SensorStatusMsg_SensorStatusType_descriptor(), value);
}
inline bool SensorStatusMsg_SensorStatusType_Parse(
    const ::std::string& name, SensorStatusMsg_SensorStatusType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SensorStatusMsg_SensorStatusType>(
    SensorStatusMsg_SensorStatusType_descriptor(), name, value);
}
enum SensorStatusMsg_AttributeStatusType {
  SensorStatusMsg_AttributeStatusType_INSIDE_LIMITS = 1,
  SensorStatusMsg_AttributeStatusType_OUTSIDE_LIMITS = 2
};
bool SensorStatusMsg_AttributeStatusType_IsValid(int value);
const SensorStatusMsg_AttributeStatusType SensorStatusMsg_AttributeStatusType_AttributeStatusType_MIN = SensorStatusMsg_AttributeStatusType_INSIDE_LIMITS;
const SensorStatusMsg_AttributeStatusType SensorStatusMsg_AttributeStatusType_AttributeStatusType_MAX = SensorStatusMsg_AttributeStatusType_OUTSIDE_LIMITS;
const int SensorStatusMsg_AttributeStatusType_AttributeStatusType_ARRAYSIZE = SensorStatusMsg_AttributeStatusType_AttributeStatusType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SensorStatusMsg_AttributeStatusType_descriptor();
inline const ::std::string& SensorStatusMsg_AttributeStatusType_Name(SensorStatusMsg_AttributeStatusType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SensorStatusMsg_AttributeStatusType_descriptor(), value);
}
inline bool SensorStatusMsg_AttributeStatusType_Parse(
    const ::std::string& name, SensorStatusMsg_AttributeStatusType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SensorStatusMsg_AttributeStatusType>(
    SensorStatusMsg_AttributeStatusType_descriptor(), name, value);
}
enum StatusMsg_StatusType {
  StatusMsg_StatusType_IDLE = 1,
  StatusMsg_StatusType_DATA_COLLECTION = 2,
  StatusMsg_StatusType_EXPERIMENT_PLAYBACK = 3
};
bool StatusMsg_StatusType_IsValid(int value);
const StatusMsg_StatusType StatusMsg_StatusType_StatusType_MIN = StatusMsg_StatusType_IDLE;
const StatusMsg_StatusType StatusMsg_StatusType_StatusType_MAX = StatusMsg_StatusType_EXPERIMENT_PLAYBACK;
const int StatusMsg_StatusType_StatusType_ARRAYSIZE = StatusMsg_StatusType_StatusType_MAX + 1;

const ::google::protobuf::EnumDescriptor* StatusMsg_StatusType_descriptor();
inline const ::std::string& StatusMsg_StatusType_Name(StatusMsg_StatusType value) {
  return ::google::protobuf::internal::NameOfEnum(
    StatusMsg_StatusType_descriptor(), value);
}
inline bool StatusMsg_StatusType_Parse(
    const ::std::string& name, StatusMsg_StatusType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StatusMsg_StatusType>(
    StatusMsg_StatusType_descriptor(), name, value);
}
enum CreateNewProjectResponseMsg_ResponseType {
  CreateNewProjectResponseMsg_ResponseType_SUCCESS = 1,
  CreateNewProjectResponseMsg_ResponseType_NAME_TAKEN = 2,
  CreateNewProjectResponseMsg_ResponseType_ILLEGAL_NAME = 3,
  CreateNewProjectResponseMsg_ResponseType_OTHER_ERROR = 4
};
bool CreateNewProjectResponseMsg_ResponseType_IsValid(int value);
const CreateNewProjectResponseMsg_ResponseType CreateNewProjectResponseMsg_ResponseType_ResponseType_MIN = CreateNewProjectResponseMsg_ResponseType_SUCCESS;
const CreateNewProjectResponseMsg_ResponseType CreateNewProjectResponseMsg_ResponseType_ResponseType_MAX = CreateNewProjectResponseMsg_ResponseType_OTHER_ERROR;
const int CreateNewProjectResponseMsg_ResponseType_ResponseType_ARRAYSIZE = CreateNewProjectResponseMsg_ResponseType_ResponseType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CreateNewProjectResponseMsg_ResponseType_descriptor();
inline const ::std::string& CreateNewProjectResponseMsg_ResponseType_Name(CreateNewProjectResponseMsg_ResponseType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CreateNewProjectResponseMsg_ResponseType_descriptor(), value);
}
inline bool CreateNewProjectResponseMsg_ResponseType_Parse(
    const ::std::string& name, CreateNewProjectResponseMsg_ResponseType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CreateNewProjectResponseMsg_ResponseType>(
    CreateNewProjectResponseMsg_ResponseType_descriptor(), name, value);
}
enum RenameProjectResponseMsg_ResponseType {
  RenameProjectResponseMsg_ResponseType_SUCCESS = 1,
  RenameProjectResponseMsg_ResponseType_ILLEGAL_NAME = 2,
  RenameProjectResponseMsg_ResponseType_NAME_TAKEN = 3,
  RenameProjectResponseMsg_ResponseType_PROJECT_NOT_FOUND = 4,
  RenameProjectResponseMsg_ResponseType_OTHER_ERROR = 5
};
bool RenameProjectResponseMsg_ResponseType_IsValid(int value);
const RenameProjectResponseMsg_ResponseType RenameProjectResponseMsg_ResponseType_ResponseType_MIN = RenameProjectResponseMsg_ResponseType_SUCCESS;
const RenameProjectResponseMsg_ResponseType RenameProjectResponseMsg_ResponseType_ResponseType_MAX = RenameProjectResponseMsg_ResponseType_OTHER_ERROR;
const int RenameProjectResponseMsg_ResponseType_ResponseType_ARRAYSIZE = RenameProjectResponseMsg_ResponseType_ResponseType_MAX + 1;

const ::google::protobuf::EnumDescriptor* RenameProjectResponseMsg_ResponseType_descriptor();
inline const ::std::string& RenameProjectResponseMsg_ResponseType_Name(RenameProjectResponseMsg_ResponseType value) {
  return ::google::protobuf::internal::NameOfEnum(
    RenameProjectResponseMsg_ResponseType_descriptor(), value);
}
inline bool RenameProjectResponseMsg_ResponseType_Parse(
    const ::std::string& name, RenameProjectResponseMsg_ResponseType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RenameProjectResponseMsg_ResponseType>(
    RenameProjectResponseMsg_ResponseType_descriptor(), name, value);
}
enum RemoveProjectResponseMsg_ResponseType {
  RemoveProjectResponseMsg_ResponseType_SUCCESS = 1,
  RemoveProjectResponseMsg_ResponseType_PROJECT_NOT_FOUND = 2,
  RemoveProjectResponseMsg_ResponseType_OTHER_ERROR = 3
};
bool RemoveProjectResponseMsg_ResponseType_IsValid(int value);
const RemoveProjectResponseMsg_ResponseType RemoveProjectResponseMsg_ResponseType_ResponseType_MIN = RemoveProjectResponseMsg_ResponseType_SUCCESS;
const RemoveProjectResponseMsg_ResponseType RemoveProjectResponseMsg_ResponseType_ResponseType_MAX = RemoveProjectResponseMsg_ResponseType_OTHER_ERROR;
const int RemoveProjectResponseMsg_ResponseType_ResponseType_ARRAYSIZE = RemoveProjectResponseMsg_ResponseType_ResponseType_MAX + 1;

const ::google::protobuf::EnumDescriptor* RemoveProjectResponseMsg_ResponseType_descriptor();
inline const ::std::string& RemoveProjectResponseMsg_ResponseType_Name(RemoveProjectResponseMsg_ResponseType value) {
  return ::google::protobuf::internal::NameOfEnum(
    RemoveProjectResponseMsg_ResponseType_descriptor(), value);
}
inline bool RemoveProjectResponseMsg_ResponseType_Parse(
    const ::std::string& name, RemoveProjectResponseMsg_ResponseType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RemoveProjectResponseMsg_ResponseType>(
    RemoveProjectResponseMsg_ResponseType_descriptor(), name, value);
}
enum SetActiveProjectResponseMsg_ResponseType {
  SetActiveProjectResponseMsg_ResponseType_SUCCESS = 1,
  SetActiveProjectResponseMsg_ResponseType_PROJECT_NOT_FOUND = 2,
  SetActiveProjectResponseMsg_ResponseType_NOT_IN_IDLE_MODE = 3,
  SetActiveProjectResponseMsg_ResponseType_OTHER_ERROR = 4
};
bool SetActiveProjectResponseMsg_ResponseType_IsValid(int value);
const SetActiveProjectResponseMsg_ResponseType SetActiveProjectResponseMsg_ResponseType_ResponseType_MIN = SetActiveProjectResponseMsg_ResponseType_SUCCESS;
const SetActiveProjectResponseMsg_ResponseType SetActiveProjectResponseMsg_ResponseType_ResponseType_MAX = SetActiveProjectResponseMsg_ResponseType_OTHER_ERROR;
const int SetActiveProjectResponseMsg_ResponseType_ResponseType_ARRAYSIZE = SetActiveProjectResponseMsg_ResponseType_ResponseType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SetActiveProjectResponseMsg_ResponseType_descriptor();
inline const ::std::string& SetActiveProjectResponseMsg_ResponseType_Name(SetActiveProjectResponseMsg_ResponseType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SetActiveProjectResponseMsg_ResponseType_descriptor(), value);
}
inline bool SetActiveProjectResponseMsg_ResponseType_Parse(
    const ::std::string& name, SetActiveProjectResponseMsg_ResponseType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SetActiveProjectResponseMsg_ResponseType>(
    SetActiveProjectResponseMsg_ResponseType_descriptor(), name, value);
}
enum SetProjectMetadataResponseMsg_ResponseType {
  SetProjectMetadataResponseMsg_ResponseType_SUCCESS = 1,
  SetProjectMetadataResponseMsg_ResponseType_NO_ACTIVE_PROJECT = 2,
  SetProjectMetadataResponseMsg_ResponseType_OTHER_ERROR = 3
};
bool SetProjectMetadataResponseMsg_ResponseType_IsValid(int value);
const SetProjectMetadataResponseMsg_ResponseType SetProjectMetadataResponseMsg_ResponseType_ResponseType_MIN = SetProjectMetadataResponseMsg_ResponseType_SUCCESS;
const SetProjectMetadataResponseMsg_ResponseType SetProjectMetadataResponseMsg_ResponseType_ResponseType_MAX = SetProjectMetadataResponseMsg_ResponseType_OTHER_ERROR;
const int SetProjectMetadataResponseMsg_ResponseType_ResponseType_ARRAYSIZE = SetProjectMetadataResponseMsg_ResponseType_ResponseType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SetProjectMetadataResponseMsg_ResponseType_descriptor();
inline const ::std::string& SetProjectMetadataResponseMsg_ResponseType_Name(SetProjectMetadataResponseMsg_ResponseType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SetProjectMetadataResponseMsg_ResponseType_descriptor(), value);
}
inline bool SetProjectMetadataResponseMsg_ResponseType_Parse(
    const ::std::string& name, SetProjectMetadataResponseMsg_ResponseType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SetProjectMetadataResponseMsg_ResponseType>(
    SetProjectMetadataResponseMsg_ResponseType_descriptor(), name, value);
}
enum ExperimentDataCollectionStartResponseMsg_ResponseType {
  ExperimentDataCollectionStartResponseMsg_ResponseType_SUCCESS = 1,
  ExperimentDataCollectionStartResponseMsg_ResponseType_NO_ACTIVE_PROJECT = 2,
  ExperimentDataCollectionStartResponseMsg_ResponseType_NOT_IN_IDLE_MODE = 3,
  ExperimentDataCollectionStartResponseMsg_ResponseType_NAME_TAKEN = 4,
  ExperimentDataCollectionStartResponseMsg_ResponseType_ILLEGAL_NAME = 5,
  ExperimentDataCollectionStartResponseMsg_ResponseType_OTHER_ERROR = 6
};
bool ExperimentDataCollectionStartResponseMsg_ResponseType_IsValid(int value);
const ExperimentDataCollectionStartResponseMsg_ResponseType ExperimentDataCollectionStartResponseMsg_ResponseType_ResponseType_MIN = ExperimentDataCollectionStartResponseMsg_ResponseType_SUCCESS;
const ExperimentDataCollectionStartResponseMsg_ResponseType ExperimentDataCollectionStartResponseMsg_ResponseType_ResponseType_MAX = ExperimentDataCollectionStartResponseMsg_ResponseType_OTHER_ERROR;
const int ExperimentDataCollectionStartResponseMsg_ResponseType_ResponseType_ARRAYSIZE = ExperimentDataCollectionStartResponseMsg_ResponseType_ResponseType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ExperimentDataCollectionStartResponseMsg_ResponseType_descriptor();
inline const ::std::string& ExperimentDataCollectionStartResponseMsg_ResponseType_Name(ExperimentDataCollectionStartResponseMsg_ResponseType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ExperimentDataCollectionStartResponseMsg_ResponseType_descriptor(), value);
}
inline bool ExperimentDataCollectionStartResponseMsg_ResponseType_Parse(
    const ::std::string& name, ExperimentDataCollectionStartResponseMsg_ResponseType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ExperimentDataCollectionStartResponseMsg_ResponseType>(
    ExperimentDataCollectionStartResponseMsg_ResponseType_descriptor(), name, value);
}
enum ExperimentDataCollectionStopResponseMsg_ResponseType {
  ExperimentDataCollectionStopResponseMsg_ResponseType_SUCCESS = 1,
  ExperimentDataCollectionStopResponseMsg_ResponseType_NOT_IN_DATA_COLLECTION_MODE = 2,
  ExperimentDataCollectionStopResponseMsg_ResponseType_OTHER_ERROR = 3
};
bool ExperimentDataCollectionStopResponseMsg_ResponseType_IsValid(int value);
const ExperimentDataCollectionStopResponseMsg_ResponseType ExperimentDataCollectionStopResponseMsg_ResponseType_ResponseType_MIN = ExperimentDataCollectionStopResponseMsg_ResponseType_SUCCESS;
const ExperimentDataCollectionStopResponseMsg_ResponseType ExperimentDataCollectionStopResponseMsg_ResponseType_ResponseType_MAX = ExperimentDataCollectionStopResponseMsg_ResponseType_OTHER_ERROR;
const int ExperimentDataCollectionStopResponseMsg_ResponseType_ResponseType_ARRAYSIZE = ExperimentDataCollectionStopResponseMsg_ResponseType_ResponseType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ExperimentDataCollectionStopResponseMsg_ResponseType_descriptor();
inline const ::std::string& ExperimentDataCollectionStopResponseMsg_ResponseType_Name(ExperimentDataCollectionStopResponseMsg_ResponseType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ExperimentDataCollectionStopResponseMsg_ResponseType_descriptor(), value);
}
inline bool ExperimentDataCollectionStopResponseMsg_ResponseType_Parse(
    const ::std::string& name, ExperimentDataCollectionStopResponseMsg_ResponseType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ExperimentDataCollectionStopResponseMsg_ResponseType>(
    ExperimentDataCollectionStopResponseMsg_ResponseType_descriptor(), name, value);
}
enum RenameExperimentResponseMsg_ResponseType {
  RenameExperimentResponseMsg_ResponseType_SUCCESS = 1,
  RenameExperimentResponseMsg_ResponseType_NO_ACTIVE_PROJECT = 2,
  RenameExperimentResponseMsg_ResponseType_NAME_TAKEN = 3,
  RenameExperimentResponseMsg_ResponseType_EXPERIMENT_NOT_FOUND = 4,
  RenameExperimentResponseMsg_ResponseType_OTHER_ERROR = 5
};
bool RenameExperimentResponseMsg_ResponseType_IsValid(int value);
const RenameExperimentResponseMsg_ResponseType RenameExperimentResponseMsg_ResponseType_ResponseType_MIN = RenameExperimentResponseMsg_ResponseType_SUCCESS;
const RenameExperimentResponseMsg_ResponseType RenameExperimentResponseMsg_ResponseType_ResponseType_MAX = RenameExperimentResponseMsg_ResponseType_OTHER_ERROR;
const int RenameExperimentResponseMsg_ResponseType_ResponseType_ARRAYSIZE = RenameExperimentResponseMsg_ResponseType_ResponseType_MAX + 1;

const ::google::protobuf::EnumDescriptor* RenameExperimentResponseMsg_ResponseType_descriptor();
inline const ::std::string& RenameExperimentResponseMsg_ResponseType_Name(RenameExperimentResponseMsg_ResponseType value) {
  return ::google::protobuf::internal::NameOfEnum(
    RenameExperimentResponseMsg_ResponseType_descriptor(), value);
}
inline bool RenameExperimentResponseMsg_ResponseType_Parse(
    const ::std::string& name, RenameExperimentResponseMsg_ResponseType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RenameExperimentResponseMsg_ResponseType>(
    RenameExperimentResponseMsg_ResponseType_descriptor(), name, value);
}
enum RemoveExperimentResponseMsg_ResponseType {
  RemoveExperimentResponseMsg_ResponseType_SUCCESS = 1,
  RemoveExperimentResponseMsg_ResponseType_NO_ACTIVE_PROJECT = 2,
  RemoveExperimentResponseMsg_ResponseType_EXPERIMENT_NOT_FOUND = 3,
  RemoveExperimentResponseMsg_ResponseType_OTHER_ERROR = 4
};
bool RemoveExperimentResponseMsg_ResponseType_IsValid(int value);
const RemoveExperimentResponseMsg_ResponseType RemoveExperimentResponseMsg_ResponseType_ResponseType_MIN = RemoveExperimentResponseMsg_ResponseType_SUCCESS;
const RemoveExperimentResponseMsg_ResponseType RemoveExperimentResponseMsg_ResponseType_ResponseType_MAX = RemoveExperimentResponseMsg_ResponseType_OTHER_ERROR;
const int RemoveExperimentResponseMsg_ResponseType_ResponseType_ARRAYSIZE = RemoveExperimentResponseMsg_ResponseType_ResponseType_MAX + 1;

const ::google::protobuf::EnumDescriptor* RemoveExperimentResponseMsg_ResponseType_descriptor();
inline const ::std::string& RemoveExperimentResponseMsg_ResponseType_Name(RemoveExperimentResponseMsg_ResponseType value) {
  return ::google::protobuf::internal::NameOfEnum(
    RemoveExperimentResponseMsg_ResponseType_descriptor(), value);
}
inline bool RemoveExperimentResponseMsg_ResponseType_Parse(
    const ::std::string& name, RemoveExperimentResponseMsg_ResponseType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RemoveExperimentResponseMsg_ResponseType>(
    RemoveExperimentResponseMsg_ResponseType_descriptor(), name, value);
}
enum ExperimentPlaybackStartResponseMsg_ResponseType {
  ExperimentPlaybackStartResponseMsg_ResponseType_SUCCESS = 1,
  ExperimentPlaybackStartResponseMsg_ResponseType_NO_ACTIVE_PROJECT = 2,
  ExperimentPlaybackStartResponseMsg_ResponseType_EXPERIMENT_NOT_FOUND = 3,
  ExperimentPlaybackStartResponseMsg_ResponseType_NOT_IN_IDLE_MODE = 4,
  ExperimentPlaybackStartResponseMsg_ResponseType_OTHER_ERROR = 5
};
bool ExperimentPlaybackStartResponseMsg_ResponseType_IsValid(int value);
const ExperimentPlaybackStartResponseMsg_ResponseType ExperimentPlaybackStartResponseMsg_ResponseType_ResponseType_MIN = ExperimentPlaybackStartResponseMsg_ResponseType_SUCCESS;
const ExperimentPlaybackStartResponseMsg_ResponseType ExperimentPlaybackStartResponseMsg_ResponseType_ResponseType_MAX = ExperimentPlaybackStartResponseMsg_ResponseType_OTHER_ERROR;
const int ExperimentPlaybackStartResponseMsg_ResponseType_ResponseType_ARRAYSIZE = ExperimentPlaybackStartResponseMsg_ResponseType_ResponseType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ExperimentPlaybackStartResponseMsg_ResponseType_descriptor();
inline const ::std::string& ExperimentPlaybackStartResponseMsg_ResponseType_Name(ExperimentPlaybackStartResponseMsg_ResponseType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ExperimentPlaybackStartResponseMsg_ResponseType_descriptor(), value);
}
inline bool ExperimentPlaybackStartResponseMsg_ResponseType_Parse(
    const ::std::string& name, ExperimentPlaybackStartResponseMsg_ResponseType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ExperimentPlaybackStartResponseMsg_ResponseType>(
    ExperimentPlaybackStartResponseMsg_ResponseType_descriptor(), name, value);
}
enum ExperimentPlaybackStopResponseMsg_ResponseType {
  ExperimentPlaybackStopResponseMsg_ResponseType_SUCCESS = 1,
  ExperimentPlaybackStopResponseMsg_ResponseType_NOT_IN_PLAYBACK_MODE = 2,
  ExperimentPlaybackStopResponseMsg_ResponseType_OTHER_ERROR = 3
};
bool ExperimentPlaybackStopResponseMsg_ResponseType_IsValid(int value);
const ExperimentPlaybackStopResponseMsg_ResponseType ExperimentPlaybackStopResponseMsg_ResponseType_ResponseType_MIN = ExperimentPlaybackStopResponseMsg_ResponseType_SUCCESS;
const ExperimentPlaybackStopResponseMsg_ResponseType ExperimentPlaybackStopResponseMsg_ResponseType_ResponseType_MAX = ExperimentPlaybackStopResponseMsg_ResponseType_OTHER_ERROR;
const int ExperimentPlaybackStopResponseMsg_ResponseType_ResponseType_ARRAYSIZE = ExperimentPlaybackStopResponseMsg_ResponseType_ResponseType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ExperimentPlaybackStopResponseMsg_ResponseType_descriptor();
inline const ::std::string& ExperimentPlaybackStopResponseMsg_ResponseType_Name(ExperimentPlaybackStopResponseMsg_ResponseType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ExperimentPlaybackStopResponseMsg_ResponseType_descriptor(), value);
}
inline bool ExperimentPlaybackStopResponseMsg_ResponseType_Parse(
    const ::std::string& name, ExperimentPlaybackStopResponseMsg_ResponseType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ExperimentPlaybackStopResponseMsg_ResponseType>(
    ExperimentPlaybackStopResponseMsg_ResponseType_descriptor(), name, value);
}
enum SetExperimentMetadataResponseMsg_ResponseType {
  SetExperimentMetadataResponseMsg_ResponseType_SUCCESS = 1,
  SetExperimentMetadataResponseMsg_ResponseType_NO_ACTIVE_PROJECT = 2,
  SetExperimentMetadataResponseMsg_ResponseType_EXPERIMENT_NOT_FOUND = 3,
  SetExperimentMetadataResponseMsg_ResponseType_OTHER_ERROR = 4
};
bool SetExperimentMetadataResponseMsg_ResponseType_IsValid(int value);
const SetExperimentMetadataResponseMsg_ResponseType SetExperimentMetadataResponseMsg_ResponseType_ResponseType_MIN = SetExperimentMetadataResponseMsg_ResponseType_SUCCESS;
const SetExperimentMetadataResponseMsg_ResponseType SetExperimentMetadataResponseMsg_ResponseType_ResponseType_MAX = SetExperimentMetadataResponseMsg_ResponseType_OTHER_ERROR;
const int SetExperimentMetadataResponseMsg_ResponseType_ResponseType_ARRAYSIZE = SetExperimentMetadataResponseMsg_ResponseType_ResponseType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SetExperimentMetadataResponseMsg_ResponseType_descriptor();
inline const ::std::string& SetExperimentMetadataResponseMsg_ResponseType_Name(SetExperimentMetadataResponseMsg_ResponseType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SetExperimentMetadataResponseMsg_ResponseType_descriptor(), value);
}
inline bool SetExperimentMetadataResponseMsg_ResponseType_Parse(
    const ::std::string& name, SetExperimentMetadataResponseMsg_ResponseType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SetExperimentMetadataResponseMsg_ResponseType>(
    SetExperimentMetadataResponseMsg_ResponseType_descriptor(), name, value);
}
enum ErrorMsg_ErrorType {
  ErrorMsg_ErrorType_UNKNOWN_SENSOR_ID = 1,
  ErrorMsg_ErrorType_UNKNOWN_GENERALMSG_SUBTYPE = 2
};
bool ErrorMsg_ErrorType_IsValid(int value);
const ErrorMsg_ErrorType ErrorMsg_ErrorType_ErrorType_MIN = ErrorMsg_ErrorType_UNKNOWN_SENSOR_ID;
const ErrorMsg_ErrorType ErrorMsg_ErrorType_ErrorType_MAX = ErrorMsg_ErrorType_UNKNOWN_GENERALMSG_SUBTYPE;
const int ErrorMsg_ErrorType_ErrorType_ARRAYSIZE = ErrorMsg_ErrorType_ErrorType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ErrorMsg_ErrorType_descriptor();
inline const ::std::string& ErrorMsg_ErrorType_Name(ErrorMsg_ErrorType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ErrorMsg_ErrorType_descriptor(), value);
}
inline bool ErrorMsg_ErrorType_Parse(
    const ::std::string& name, ErrorMsg_ErrorType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ErrorMsg_ErrorType>(
    ErrorMsg_ErrorType_descriptor(), name, value);
}
// ===================================================================

class GeneralMsg : public ::google::protobuf::Message {
 public:
  GeneralMsg();
  virtual ~GeneralMsg();

  GeneralMsg(const GeneralMsg& from);

  inline GeneralMsg& operator=(const GeneralMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GeneralMsg& default_instance();

  void Swap(GeneralMsg* other);

  // implements Message ----------------------------------------------

  GeneralMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GeneralMsg& from);
  void MergeFrom(const GeneralMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef GeneralMsg_SubType SubType;
  static const SubType DATA_T = GeneralMsg_SubType_DATA_T;
  static const SubType SET_DYNAMIC_EVENT_REQUEST_T = GeneralMsg_SubType_SET_DYNAMIC_EVENT_REQUEST_T;
  static const SubType SET_DYNAMIC_EVENT_RESPONSE_T = GeneralMsg_SubType_SET_DYNAMIC_EVENT_RESPONSE_T;
  static const SubType DYNAMIC_EVENT_T = GeneralMsg_SubType_DYNAMIC_EVENT_T;
  static const SubType CONFIGURATION_T = GeneralMsg_SubType_CONFIGURATION_T;
  static const SubType SETTINGS_REQUEST_T = GeneralMsg_SubType_SETTINGS_REQUEST_T;
  static const SubType SETTINGS_RESPONSE_T = GeneralMsg_SubType_SETTINGS_RESPONSE_T;
  static const SubType SENSOR_STATUS_T = GeneralMsg_SubType_SENSOR_STATUS_T;
  static const SubType STATUS_T = GeneralMsg_SubType_STATUS_T;
  static const SubType CREATE_NEW_PROJECT_REQUEST_T = GeneralMsg_SubType_CREATE_NEW_PROJECT_REQUEST_T;
  static const SubType CREATE_NEW_PROJECT_RESPONSE_T = GeneralMsg_SubType_CREATE_NEW_PROJECT_RESPONSE_T;
  static const SubType RENAME_PROJECT_REQUEST_T = GeneralMsg_SubType_RENAME_PROJECT_REQUEST_T;
  static const SubType RENAME_PROJECT_RESPONSE_T = GeneralMsg_SubType_RENAME_PROJECT_RESPONSE_T;
  static const SubType REMOVE_PROJECT_REQUEST_T = GeneralMsg_SubType_REMOVE_PROJECT_REQUEST_T;
  static const SubType REMOVE_PROJECT_RESPONSE_T = GeneralMsg_SubType_REMOVE_PROJECT_RESPONSE_T;
  static const SubType SET_ACTIVE_PROJECT_REQUEST_T = GeneralMsg_SubType_SET_ACTIVE_PROJECT_REQUEST_T;
  static const SubType SET_ACTIVE_PROJECT_RESPONSE_T = GeneralMsg_SubType_SET_ACTIVE_PROJECT_RESPONSE_T;
  static const SubType ACTIVE_PROJECT_T = GeneralMsg_SubType_ACTIVE_PROJECT_T;
  static const SubType PROJECT_LIST_T = GeneralMsg_SubType_PROJECT_LIST_T;
  static const SubType SET_PROJECT_METADATA_REQUEST_T = GeneralMsg_SubType_SET_PROJECT_METADATA_REQUEST_T;
  static const SubType SET_PROJECT_METADATA_RESPONSE_T = GeneralMsg_SubType_SET_PROJECT_METADATA_RESPONSE_T;
  static const SubType PROJECT_METADATA_T = GeneralMsg_SubType_PROJECT_METADATA_T;
  static const SubType EXPERIMENT_DATA_COLLECTION_START_REQUEST_T = GeneralMsg_SubType_EXPERIMENT_DATA_COLLECTION_START_REQUEST_T;
  static const SubType EXPERIMENT_DATA_COLLECTION_START_RESPONSE_T = GeneralMsg_SubType_EXPERIMENT_DATA_COLLECTION_START_RESPONSE_T;
  static const SubType EXPERIMENT_DATA_COLLECTION_STOP_REQUEST_T = GeneralMsg_SubType_EXPERIMENT_DATA_COLLECTION_STOP_REQUEST_T;
  static const SubType EXPERIMENT_DATA_COLLECTION_STOP_RESPONSE_T = GeneralMsg_SubType_EXPERIMENT_DATA_COLLECTION_STOP_RESPONSE_T;
  static const SubType RENAME_EXPERIMENT_REQUEST_T = GeneralMsg_SubType_RENAME_EXPERIMENT_REQUEST_T;
  static const SubType RENAME_EXPERIMENT_RESPONSE_T = GeneralMsg_SubType_RENAME_EXPERIMENT_RESPONSE_T;
  static const SubType REMOVE_EXPERIMENT_REQUEST_T = GeneralMsg_SubType_REMOVE_EXPERIMENT_REQUEST_T;
  static const SubType REMOVE_EXPERIMENT_RESPONSE_T = GeneralMsg_SubType_REMOVE_EXPERIMENT_RESPONSE_T;
  static const SubType EXPERIMENT_PLAYBACK_START_REQUEST_T = GeneralMsg_SubType_EXPERIMENT_PLAYBACK_START_REQUEST_T;
  static const SubType EXPERIMENT_PLAYBACK_START_RESPONSE_T = GeneralMsg_SubType_EXPERIMENT_PLAYBACK_START_RESPONSE_T;
  static const SubType EXPERIMENT_PLAYBACK_STOP_REQUEST_T = GeneralMsg_SubType_EXPERIMENT_PLAYBACK_STOP_REQUEST_T;
  static const SubType EXPERIMENT_PLAYBACK_STOP_RESPONSE_T = GeneralMsg_SubType_EXPERIMENT_PLAYBACK_STOP_RESPONSE_T;
  static const SubType EXPERIMENT_LIST_T = GeneralMsg_SubType_EXPERIMENT_LIST_T;
  static const SubType SET_EXPERIMENT_METADATA_REQUEST_T = GeneralMsg_SubType_SET_EXPERIMENT_METADATA_REQUEST_T;
  static const SubType SET_EXPERIMENT_METADATA_RESPONSE_T = GeneralMsg_SubType_SET_EXPERIMENT_METADATA_RESPONSE_T;
  static const SubType EXPERIMENT_METADATA_T = GeneralMsg_SubType_EXPERIMENT_METADATA_T;
  static const SubType DEBUG_T = GeneralMsg_SubType_DEBUG_T;
  static const SubType ERROR_T = GeneralMsg_SubType_ERROR_T;
  static const SubType ACTIVE_EXPERIMENT_T = GeneralMsg_SubType_ACTIVE_EXPERIMENT_T;
  static inline bool SubType_IsValid(int value) {
    return GeneralMsg_SubType_IsValid(value);
  }
  static const SubType SubType_MIN =
    GeneralMsg_SubType_SubType_MIN;
  static const SubType SubType_MAX =
    GeneralMsg_SubType_SubType_MAX;
  static const int SubType_ARRAYSIZE =
    GeneralMsg_SubType_SubType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SubType_descriptor() {
    return GeneralMsg_SubType_descriptor();
  }
  static inline const ::std::string& SubType_Name(SubType value) {
    return GeneralMsg_SubType_Name(value);
  }
  static inline bool SubType_Parse(const ::std::string& name,
      SubType* value) {
    return GeneralMsg_SubType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .protobuf.GeneralMsg.SubType sub_type = 1;
  inline bool has_sub_type() const;
  inline void clear_sub_type();
  static const int kSubTypeFieldNumber = 1;
  inline ::protobuf::GeneralMsg_SubType sub_type() const;
  inline void set_sub_type(::protobuf::GeneralMsg_SubType value);

  // optional .protobuf.DataMsg data = 2;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::protobuf::DataMsg& data() const;
  inline ::protobuf::DataMsg* mutable_data();
  inline ::protobuf::DataMsg* release_data();
  inline void set_allocated_data(::protobuf::DataMsg* data);

  // optional .protobuf.SetDynamicEventRequestMsg set_dynamic_event_request = 3;
  inline bool has_set_dynamic_event_request() const;
  inline void clear_set_dynamic_event_request();
  static const int kSetDynamicEventRequestFieldNumber = 3;
  inline const ::protobuf::SetDynamicEventRequestMsg& set_dynamic_event_request() const;
  inline ::protobuf::SetDynamicEventRequestMsg* mutable_set_dynamic_event_request();
  inline ::protobuf::SetDynamicEventRequestMsg* release_set_dynamic_event_request();
  inline void set_allocated_set_dynamic_event_request(::protobuf::SetDynamicEventRequestMsg* set_dynamic_event_request);

  // optional .protobuf.SetDynamicEventResponseMsg set_dynamic_event_response = 4;
  inline bool has_set_dynamic_event_response() const;
  inline void clear_set_dynamic_event_response();
  static const int kSetDynamicEventResponseFieldNumber = 4;
  inline const ::protobuf::SetDynamicEventResponseMsg& set_dynamic_event_response() const;
  inline ::protobuf::SetDynamicEventResponseMsg* mutable_set_dynamic_event_response();
  inline ::protobuf::SetDynamicEventResponseMsg* release_set_dynamic_event_response();
  inline void set_allocated_set_dynamic_event_response(::protobuf::SetDynamicEventResponseMsg* set_dynamic_event_response);

  // optional .protobuf.DynamicEventMsg dynamic_event = 5;
  inline bool has_dynamic_event() const;
  inline void clear_dynamic_event();
  static const int kDynamicEventFieldNumber = 5;
  inline const ::protobuf::DynamicEventMsg& dynamic_event() const;
  inline ::protobuf::DynamicEventMsg* mutable_dynamic_event();
  inline ::protobuf::DynamicEventMsg* release_dynamic_event();
  inline void set_allocated_dynamic_event(::protobuf::DynamicEventMsg* dynamic_event);

  // optional .protobuf.ConfigurationMsg configuration = 6;
  inline bool has_configuration() const;
  inline void clear_configuration();
  static const int kConfigurationFieldNumber = 6;
  inline const ::protobuf::ConfigurationMsg& configuration() const;
  inline ::protobuf::ConfigurationMsg* mutable_configuration();
  inline ::protobuf::ConfigurationMsg* release_configuration();
  inline void set_allocated_configuration(::protobuf::ConfigurationMsg* configuration);

  // optional .protobuf.SettingsRequestMsg settings_request = 7;
  inline bool has_settings_request() const;
  inline void clear_settings_request();
  static const int kSettingsRequestFieldNumber = 7;
  inline const ::protobuf::SettingsRequestMsg& settings_request() const;
  inline ::protobuf::SettingsRequestMsg* mutable_settings_request();
  inline ::protobuf::SettingsRequestMsg* release_settings_request();
  inline void set_allocated_settings_request(::protobuf::SettingsRequestMsg* settings_request);

  // optional .protobuf.SettingsResponseMsg settings_response = 8;
  inline bool has_settings_response() const;
  inline void clear_settings_response();
  static const int kSettingsResponseFieldNumber = 8;
  inline const ::protobuf::SettingsResponseMsg& settings_response() const;
  inline ::protobuf::SettingsResponseMsg* mutable_settings_response();
  inline ::protobuf::SettingsResponseMsg* release_settings_response();
  inline void set_allocated_settings_response(::protobuf::SettingsResponseMsg* settings_response);

  // optional .protobuf.SensorStatusMsg sensor_status = 9;
  inline bool has_sensor_status() const;
  inline void clear_sensor_status();
  static const int kSensorStatusFieldNumber = 9;
  inline const ::protobuf::SensorStatusMsg& sensor_status() const;
  inline ::protobuf::SensorStatusMsg* mutable_sensor_status();
  inline ::protobuf::SensorStatusMsg* release_sensor_status();
  inline void set_allocated_sensor_status(::protobuf::SensorStatusMsg* sensor_status);

  // optional .protobuf.StatusMsg status = 10;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 10;
  inline const ::protobuf::StatusMsg& status() const;
  inline ::protobuf::StatusMsg* mutable_status();
  inline ::protobuf::StatusMsg* release_status();
  inline void set_allocated_status(::protobuf::StatusMsg* status);

  // optional .protobuf.CreateNewProjectRequestMsg create_new_project_request = 11;
  inline bool has_create_new_project_request() const;
  inline void clear_create_new_project_request();
  static const int kCreateNewProjectRequestFieldNumber = 11;
  inline const ::protobuf::CreateNewProjectRequestMsg& create_new_project_request() const;
  inline ::protobuf::CreateNewProjectRequestMsg* mutable_create_new_project_request();
  inline ::protobuf::CreateNewProjectRequestMsg* release_create_new_project_request();
  inline void set_allocated_create_new_project_request(::protobuf::CreateNewProjectRequestMsg* create_new_project_request);

  // optional .protobuf.CreateNewProjectResponseMsg create_new_project_response = 12;
  inline bool has_create_new_project_response() const;
  inline void clear_create_new_project_response();
  static const int kCreateNewProjectResponseFieldNumber = 12;
  inline const ::protobuf::CreateNewProjectResponseMsg& create_new_project_response() const;
  inline ::protobuf::CreateNewProjectResponseMsg* mutable_create_new_project_response();
  inline ::protobuf::CreateNewProjectResponseMsg* release_create_new_project_response();
  inline void set_allocated_create_new_project_response(::protobuf::CreateNewProjectResponseMsg* create_new_project_response);

  // optional .protobuf.RenameProjectRequestMsg rename_project_request = 13;
  inline bool has_rename_project_request() const;
  inline void clear_rename_project_request();
  static const int kRenameProjectRequestFieldNumber = 13;
  inline const ::protobuf::RenameProjectRequestMsg& rename_project_request() const;
  inline ::protobuf::RenameProjectRequestMsg* mutable_rename_project_request();
  inline ::protobuf::RenameProjectRequestMsg* release_rename_project_request();
  inline void set_allocated_rename_project_request(::protobuf::RenameProjectRequestMsg* rename_project_request);

  // optional .protobuf.RenameProjectResponseMsg rename_project_response = 14;
  inline bool has_rename_project_response() const;
  inline void clear_rename_project_response();
  static const int kRenameProjectResponseFieldNumber = 14;
  inline const ::protobuf::RenameProjectResponseMsg& rename_project_response() const;
  inline ::protobuf::RenameProjectResponseMsg* mutable_rename_project_response();
  inline ::protobuf::RenameProjectResponseMsg* release_rename_project_response();
  inline void set_allocated_rename_project_response(::protobuf::RenameProjectResponseMsg* rename_project_response);

  // optional .protobuf.RemoveProjectRequestMsg remove_project_request = 15;
  inline bool has_remove_project_request() const;
  inline void clear_remove_project_request();
  static const int kRemoveProjectRequestFieldNumber = 15;
  inline const ::protobuf::RemoveProjectRequestMsg& remove_project_request() const;
  inline ::protobuf::RemoveProjectRequestMsg* mutable_remove_project_request();
  inline ::protobuf::RemoveProjectRequestMsg* release_remove_project_request();
  inline void set_allocated_remove_project_request(::protobuf::RemoveProjectRequestMsg* remove_project_request);

  // optional .protobuf.RemoveProjectResponseMsg remove_project_response = 16;
  inline bool has_remove_project_response() const;
  inline void clear_remove_project_response();
  static const int kRemoveProjectResponseFieldNumber = 16;
  inline const ::protobuf::RemoveProjectResponseMsg& remove_project_response() const;
  inline ::protobuf::RemoveProjectResponseMsg* mutable_remove_project_response();
  inline ::protobuf::RemoveProjectResponseMsg* release_remove_project_response();
  inline void set_allocated_remove_project_response(::protobuf::RemoveProjectResponseMsg* remove_project_response);

  // optional .protobuf.SetActiveProjectRequestMsg set_active_project_request = 17;
  inline bool has_set_active_project_request() const;
  inline void clear_set_active_project_request();
  static const int kSetActiveProjectRequestFieldNumber = 17;
  inline const ::protobuf::SetActiveProjectRequestMsg& set_active_project_request() const;
  inline ::protobuf::SetActiveProjectRequestMsg* mutable_set_active_project_request();
  inline ::protobuf::SetActiveProjectRequestMsg* release_set_active_project_request();
  inline void set_allocated_set_active_project_request(::protobuf::SetActiveProjectRequestMsg* set_active_project_request);

  // optional .protobuf.SetActiveProjectResponseMsg set_active_project_response = 18;
  inline bool has_set_active_project_response() const;
  inline void clear_set_active_project_response();
  static const int kSetActiveProjectResponseFieldNumber = 18;
  inline const ::protobuf::SetActiveProjectResponseMsg& set_active_project_response() const;
  inline ::protobuf::SetActiveProjectResponseMsg* mutable_set_active_project_response();
  inline ::protobuf::SetActiveProjectResponseMsg* release_set_active_project_response();
  inline void set_allocated_set_active_project_response(::protobuf::SetActiveProjectResponseMsg* set_active_project_response);

  // optional .protobuf.ActiveProjectMsg active_project = 19;
  inline bool has_active_project() const;
  inline void clear_active_project();
  static const int kActiveProjectFieldNumber = 19;
  inline const ::protobuf::ActiveProjectMsg& active_project() const;
  inline ::protobuf::ActiveProjectMsg* mutable_active_project();
  inline ::protobuf::ActiveProjectMsg* release_active_project();
  inline void set_allocated_active_project(::protobuf::ActiveProjectMsg* active_project);

  // optional .protobuf.ProjectListMsg project_list = 20;
  inline bool has_project_list() const;
  inline void clear_project_list();
  static const int kProjectListFieldNumber = 20;
  inline const ::protobuf::ProjectListMsg& project_list() const;
  inline ::protobuf::ProjectListMsg* mutable_project_list();
  inline ::protobuf::ProjectListMsg* release_project_list();
  inline void set_allocated_project_list(::protobuf::ProjectListMsg* project_list);

  // optional .protobuf.SetProjectMetadataRequestMsg set_project_metadata_request = 21;
  inline bool has_set_project_metadata_request() const;
  inline void clear_set_project_metadata_request();
  static const int kSetProjectMetadataRequestFieldNumber = 21;
  inline const ::protobuf::SetProjectMetadataRequestMsg& set_project_metadata_request() const;
  inline ::protobuf::SetProjectMetadataRequestMsg* mutable_set_project_metadata_request();
  inline ::protobuf::SetProjectMetadataRequestMsg* release_set_project_metadata_request();
  inline void set_allocated_set_project_metadata_request(::protobuf::SetProjectMetadataRequestMsg* set_project_metadata_request);

  // optional .protobuf.SetProjectMetadataResponseMsg set_project_metadata_response = 22;
  inline bool has_set_project_metadata_response() const;
  inline void clear_set_project_metadata_response();
  static const int kSetProjectMetadataResponseFieldNumber = 22;
  inline const ::protobuf::SetProjectMetadataResponseMsg& set_project_metadata_response() const;
  inline ::protobuf::SetProjectMetadataResponseMsg* mutable_set_project_metadata_response();
  inline ::protobuf::SetProjectMetadataResponseMsg* release_set_project_metadata_response();
  inline void set_allocated_set_project_metadata_response(::protobuf::SetProjectMetadataResponseMsg* set_project_metadata_response);

  // optional .protobuf.ProjectMetadataMsg project_metadata = 23;
  inline bool has_project_metadata() const;
  inline void clear_project_metadata();
  static const int kProjectMetadataFieldNumber = 23;
  inline const ::protobuf::ProjectMetadataMsg& project_metadata() const;
  inline ::protobuf::ProjectMetadataMsg* mutable_project_metadata();
  inline ::protobuf::ProjectMetadataMsg* release_project_metadata();
  inline void set_allocated_project_metadata(::protobuf::ProjectMetadataMsg* project_metadata);

  // optional .protobuf.ExperimentDataCollectionStartRequestMsg experiment_data_collection_start_request = 24;
  inline bool has_experiment_data_collection_start_request() const;
  inline void clear_experiment_data_collection_start_request();
  static const int kExperimentDataCollectionStartRequestFieldNumber = 24;
  inline const ::protobuf::ExperimentDataCollectionStartRequestMsg& experiment_data_collection_start_request() const;
  inline ::protobuf::ExperimentDataCollectionStartRequestMsg* mutable_experiment_data_collection_start_request();
  inline ::protobuf::ExperimentDataCollectionStartRequestMsg* release_experiment_data_collection_start_request();
  inline void set_allocated_experiment_data_collection_start_request(::protobuf::ExperimentDataCollectionStartRequestMsg* experiment_data_collection_start_request);

  // optional .protobuf.ExperimentDataCollectionStartResponseMsg experiment_data_collection_start_response = 25;
  inline bool has_experiment_data_collection_start_response() const;
  inline void clear_experiment_data_collection_start_response();
  static const int kExperimentDataCollectionStartResponseFieldNumber = 25;
  inline const ::protobuf::ExperimentDataCollectionStartResponseMsg& experiment_data_collection_start_response() const;
  inline ::protobuf::ExperimentDataCollectionStartResponseMsg* mutable_experiment_data_collection_start_response();
  inline ::protobuf::ExperimentDataCollectionStartResponseMsg* release_experiment_data_collection_start_response();
  inline void set_allocated_experiment_data_collection_start_response(::protobuf::ExperimentDataCollectionStartResponseMsg* experiment_data_collection_start_response);

  // optional .protobuf.ExperimentDataCollectionStopRequestMsg experiment_data_collection_stop_request = 26;
  inline bool has_experiment_data_collection_stop_request() const;
  inline void clear_experiment_data_collection_stop_request();
  static const int kExperimentDataCollectionStopRequestFieldNumber = 26;
  inline const ::protobuf::ExperimentDataCollectionStopRequestMsg& experiment_data_collection_stop_request() const;
  inline ::protobuf::ExperimentDataCollectionStopRequestMsg* mutable_experiment_data_collection_stop_request();
  inline ::protobuf::ExperimentDataCollectionStopRequestMsg* release_experiment_data_collection_stop_request();
  inline void set_allocated_experiment_data_collection_stop_request(::protobuf::ExperimentDataCollectionStopRequestMsg* experiment_data_collection_stop_request);

  // optional .protobuf.ExperimentDataCollectionStopResponseMsg experiment_data_collection_stop_response = 27;
  inline bool has_experiment_data_collection_stop_response() const;
  inline void clear_experiment_data_collection_stop_response();
  static const int kExperimentDataCollectionStopResponseFieldNumber = 27;
  inline const ::protobuf::ExperimentDataCollectionStopResponseMsg& experiment_data_collection_stop_response() const;
  inline ::protobuf::ExperimentDataCollectionStopResponseMsg* mutable_experiment_data_collection_stop_response();
  inline ::protobuf::ExperimentDataCollectionStopResponseMsg* release_experiment_data_collection_stop_response();
  inline void set_allocated_experiment_data_collection_stop_response(::protobuf::ExperimentDataCollectionStopResponseMsg* experiment_data_collection_stop_response);

  // optional .protobuf.RenameExperimentRequestMsg rename_experiment_request = 28;
  inline bool has_rename_experiment_request() const;
  inline void clear_rename_experiment_request();
  static const int kRenameExperimentRequestFieldNumber = 28;
  inline const ::protobuf::RenameExperimentRequestMsg& rename_experiment_request() const;
  inline ::protobuf::RenameExperimentRequestMsg* mutable_rename_experiment_request();
  inline ::protobuf::RenameExperimentRequestMsg* release_rename_experiment_request();
  inline void set_allocated_rename_experiment_request(::protobuf::RenameExperimentRequestMsg* rename_experiment_request);

  // optional .protobuf.RenameExperimentResponseMsg rename_experiment_response = 29;
  inline bool has_rename_experiment_response() const;
  inline void clear_rename_experiment_response();
  static const int kRenameExperimentResponseFieldNumber = 29;
  inline const ::protobuf::RenameExperimentResponseMsg& rename_experiment_response() const;
  inline ::protobuf::RenameExperimentResponseMsg* mutable_rename_experiment_response();
  inline ::protobuf::RenameExperimentResponseMsg* release_rename_experiment_response();
  inline void set_allocated_rename_experiment_response(::protobuf::RenameExperimentResponseMsg* rename_experiment_response);

  // optional .protobuf.RemoveExperimentRequestMsg remove_experiment_request = 30;
  inline bool has_remove_experiment_request() const;
  inline void clear_remove_experiment_request();
  static const int kRemoveExperimentRequestFieldNumber = 30;
  inline const ::protobuf::RemoveExperimentRequestMsg& remove_experiment_request() const;
  inline ::protobuf::RemoveExperimentRequestMsg* mutable_remove_experiment_request();
  inline ::protobuf::RemoveExperimentRequestMsg* release_remove_experiment_request();
  inline void set_allocated_remove_experiment_request(::protobuf::RemoveExperimentRequestMsg* remove_experiment_request);

  // optional .protobuf.RemoveExperimentResponseMsg remove_experiment_response = 31;
  inline bool has_remove_experiment_response() const;
  inline void clear_remove_experiment_response();
  static const int kRemoveExperimentResponseFieldNumber = 31;
  inline const ::protobuf::RemoveExperimentResponseMsg& remove_experiment_response() const;
  inline ::protobuf::RemoveExperimentResponseMsg* mutable_remove_experiment_response();
  inline ::protobuf::RemoveExperimentResponseMsg* release_remove_experiment_response();
  inline void set_allocated_remove_experiment_response(::protobuf::RemoveExperimentResponseMsg* remove_experiment_response);

  // optional .protobuf.ExperimentPlaybackStartRequestMsg experiment_playback_start_request = 32;
  inline bool has_experiment_playback_start_request() const;
  inline void clear_experiment_playback_start_request();
  static const int kExperimentPlaybackStartRequestFieldNumber = 32;
  inline const ::protobuf::ExperimentPlaybackStartRequestMsg& experiment_playback_start_request() const;
  inline ::protobuf::ExperimentPlaybackStartRequestMsg* mutable_experiment_playback_start_request();
  inline ::protobuf::ExperimentPlaybackStartRequestMsg* release_experiment_playback_start_request();
  inline void set_allocated_experiment_playback_start_request(::protobuf::ExperimentPlaybackStartRequestMsg* experiment_playback_start_request);

  // optional .protobuf.ExperimentPlaybackStartResponseMsg experiment_playback_start_response = 33;
  inline bool has_experiment_playback_start_response() const;
  inline void clear_experiment_playback_start_response();
  static const int kExperimentPlaybackStartResponseFieldNumber = 33;
  inline const ::protobuf::ExperimentPlaybackStartResponseMsg& experiment_playback_start_response() const;
  inline ::protobuf::ExperimentPlaybackStartResponseMsg* mutable_experiment_playback_start_response();
  inline ::protobuf::ExperimentPlaybackStartResponseMsg* release_experiment_playback_start_response();
  inline void set_allocated_experiment_playback_start_response(::protobuf::ExperimentPlaybackStartResponseMsg* experiment_playback_start_response);

  // optional .protobuf.ExperimentPlaybackStopRequestMsg experiment_playback_stop_request = 34;
  inline bool has_experiment_playback_stop_request() const;
  inline void clear_experiment_playback_stop_request();
  static const int kExperimentPlaybackStopRequestFieldNumber = 34;
  inline const ::protobuf::ExperimentPlaybackStopRequestMsg& experiment_playback_stop_request() const;
  inline ::protobuf::ExperimentPlaybackStopRequestMsg* mutable_experiment_playback_stop_request();
  inline ::protobuf::ExperimentPlaybackStopRequestMsg* release_experiment_playback_stop_request();
  inline void set_allocated_experiment_playback_stop_request(::protobuf::ExperimentPlaybackStopRequestMsg* experiment_playback_stop_request);

  // optional .protobuf.ExperimentPlaybackStopResponseMsg experiment_playback_stop_response = 35;
  inline bool has_experiment_playback_stop_response() const;
  inline void clear_experiment_playback_stop_response();
  static const int kExperimentPlaybackStopResponseFieldNumber = 35;
  inline const ::protobuf::ExperimentPlaybackStopResponseMsg& experiment_playback_stop_response() const;
  inline ::protobuf::ExperimentPlaybackStopResponseMsg* mutable_experiment_playback_stop_response();
  inline ::protobuf::ExperimentPlaybackStopResponseMsg* release_experiment_playback_stop_response();
  inline void set_allocated_experiment_playback_stop_response(::protobuf::ExperimentPlaybackStopResponseMsg* experiment_playback_stop_response);

  // optional .protobuf.ExperimentListMsg experiment_list = 36;
  inline bool has_experiment_list() const;
  inline void clear_experiment_list();
  static const int kExperimentListFieldNumber = 36;
  inline const ::protobuf::ExperimentListMsg& experiment_list() const;
  inline ::protobuf::ExperimentListMsg* mutable_experiment_list();
  inline ::protobuf::ExperimentListMsg* release_experiment_list();
  inline void set_allocated_experiment_list(::protobuf::ExperimentListMsg* experiment_list);

  // optional .protobuf.SetExperimentMetadataRequestMsg set_experiment_metadata_request = 37;
  inline bool has_set_experiment_metadata_request() const;
  inline void clear_set_experiment_metadata_request();
  static const int kSetExperimentMetadataRequestFieldNumber = 37;
  inline const ::protobuf::SetExperimentMetadataRequestMsg& set_experiment_metadata_request() const;
  inline ::protobuf::SetExperimentMetadataRequestMsg* mutable_set_experiment_metadata_request();
  inline ::protobuf::SetExperimentMetadataRequestMsg* release_set_experiment_metadata_request();
  inline void set_allocated_set_experiment_metadata_request(::protobuf::SetExperimentMetadataRequestMsg* set_experiment_metadata_request);

  // optional .protobuf.SetExperimentMetadataResponseMsg set_experiment_metadata_response = 38;
  inline bool has_set_experiment_metadata_response() const;
  inline void clear_set_experiment_metadata_response();
  static const int kSetExperimentMetadataResponseFieldNumber = 38;
  inline const ::protobuf::SetExperimentMetadataResponseMsg& set_experiment_metadata_response() const;
  inline ::protobuf::SetExperimentMetadataResponseMsg* mutable_set_experiment_metadata_response();
  inline ::protobuf::SetExperimentMetadataResponseMsg* release_set_experiment_metadata_response();
  inline void set_allocated_set_experiment_metadata_response(::protobuf::SetExperimentMetadataResponseMsg* set_experiment_metadata_response);

  // optional .protobuf.ExperimentMetadataMsg experiment_metadata = 39;
  inline bool has_experiment_metadata() const;
  inline void clear_experiment_metadata();
  static const int kExperimentMetadataFieldNumber = 39;
  inline const ::protobuf::ExperimentMetadataMsg& experiment_metadata() const;
  inline ::protobuf::ExperimentMetadataMsg* mutable_experiment_metadata();
  inline ::protobuf::ExperimentMetadataMsg* release_experiment_metadata();
  inline void set_allocated_experiment_metadata(::protobuf::ExperimentMetadataMsg* experiment_metadata);

  // optional .protobuf.DebugMsg debug_message = 40;
  inline bool has_debug_message() const;
  inline void clear_debug_message();
  static const int kDebugMessageFieldNumber = 40;
  inline const ::protobuf::DebugMsg& debug_message() const;
  inline ::protobuf::DebugMsg* mutable_debug_message();
  inline ::protobuf::DebugMsg* release_debug_message();
  inline void set_allocated_debug_message(::protobuf::DebugMsg* debug_message);

  // optional .protobuf.ErrorMsg error_message = 41;
  inline bool has_error_message() const;
  inline void clear_error_message();
  static const int kErrorMessageFieldNumber = 41;
  inline const ::protobuf::ErrorMsg& error_message() const;
  inline ::protobuf::ErrorMsg* mutable_error_message();
  inline ::protobuf::ErrorMsg* release_error_message();
  inline void set_allocated_error_message(::protobuf::ErrorMsg* error_message);

  // optional .protobuf.ActiveExperimentMsg active_experiment = 42;
  inline bool has_active_experiment() const;
  inline void clear_active_experiment();
  static const int kActiveExperimentFieldNumber = 42;
  inline const ::protobuf::ActiveExperimentMsg& active_experiment() const;
  inline ::protobuf::ActiveExperimentMsg* mutable_active_experiment();
  inline ::protobuf::ActiveExperimentMsg* release_active_experiment();
  inline void set_allocated_active_experiment(::protobuf::ActiveExperimentMsg* active_experiment);

  // @@protoc_insertion_point(class_scope:protobuf.GeneralMsg)
 private:
  inline void set_has_sub_type();
  inline void clear_has_sub_type();
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_set_dynamic_event_request();
  inline void clear_has_set_dynamic_event_request();
  inline void set_has_set_dynamic_event_response();
  inline void clear_has_set_dynamic_event_response();
  inline void set_has_dynamic_event();
  inline void clear_has_dynamic_event();
  inline void set_has_configuration();
  inline void clear_has_configuration();
  inline void set_has_settings_request();
  inline void clear_has_settings_request();
  inline void set_has_settings_response();
  inline void clear_has_settings_response();
  inline void set_has_sensor_status();
  inline void clear_has_sensor_status();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_create_new_project_request();
  inline void clear_has_create_new_project_request();
  inline void set_has_create_new_project_response();
  inline void clear_has_create_new_project_response();
  inline void set_has_rename_project_request();
  inline void clear_has_rename_project_request();
  inline void set_has_rename_project_response();
  inline void clear_has_rename_project_response();
  inline void set_has_remove_project_request();
  inline void clear_has_remove_project_request();
  inline void set_has_remove_project_response();
  inline void clear_has_remove_project_response();
  inline void set_has_set_active_project_request();
  inline void clear_has_set_active_project_request();
  inline void set_has_set_active_project_response();
  inline void clear_has_set_active_project_response();
  inline void set_has_active_project();
  inline void clear_has_active_project();
  inline void set_has_project_list();
  inline void clear_has_project_list();
  inline void set_has_set_project_metadata_request();
  inline void clear_has_set_project_metadata_request();
  inline void set_has_set_project_metadata_response();
  inline void clear_has_set_project_metadata_response();
  inline void set_has_project_metadata();
  inline void clear_has_project_metadata();
  inline void set_has_experiment_data_collection_start_request();
  inline void clear_has_experiment_data_collection_start_request();
  inline void set_has_experiment_data_collection_start_response();
  inline void clear_has_experiment_data_collection_start_response();
  inline void set_has_experiment_data_collection_stop_request();
  inline void clear_has_experiment_data_collection_stop_request();
  inline void set_has_experiment_data_collection_stop_response();
  inline void clear_has_experiment_data_collection_stop_response();
  inline void set_has_rename_experiment_request();
  inline void clear_has_rename_experiment_request();
  inline void set_has_rename_experiment_response();
  inline void clear_has_rename_experiment_response();
  inline void set_has_remove_experiment_request();
  inline void clear_has_remove_experiment_request();
  inline void set_has_remove_experiment_response();
  inline void clear_has_remove_experiment_response();
  inline void set_has_experiment_playback_start_request();
  inline void clear_has_experiment_playback_start_request();
  inline void set_has_experiment_playback_start_response();
  inline void clear_has_experiment_playback_start_response();
  inline void set_has_experiment_playback_stop_request();
  inline void clear_has_experiment_playback_stop_request();
  inline void set_has_experiment_playback_stop_response();
  inline void clear_has_experiment_playback_stop_response();
  inline void set_has_experiment_list();
  inline void clear_has_experiment_list();
  inline void set_has_set_experiment_metadata_request();
  inline void clear_has_set_experiment_metadata_request();
  inline void set_has_set_experiment_metadata_response();
  inline void clear_has_set_experiment_metadata_response();
  inline void set_has_experiment_metadata();
  inline void clear_has_experiment_metadata();
  inline void set_has_debug_message();
  inline void clear_has_debug_message();
  inline void set_has_error_message();
  inline void clear_has_error_message();
  inline void set_has_active_experiment();
  inline void clear_has_active_experiment();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::protobuf::DataMsg* data_;
  ::protobuf::SetDynamicEventRequestMsg* set_dynamic_event_request_;
  ::protobuf::SetDynamicEventResponseMsg* set_dynamic_event_response_;
  ::protobuf::DynamicEventMsg* dynamic_event_;
  ::protobuf::ConfigurationMsg* configuration_;
  ::protobuf::SettingsRequestMsg* settings_request_;
  ::protobuf::SettingsResponseMsg* settings_response_;
  ::protobuf::SensorStatusMsg* sensor_status_;
  ::protobuf::StatusMsg* status_;
  ::protobuf::CreateNewProjectRequestMsg* create_new_project_request_;
  ::protobuf::CreateNewProjectResponseMsg* create_new_project_response_;
  ::protobuf::RenameProjectRequestMsg* rename_project_request_;
  ::protobuf::RenameProjectResponseMsg* rename_project_response_;
  ::protobuf::RemoveProjectRequestMsg* remove_project_request_;
  ::protobuf::RemoveProjectResponseMsg* remove_project_response_;
  ::protobuf::SetActiveProjectRequestMsg* set_active_project_request_;
  ::protobuf::SetActiveProjectResponseMsg* set_active_project_response_;
  ::protobuf::ActiveProjectMsg* active_project_;
  ::protobuf::ProjectListMsg* project_list_;
  ::protobuf::SetProjectMetadataRequestMsg* set_project_metadata_request_;
  ::protobuf::SetProjectMetadataResponseMsg* set_project_metadata_response_;
  ::protobuf::ProjectMetadataMsg* project_metadata_;
  ::protobuf::ExperimentDataCollectionStartRequestMsg* experiment_data_collection_start_request_;
  ::protobuf::ExperimentDataCollectionStartResponseMsg* experiment_data_collection_start_response_;
  ::protobuf::ExperimentDataCollectionStopRequestMsg* experiment_data_collection_stop_request_;
  ::protobuf::ExperimentDataCollectionStopResponseMsg* experiment_data_collection_stop_response_;
  ::protobuf::RenameExperimentRequestMsg* rename_experiment_request_;
  ::protobuf::RenameExperimentResponseMsg* rename_experiment_response_;
  ::protobuf::RemoveExperimentRequestMsg* remove_experiment_request_;
  ::protobuf::RemoveExperimentResponseMsg* remove_experiment_response_;
  ::protobuf::ExperimentPlaybackStartRequestMsg* experiment_playback_start_request_;
  ::protobuf::ExperimentPlaybackStartResponseMsg* experiment_playback_start_response_;
  ::protobuf::ExperimentPlaybackStopRequestMsg* experiment_playback_stop_request_;
  ::protobuf::ExperimentPlaybackStopResponseMsg* experiment_playback_stop_response_;
  ::protobuf::ExperimentListMsg* experiment_list_;
  ::protobuf::SetExperimentMetadataRequestMsg* set_experiment_metadata_request_;
  ::protobuf::SetExperimentMetadataResponseMsg* set_experiment_metadata_response_;
  ::protobuf::ExperimentMetadataMsg* experiment_metadata_;
  ::protobuf::DebugMsg* debug_message_;
  ::protobuf::ErrorMsg* error_message_;
  ::protobuf::ActiveExperimentMsg* active_experiment_;
  int sub_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(42 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static GeneralMsg* default_instance_;
};
// -------------------------------------------------------------------

class DataMsg : public ::google::protobuf::Message {
 public:
  DataMsg();
  virtual ~DataMsg();

  DataMsg(const DataMsg& from);

  inline DataMsg& operator=(const DataMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DataMsg& default_instance();

  void Swap(DataMsg* other);

  // implements Message ----------------------------------------------

  DataMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DataMsg& from);
  void MergeFrom(const DataMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double time = 1;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 1;
  inline double time() const;
  inline void set_time(double value);

  // required int32 type_id = 2;
  inline bool has_type_id() const;
  inline void clear_type_id();
  static const int kTypeIdFieldNumber = 2;
  inline ::google::protobuf::int32 type_id() const;
  inline void set_type_id(::google::protobuf::int32 value);

  // repeated float data = 3;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline float data(int index) const;
  inline void set_data(int index, float value);
  inline void add_data(float value);
  inline const ::google::protobuf::RepeatedField< float >&
      data() const;
  inline ::google::protobuf::RepeatedField< float >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:protobuf.DataMsg)
 private:
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_type_id();
  inline void clear_has_type_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  double time_;
  ::google::protobuf::RepeatedField< float > data_;
  ::google::protobuf::int32 type_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static DataMsg* default_instance_;
};
// -------------------------------------------------------------------

class DynamicEventStruct : public ::google::protobuf::Message {
 public:
  DynamicEventStruct();
  virtual ~DynamicEventStruct();

  DynamicEventStruct(const DynamicEventStruct& from);

  inline DynamicEventStruct& operator=(const DynamicEventStruct& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DynamicEventStruct& default_instance();

  void Swap(DynamicEventStruct* other);

  // implements Message ----------------------------------------------

  DynamicEventStruct* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DynamicEventStruct& from);
  void MergeFrom(const DynamicEventStruct& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double time = 1;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 1;
  inline double time() const;
  inline void set_time(double value);

  // required string message = 2;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 2;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  inline void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:protobuf.DynamicEventStruct)
 private:
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_message();
  inline void clear_has_message();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  double time_;
  ::std::string* message_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static DynamicEventStruct* default_instance_;
};
// -------------------------------------------------------------------

class SetDynamicEventRequestMsg : public ::google::protobuf::Message {
 public:
  SetDynamicEventRequestMsg();
  virtual ~SetDynamicEventRequestMsg();

  SetDynamicEventRequestMsg(const SetDynamicEventRequestMsg& from);

  inline SetDynamicEventRequestMsg& operator=(const SetDynamicEventRequestMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetDynamicEventRequestMsg& default_instance();

  void Swap(SetDynamicEventRequestMsg* other);

  // implements Message ----------------------------------------------

  SetDynamicEventRequestMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetDynamicEventRequestMsg& from);
  void MergeFrom(const SetDynamicEventRequestMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .protobuf.DynamicEventStruct dynamic_event = 1;
  inline bool has_dynamic_event() const;
  inline void clear_dynamic_event();
  static const int kDynamicEventFieldNumber = 1;
  inline const ::protobuf::DynamicEventStruct& dynamic_event() const;
  inline ::protobuf::DynamicEventStruct* mutable_dynamic_event();
  inline ::protobuf::DynamicEventStruct* release_dynamic_event();
  inline void set_allocated_dynamic_event(::protobuf::DynamicEventStruct* dynamic_event);

  // @@protoc_insertion_point(class_scope:protobuf.SetDynamicEventRequestMsg)
 private:
  inline void set_has_dynamic_event();
  inline void clear_has_dynamic_event();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::protobuf::DynamicEventStruct* dynamic_event_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static SetDynamicEventRequestMsg* default_instance_;
};
// -------------------------------------------------------------------

class SetDynamicEventResponseMsg : public ::google::protobuf::Message {
 public:
  SetDynamicEventResponseMsg();
  virtual ~SetDynamicEventResponseMsg();

  SetDynamicEventResponseMsg(const SetDynamicEventResponseMsg& from);

  inline SetDynamicEventResponseMsg& operator=(const SetDynamicEventResponseMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetDynamicEventResponseMsg& default_instance();

  void Swap(SetDynamicEventResponseMsg* other);

  // implements Message ----------------------------------------------

  SetDynamicEventResponseMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetDynamicEventResponseMsg& from);
  void MergeFrom(const SetDynamicEventResponseMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef SetDynamicEventResponseMsg_ResponseType ResponseType;
  static const ResponseType SUCCESS = SetDynamicEventResponseMsg_ResponseType_SUCCESS;
  static const ResponseType ILLEGAL_TIME = SetDynamicEventResponseMsg_ResponseType_ILLEGAL_TIME;
  static const ResponseType NO_ACTIVE_PROJECT = SetDynamicEventResponseMsg_ResponseType_NO_ACTIVE_PROJECT;
  static const ResponseType NOT_IN_DATA_COLLECTION_MODE = SetDynamicEventResponseMsg_ResponseType_NOT_IN_DATA_COLLECTION_MODE;
  static const ResponseType OTHER_ERROR = SetDynamicEventResponseMsg_ResponseType_OTHER_ERROR;
  static inline bool ResponseType_IsValid(int value) {
    return SetDynamicEventResponseMsg_ResponseType_IsValid(value);
  }
  static const ResponseType ResponseType_MIN =
    SetDynamicEventResponseMsg_ResponseType_ResponseType_MIN;
  static const ResponseType ResponseType_MAX =
    SetDynamicEventResponseMsg_ResponseType_ResponseType_MAX;
  static const int ResponseType_ARRAYSIZE =
    SetDynamicEventResponseMsg_ResponseType_ResponseType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ResponseType_descriptor() {
    return SetDynamicEventResponseMsg_ResponseType_descriptor();
  }
  static inline const ::std::string& ResponseType_Name(ResponseType value) {
    return SetDynamicEventResponseMsg_ResponseType_Name(value);
  }
  static inline bool ResponseType_Parse(const ::std::string& name,
      ResponseType* value) {
    return SetDynamicEventResponseMsg_ResponseType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .protobuf.SetDynamicEventResponseMsg.ResponseType response_type = 1;
  inline bool has_response_type() const;
  inline void clear_response_type();
  static const int kResponseTypeFieldNumber = 1;
  inline ::protobuf::SetDynamicEventResponseMsg_ResponseType response_type() const;
  inline void set_response_type(::protobuf::SetDynamicEventResponseMsg_ResponseType value);

  // @@protoc_insertion_point(class_scope:protobuf.SetDynamicEventResponseMsg)
 private:
  inline void set_has_response_type();
  inline void clear_has_response_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int response_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static SetDynamicEventResponseMsg* default_instance_;
};
// -------------------------------------------------------------------

class DynamicEventMsg : public ::google::protobuf::Message {
 public:
  DynamicEventMsg();
  virtual ~DynamicEventMsg();

  DynamicEventMsg(const DynamicEventMsg& from);

  inline DynamicEventMsg& operator=(const DynamicEventMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DynamicEventMsg& default_instance();

  void Swap(DynamicEventMsg* other);

  // implements Message ----------------------------------------------

  DynamicEventMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DynamicEventMsg& from);
  void MergeFrom(const DynamicEventMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .protobuf.DynamicEventStruct dynamic_event = 1;
  inline bool has_dynamic_event() const;
  inline void clear_dynamic_event();
  static const int kDynamicEventFieldNumber = 1;
  inline const ::protobuf::DynamicEventStruct& dynamic_event() const;
  inline ::protobuf::DynamicEventStruct* mutable_dynamic_event();
  inline ::protobuf::DynamicEventStruct* release_dynamic_event();
  inline void set_allocated_dynamic_event(::protobuf::DynamicEventStruct* dynamic_event);

  // @@protoc_insertion_point(class_scope:protobuf.DynamicEventMsg)
 private:
  inline void set_has_dynamic_event();
  inline void clear_has_dynamic_event();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::protobuf::DynamicEventStruct* dynamic_event_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static DynamicEventMsg* default_instance_;
};
// -------------------------------------------------------------------

class AttributeConfiguration : public ::google::protobuf::Message {
 public:
  AttributeConfiguration();
  virtual ~AttributeConfiguration();

  AttributeConfiguration(const AttributeConfiguration& from);

  inline AttributeConfiguration& operator=(const AttributeConfiguration& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AttributeConfiguration& default_instance();

  void Swap(AttributeConfiguration* other);

  // implements Message ----------------------------------------------

  AttributeConfiguration* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AttributeConfiguration& from);
  void MergeFrom(const AttributeConfiguration& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:protobuf.AttributeConfiguration)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::uint32 index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static AttributeConfiguration* default_instance_;
};
// -------------------------------------------------------------------

class SensorConfiguration : public ::google::protobuf::Message {
 public:
  SensorConfiguration();
  virtual ~SensorConfiguration();

  SensorConfiguration(const SensorConfiguration& from);

  inline SensorConfiguration& operator=(const SensorConfiguration& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SensorConfiguration& default_instance();

  void Swap(SensorConfiguration* other);

  // implements Message ----------------------------------------------

  SensorConfiguration* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SensorConfiguration& from);
  void MergeFrom(const SensorConfiguration& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 sensor_id = 1;
  inline bool has_sensor_id() const;
  inline void clear_sensor_id();
  static const int kSensorIdFieldNumber = 1;
  inline ::google::protobuf::int32 sensor_id() const;
  inline void set_sensor_id(::google::protobuf::int32 value);

  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 max_attributes = 3;
  inline bool has_max_attributes() const;
  inline void clear_max_attributes();
  static const int kMaxAttributesFieldNumber = 3;
  inline ::google::protobuf::uint32 max_attributes() const;
  inline void set_max_attributes(::google::protobuf::uint32 value);

  // repeated .protobuf.AttributeConfiguration attribute_configurations = 4;
  inline int attribute_configurations_size() const;
  inline void clear_attribute_configurations();
  static const int kAttributeConfigurationsFieldNumber = 4;
  inline const ::protobuf::AttributeConfiguration& attribute_configurations(int index) const;
  inline ::protobuf::AttributeConfiguration* mutable_attribute_configurations(int index);
  inline ::protobuf::AttributeConfiguration* add_attribute_configurations();
  inline const ::google::protobuf::RepeatedPtrField< ::protobuf::AttributeConfiguration >&
      attribute_configurations() const;
  inline ::google::protobuf::RepeatedPtrField< ::protobuf::AttributeConfiguration >*
      mutable_attribute_configurations();

  // @@protoc_insertion_point(class_scope:protobuf.SensorConfiguration)
 private:
  inline void set_has_sensor_id();
  inline void clear_has_sensor_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_max_attributes();
  inline void clear_has_max_attributes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::int32 sensor_id_;
  ::google::protobuf::uint32 max_attributes_;
  ::google::protobuf::RepeatedPtrField< ::protobuf::AttributeConfiguration > attribute_configurations_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static SensorConfiguration* default_instance_;
};
// -------------------------------------------------------------------

class ConfigurationMsg : public ::google::protobuf::Message {
 public:
  ConfigurationMsg();
  virtual ~ConfigurationMsg();

  ConfigurationMsg(const ConfigurationMsg& from);

  inline ConfigurationMsg& operator=(const ConfigurationMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigurationMsg& default_instance();

  void Swap(ConfigurationMsg* other);

  // implements Message ----------------------------------------------

  ConfigurationMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConfigurationMsg& from);
  void MergeFrom(const ConfigurationMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protobuf.SensorConfiguration sensor_configurations = 1;
  inline int sensor_configurations_size() const;
  inline void clear_sensor_configurations();
  static const int kSensorConfigurationsFieldNumber = 1;
  inline const ::protobuf::SensorConfiguration& sensor_configurations(int index) const;
  inline ::protobuf::SensorConfiguration* mutable_sensor_configurations(int index);
  inline ::protobuf::SensorConfiguration* add_sensor_configurations();
  inline const ::google::protobuf::RepeatedPtrField< ::protobuf::SensorConfiguration >&
      sensor_configurations() const;
  inline ::google::protobuf::RepeatedPtrField< ::protobuf::SensorConfiguration >*
      mutable_sensor_configurations();

  // @@protoc_insertion_point(class_scope:protobuf.ConfigurationMsg)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protobuf::SensorConfiguration > sensor_configurations_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static ConfigurationMsg* default_instance_;
};
// -------------------------------------------------------------------

class SettingsRequestMsg : public ::google::protobuf::Message {
 public:
  SettingsRequestMsg();
  virtual ~SettingsRequestMsg();

  SettingsRequestMsg(const SettingsRequestMsg& from);

  inline SettingsRequestMsg& operator=(const SettingsRequestMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SettingsRequestMsg& default_instance();

  void Swap(SettingsRequestMsg* other);

  // implements Message ----------------------------------------------

  SettingsRequestMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SettingsRequestMsg& from);
  void MergeFrom(const SettingsRequestMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 min_time = 1;
  inline bool has_min_time() const;
  inline void clear_min_time();
  static const int kMinTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 min_time() const;
  inline void set_min_time(::google::protobuf::uint32 value);

  // repeated int32 sensor_ids = 2;
  inline int sensor_ids_size() const;
  inline void clear_sensor_ids();
  static const int kSensorIdsFieldNumber = 2;
  inline ::google::protobuf::int32 sensor_ids(int index) const;
  inline void set_sensor_ids(int index, ::google::protobuf::int32 value);
  inline void add_sensor_ids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      sensor_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_sensor_ids();

  // @@protoc_insertion_point(class_scope:protobuf.SettingsRequestMsg)
 private:
  inline void set_has_min_time();
  inline void clear_has_min_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > sensor_ids_;
  ::google::protobuf::uint32 min_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static SettingsRequestMsg* default_instance_;
};
// -------------------------------------------------------------------

class SettingsResponseMsg : public ::google::protobuf::Message {
 public:
  SettingsResponseMsg();
  virtual ~SettingsResponseMsg();

  SettingsResponseMsg(const SettingsResponseMsg& from);

  inline SettingsResponseMsg& operator=(const SettingsResponseMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SettingsResponseMsg& default_instance();

  void Swap(SettingsResponseMsg* other);

  // implements Message ----------------------------------------------

  SettingsResponseMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SettingsResponseMsg& from);
  void MergeFrom(const SettingsResponseMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef SettingsResponseMsg_ResponseType ResponseType;
  static const ResponseType SUCCESS = SettingsResponseMsg_ResponseType_SUCCESS;
  static const ResponseType ILLEGAL_SENSOR_ID = SettingsResponseMsg_ResponseType_ILLEGAL_SENSOR_ID;
  static const ResponseType OTHER_ERROR = SettingsResponseMsg_ResponseType_OTHER_ERROR;
  static inline bool ResponseType_IsValid(int value) {
    return SettingsResponseMsg_ResponseType_IsValid(value);
  }
  static const ResponseType ResponseType_MIN =
    SettingsResponseMsg_ResponseType_ResponseType_MIN;
  static const ResponseType ResponseType_MAX =
    SettingsResponseMsg_ResponseType_ResponseType_MAX;
  static const int ResponseType_ARRAYSIZE =
    SettingsResponseMsg_ResponseType_ResponseType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ResponseType_descriptor() {
    return SettingsResponseMsg_ResponseType_descriptor();
  }
  static inline const ::std::string& ResponseType_Name(ResponseType value) {
    return SettingsResponseMsg_ResponseType_Name(value);
  }
  static inline bool ResponseType_Parse(const ::std::string& name,
      ResponseType* value) {
    return SettingsResponseMsg_ResponseType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .protobuf.SettingsResponseMsg.ResponseType response_type = 1;
  inline bool has_response_type() const;
  inline void clear_response_type();
  static const int kResponseTypeFieldNumber = 1;
  inline ::protobuf::SettingsResponseMsg_ResponseType response_type() const;
  inline void set_response_type(::protobuf::SettingsResponseMsg_ResponseType value);

  // @@protoc_insertion_point(class_scope:protobuf.SettingsResponseMsg)
 private:
  inline void set_has_response_type();
  inline void clear_has_response_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int response_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static SettingsResponseMsg* default_instance_;
};
// -------------------------------------------------------------------

class SensorStatusMsg_Attribute : public ::google::protobuf::Message {
 public:
  SensorStatusMsg_Attribute();
  virtual ~SensorStatusMsg_Attribute();

  SensorStatusMsg_Attribute(const SensorStatusMsg_Attribute& from);

  inline SensorStatusMsg_Attribute& operator=(const SensorStatusMsg_Attribute& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SensorStatusMsg_Attribute& default_instance();

  void Swap(SensorStatusMsg_Attribute* other);

  // implements Message ----------------------------------------------

  SensorStatusMsg_Attribute* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SensorStatusMsg_Attribute& from);
  void MergeFrom(const SensorStatusMsg_Attribute& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // required .protobuf.SensorStatusMsg.AttributeStatusType status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::protobuf::SensorStatusMsg_AttributeStatusType status() const;
  inline void set_status(::protobuf::SensorStatusMsg_AttributeStatusType value);

  // @@protoc_insertion_point(class_scope:protobuf.SensorStatusMsg.Attribute)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 index_;
  int status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static SensorStatusMsg_Attribute* default_instance_;
};
// -------------------------------------------------------------------

class SensorStatusMsg_Sensor : public ::google::protobuf::Message {
 public:
  SensorStatusMsg_Sensor();
  virtual ~SensorStatusMsg_Sensor();

  SensorStatusMsg_Sensor(const SensorStatusMsg_Sensor& from);

  inline SensorStatusMsg_Sensor& operator=(const SensorStatusMsg_Sensor& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SensorStatusMsg_Sensor& default_instance();

  void Swap(SensorStatusMsg_Sensor* other);

  // implements Message ----------------------------------------------

  SensorStatusMsg_Sensor* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SensorStatusMsg_Sensor& from);
  void MergeFrom(const SensorStatusMsg_Sensor& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 sensor_id = 1;
  inline bool has_sensor_id() const;
  inline void clear_sensor_id();
  static const int kSensorIdFieldNumber = 1;
  inline ::google::protobuf::int32 sensor_id() const;
  inline void set_sensor_id(::google::protobuf::int32 value);

  // required .protobuf.SensorStatusMsg.SensorStatusType status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::protobuf::SensorStatusMsg_SensorStatusType status() const;
  inline void set_status(::protobuf::SensorStatusMsg_SensorStatusType value);

  // repeated .protobuf.SensorStatusMsg.Attribute attributes = 3;
  inline int attributes_size() const;
  inline void clear_attributes();
  static const int kAttributesFieldNumber = 3;
  inline const ::protobuf::SensorStatusMsg_Attribute& attributes(int index) const;
  inline ::protobuf::SensorStatusMsg_Attribute* mutable_attributes(int index);
  inline ::protobuf::SensorStatusMsg_Attribute* add_attributes();
  inline const ::google::protobuf::RepeatedPtrField< ::protobuf::SensorStatusMsg_Attribute >&
      attributes() const;
  inline ::google::protobuf::RepeatedPtrField< ::protobuf::SensorStatusMsg_Attribute >*
      mutable_attributes();

  // @@protoc_insertion_point(class_scope:protobuf.SensorStatusMsg.Sensor)
 private:
  inline void set_has_sensor_id();
  inline void clear_has_sensor_id();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 sensor_id_;
  int status_;
  ::google::protobuf::RepeatedPtrField< ::protobuf::SensorStatusMsg_Attribute > attributes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static SensorStatusMsg_Sensor* default_instance_;
};
// -------------------------------------------------------------------

class SensorStatusMsg : public ::google::protobuf::Message {
 public:
  SensorStatusMsg();
  virtual ~SensorStatusMsg();

  SensorStatusMsg(const SensorStatusMsg& from);

  inline SensorStatusMsg& operator=(const SensorStatusMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SensorStatusMsg& default_instance();

  void Swap(SensorStatusMsg* other);

  // implements Message ----------------------------------------------

  SensorStatusMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SensorStatusMsg& from);
  void MergeFrom(const SensorStatusMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef SensorStatusMsg_Attribute Attribute;
  typedef SensorStatusMsg_Sensor Sensor;

  typedef SensorStatusMsg_SensorStatusType SensorStatusType;
  static const SensorStatusType WORKING = SensorStatusMsg_SensorStatusType_WORKING;
  static const SensorStatusType NOT_WORKING = SensorStatusMsg_SensorStatusType_NOT_WORKING;
  static inline bool SensorStatusType_IsValid(int value) {
    return SensorStatusMsg_SensorStatusType_IsValid(value);
  }
  static const SensorStatusType SensorStatusType_MIN =
    SensorStatusMsg_SensorStatusType_SensorStatusType_MIN;
  static const SensorStatusType SensorStatusType_MAX =
    SensorStatusMsg_SensorStatusType_SensorStatusType_MAX;
  static const int SensorStatusType_ARRAYSIZE =
    SensorStatusMsg_SensorStatusType_SensorStatusType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SensorStatusType_descriptor() {
    return SensorStatusMsg_SensorStatusType_descriptor();
  }
  static inline const ::std::string& SensorStatusType_Name(SensorStatusType value) {
    return SensorStatusMsg_SensorStatusType_Name(value);
  }
  static inline bool SensorStatusType_Parse(const ::std::string& name,
      SensorStatusType* value) {
    return SensorStatusMsg_SensorStatusType_Parse(name, value);
  }

  typedef SensorStatusMsg_AttributeStatusType AttributeStatusType;
  static const AttributeStatusType INSIDE_LIMITS = SensorStatusMsg_AttributeStatusType_INSIDE_LIMITS;
  static const AttributeStatusType OUTSIDE_LIMITS = SensorStatusMsg_AttributeStatusType_OUTSIDE_LIMITS;
  static inline bool AttributeStatusType_IsValid(int value) {
    return SensorStatusMsg_AttributeStatusType_IsValid(value);
  }
  static const AttributeStatusType AttributeStatusType_MIN =
    SensorStatusMsg_AttributeStatusType_AttributeStatusType_MIN;
  static const AttributeStatusType AttributeStatusType_MAX =
    SensorStatusMsg_AttributeStatusType_AttributeStatusType_MAX;
  static const int AttributeStatusType_ARRAYSIZE =
    SensorStatusMsg_AttributeStatusType_AttributeStatusType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  AttributeStatusType_descriptor() {
    return SensorStatusMsg_AttributeStatusType_descriptor();
  }
  static inline const ::std::string& AttributeStatusType_Name(AttributeStatusType value) {
    return SensorStatusMsg_AttributeStatusType_Name(value);
  }
  static inline bool AttributeStatusType_Parse(const ::std::string& name,
      AttributeStatusType* value) {
    return SensorStatusMsg_AttributeStatusType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .protobuf.SensorStatusMsg.Sensor sensors = 1;
  inline int sensors_size() const;
  inline void clear_sensors();
  static const int kSensorsFieldNumber = 1;
  inline const ::protobuf::SensorStatusMsg_Sensor& sensors(int index) const;
  inline ::protobuf::SensorStatusMsg_Sensor* mutable_sensors(int index);
  inline ::protobuf::SensorStatusMsg_Sensor* add_sensors();
  inline const ::google::protobuf::RepeatedPtrField< ::protobuf::SensorStatusMsg_Sensor >&
      sensors() const;
  inline ::google::protobuf::RepeatedPtrField< ::protobuf::SensorStatusMsg_Sensor >*
      mutable_sensors();

  // @@protoc_insertion_point(class_scope:protobuf.SensorStatusMsg)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protobuf::SensorStatusMsg_Sensor > sensors_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static SensorStatusMsg* default_instance_;
};
// -------------------------------------------------------------------

class StatusMsg : public ::google::protobuf::Message {
 public:
  StatusMsg();
  virtual ~StatusMsg();

  StatusMsg(const StatusMsg& from);

  inline StatusMsg& operator=(const StatusMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StatusMsg& default_instance();

  void Swap(StatusMsg* other);

  // implements Message ----------------------------------------------

  StatusMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StatusMsg& from);
  void MergeFrom(const StatusMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef StatusMsg_StatusType StatusType;
  static const StatusType IDLE = StatusMsg_StatusType_IDLE;
  static const StatusType DATA_COLLECTION = StatusMsg_StatusType_DATA_COLLECTION;
  static const StatusType EXPERIMENT_PLAYBACK = StatusMsg_StatusType_EXPERIMENT_PLAYBACK;
  static inline bool StatusType_IsValid(int value) {
    return StatusMsg_StatusType_IsValid(value);
  }
  static const StatusType StatusType_MIN =
    StatusMsg_StatusType_StatusType_MIN;
  static const StatusType StatusType_MAX =
    StatusMsg_StatusType_StatusType_MAX;
  static const int StatusType_ARRAYSIZE =
    StatusMsg_StatusType_StatusType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  StatusType_descriptor() {
    return StatusMsg_StatusType_descriptor();
  }
  static inline const ::std::string& StatusType_Name(StatusType value) {
    return StatusMsg_StatusType_Name(value);
  }
  static inline bool StatusType_Parse(const ::std::string& name,
      StatusType* value) {
    return StatusMsg_StatusType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .protobuf.StatusMsg.StatusType status_type = 1;
  inline bool has_status_type() const;
  inline void clear_status_type();
  static const int kStatusTypeFieldNumber = 1;
  inline ::protobuf::StatusMsg_StatusType status_type() const;
  inline void set_status_type(::protobuf::StatusMsg_StatusType value);

  // optional string project_name = 2;
  inline bool has_project_name() const;
  inline void clear_project_name();
  static const int kProjectNameFieldNumber = 2;
  inline const ::std::string& project_name() const;
  inline void set_project_name(const ::std::string& value);
  inline void set_project_name(const char* value);
  inline void set_project_name(const char* value, size_t size);
  inline ::std::string* mutable_project_name();
  inline ::std::string* release_project_name();
  inline void set_allocated_project_name(::std::string* project_name);

  // @@protoc_insertion_point(class_scope:protobuf.StatusMsg)
 private:
  inline void set_has_status_type();
  inline void clear_has_status_type();
  inline void set_has_project_name();
  inline void clear_has_project_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* project_name_;
  int status_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static StatusMsg* default_instance_;
};
// -------------------------------------------------------------------

class CreateNewProjectRequestMsg : public ::google::protobuf::Message {
 public:
  CreateNewProjectRequestMsg();
  virtual ~CreateNewProjectRequestMsg();

  CreateNewProjectRequestMsg(const CreateNewProjectRequestMsg& from);

  inline CreateNewProjectRequestMsg& operator=(const CreateNewProjectRequestMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateNewProjectRequestMsg& default_instance();

  void Swap(CreateNewProjectRequestMsg* other);

  // implements Message ----------------------------------------------

  CreateNewProjectRequestMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateNewProjectRequestMsg& from);
  void MergeFrom(const CreateNewProjectRequestMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:protobuf.CreateNewProjectRequestMsg)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static CreateNewProjectRequestMsg* default_instance_;
};
// -------------------------------------------------------------------

class CreateNewProjectResponseMsg : public ::google::protobuf::Message {
 public:
  CreateNewProjectResponseMsg();
  virtual ~CreateNewProjectResponseMsg();

  CreateNewProjectResponseMsg(const CreateNewProjectResponseMsg& from);

  inline CreateNewProjectResponseMsg& operator=(const CreateNewProjectResponseMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateNewProjectResponseMsg& default_instance();

  void Swap(CreateNewProjectResponseMsg* other);

  // implements Message ----------------------------------------------

  CreateNewProjectResponseMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateNewProjectResponseMsg& from);
  void MergeFrom(const CreateNewProjectResponseMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CreateNewProjectResponseMsg_ResponseType ResponseType;
  static const ResponseType SUCCESS = CreateNewProjectResponseMsg_ResponseType_SUCCESS;
  static const ResponseType NAME_TAKEN = CreateNewProjectResponseMsg_ResponseType_NAME_TAKEN;
  static const ResponseType ILLEGAL_NAME = CreateNewProjectResponseMsg_ResponseType_ILLEGAL_NAME;
  static const ResponseType OTHER_ERROR = CreateNewProjectResponseMsg_ResponseType_OTHER_ERROR;
  static inline bool ResponseType_IsValid(int value) {
    return CreateNewProjectResponseMsg_ResponseType_IsValid(value);
  }
  static const ResponseType ResponseType_MIN =
    CreateNewProjectResponseMsg_ResponseType_ResponseType_MIN;
  static const ResponseType ResponseType_MAX =
    CreateNewProjectResponseMsg_ResponseType_ResponseType_MAX;
  static const int ResponseType_ARRAYSIZE =
    CreateNewProjectResponseMsg_ResponseType_ResponseType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ResponseType_descriptor() {
    return CreateNewProjectResponseMsg_ResponseType_descriptor();
  }
  static inline const ::std::string& ResponseType_Name(ResponseType value) {
    return CreateNewProjectResponseMsg_ResponseType_Name(value);
  }
  static inline bool ResponseType_Parse(const ::std::string& name,
      ResponseType* value) {
    return CreateNewProjectResponseMsg_ResponseType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .protobuf.CreateNewProjectResponseMsg.ResponseType response_type = 1;
  inline bool has_response_type() const;
  inline void clear_response_type();
  static const int kResponseTypeFieldNumber = 1;
  inline ::protobuf::CreateNewProjectResponseMsg_ResponseType response_type() const;
  inline void set_response_type(::protobuf::CreateNewProjectResponseMsg_ResponseType value);

  // @@protoc_insertion_point(class_scope:protobuf.CreateNewProjectResponseMsg)
 private:
  inline void set_has_response_type();
  inline void clear_has_response_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int response_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static CreateNewProjectResponseMsg* default_instance_;
};
// -------------------------------------------------------------------

class RenameProjectRequestMsg : public ::google::protobuf::Message {
 public:
  RenameProjectRequestMsg();
  virtual ~RenameProjectRequestMsg();

  RenameProjectRequestMsg(const RenameProjectRequestMsg& from);

  inline RenameProjectRequestMsg& operator=(const RenameProjectRequestMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RenameProjectRequestMsg& default_instance();

  void Swap(RenameProjectRequestMsg* other);

  // implements Message ----------------------------------------------

  RenameProjectRequestMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RenameProjectRequestMsg& from);
  void MergeFrom(const RenameProjectRequestMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string old_name = 1;
  inline bool has_old_name() const;
  inline void clear_old_name();
  static const int kOldNameFieldNumber = 1;
  inline const ::std::string& old_name() const;
  inline void set_old_name(const ::std::string& value);
  inline void set_old_name(const char* value);
  inline void set_old_name(const char* value, size_t size);
  inline ::std::string* mutable_old_name();
  inline ::std::string* release_old_name();
  inline void set_allocated_old_name(::std::string* old_name);

  // required string new_name = 2;
  inline bool has_new_name() const;
  inline void clear_new_name();
  static const int kNewNameFieldNumber = 2;
  inline const ::std::string& new_name() const;
  inline void set_new_name(const ::std::string& value);
  inline void set_new_name(const char* value);
  inline void set_new_name(const char* value, size_t size);
  inline ::std::string* mutable_new_name();
  inline ::std::string* release_new_name();
  inline void set_allocated_new_name(::std::string* new_name);

  // @@protoc_insertion_point(class_scope:protobuf.RenameProjectRequestMsg)
 private:
  inline void set_has_old_name();
  inline void clear_has_old_name();
  inline void set_has_new_name();
  inline void clear_has_new_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* old_name_;
  ::std::string* new_name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static RenameProjectRequestMsg* default_instance_;
};
// -------------------------------------------------------------------

class RenameProjectResponseMsg : public ::google::protobuf::Message {
 public:
  RenameProjectResponseMsg();
  virtual ~RenameProjectResponseMsg();

  RenameProjectResponseMsg(const RenameProjectResponseMsg& from);

  inline RenameProjectResponseMsg& operator=(const RenameProjectResponseMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RenameProjectResponseMsg& default_instance();

  void Swap(RenameProjectResponseMsg* other);

  // implements Message ----------------------------------------------

  RenameProjectResponseMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RenameProjectResponseMsg& from);
  void MergeFrom(const RenameProjectResponseMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef RenameProjectResponseMsg_ResponseType ResponseType;
  static const ResponseType SUCCESS = RenameProjectResponseMsg_ResponseType_SUCCESS;
  static const ResponseType ILLEGAL_NAME = RenameProjectResponseMsg_ResponseType_ILLEGAL_NAME;
  static const ResponseType NAME_TAKEN = RenameProjectResponseMsg_ResponseType_NAME_TAKEN;
  static const ResponseType PROJECT_NOT_FOUND = RenameProjectResponseMsg_ResponseType_PROJECT_NOT_FOUND;
  static const ResponseType OTHER_ERROR = RenameProjectResponseMsg_ResponseType_OTHER_ERROR;
  static inline bool ResponseType_IsValid(int value) {
    return RenameProjectResponseMsg_ResponseType_IsValid(value);
  }
  static const ResponseType ResponseType_MIN =
    RenameProjectResponseMsg_ResponseType_ResponseType_MIN;
  static const ResponseType ResponseType_MAX =
    RenameProjectResponseMsg_ResponseType_ResponseType_MAX;
  static const int ResponseType_ARRAYSIZE =
    RenameProjectResponseMsg_ResponseType_ResponseType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ResponseType_descriptor() {
    return RenameProjectResponseMsg_ResponseType_descriptor();
  }
  static inline const ::std::string& ResponseType_Name(ResponseType value) {
    return RenameProjectResponseMsg_ResponseType_Name(value);
  }
  static inline bool ResponseType_Parse(const ::std::string& name,
      ResponseType* value) {
    return RenameProjectResponseMsg_ResponseType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .protobuf.RenameProjectResponseMsg.ResponseType response_type = 1;
  inline bool has_response_type() const;
  inline void clear_response_type();
  static const int kResponseTypeFieldNumber = 1;
  inline ::protobuf::RenameProjectResponseMsg_ResponseType response_type() const;
  inline void set_response_type(::protobuf::RenameProjectResponseMsg_ResponseType value);

  // @@protoc_insertion_point(class_scope:protobuf.RenameProjectResponseMsg)
 private:
  inline void set_has_response_type();
  inline void clear_has_response_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int response_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static RenameProjectResponseMsg* default_instance_;
};
// -------------------------------------------------------------------

class RemoveProjectRequestMsg : public ::google::protobuf::Message {
 public:
  RemoveProjectRequestMsg();
  virtual ~RemoveProjectRequestMsg();

  RemoveProjectRequestMsg(const RemoveProjectRequestMsg& from);

  inline RemoveProjectRequestMsg& operator=(const RemoveProjectRequestMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveProjectRequestMsg& default_instance();

  void Swap(RemoveProjectRequestMsg* other);

  // implements Message ----------------------------------------------

  RemoveProjectRequestMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RemoveProjectRequestMsg& from);
  void MergeFrom(const RemoveProjectRequestMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:protobuf.RemoveProjectRequestMsg)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static RemoveProjectRequestMsg* default_instance_;
};
// -------------------------------------------------------------------

class RemoveProjectResponseMsg : public ::google::protobuf::Message {
 public:
  RemoveProjectResponseMsg();
  virtual ~RemoveProjectResponseMsg();

  RemoveProjectResponseMsg(const RemoveProjectResponseMsg& from);

  inline RemoveProjectResponseMsg& operator=(const RemoveProjectResponseMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveProjectResponseMsg& default_instance();

  void Swap(RemoveProjectResponseMsg* other);

  // implements Message ----------------------------------------------

  RemoveProjectResponseMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RemoveProjectResponseMsg& from);
  void MergeFrom(const RemoveProjectResponseMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef RemoveProjectResponseMsg_ResponseType ResponseType;
  static const ResponseType SUCCESS = RemoveProjectResponseMsg_ResponseType_SUCCESS;
  static const ResponseType PROJECT_NOT_FOUND = RemoveProjectResponseMsg_ResponseType_PROJECT_NOT_FOUND;
  static const ResponseType OTHER_ERROR = RemoveProjectResponseMsg_ResponseType_OTHER_ERROR;
  static inline bool ResponseType_IsValid(int value) {
    return RemoveProjectResponseMsg_ResponseType_IsValid(value);
  }
  static const ResponseType ResponseType_MIN =
    RemoveProjectResponseMsg_ResponseType_ResponseType_MIN;
  static const ResponseType ResponseType_MAX =
    RemoveProjectResponseMsg_ResponseType_ResponseType_MAX;
  static const int ResponseType_ARRAYSIZE =
    RemoveProjectResponseMsg_ResponseType_ResponseType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ResponseType_descriptor() {
    return RemoveProjectResponseMsg_ResponseType_descriptor();
  }
  static inline const ::std::string& ResponseType_Name(ResponseType value) {
    return RemoveProjectResponseMsg_ResponseType_Name(value);
  }
  static inline bool ResponseType_Parse(const ::std::string& name,
      ResponseType* value) {
    return RemoveProjectResponseMsg_ResponseType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .protobuf.RemoveProjectResponseMsg.ResponseType response_type = 1;
  inline bool has_response_type() const;
  inline void clear_response_type();
  static const int kResponseTypeFieldNumber = 1;
  inline ::protobuf::RemoveProjectResponseMsg_ResponseType response_type() const;
  inline void set_response_type(::protobuf::RemoveProjectResponseMsg_ResponseType value);

  // @@protoc_insertion_point(class_scope:protobuf.RemoveProjectResponseMsg)
 private:
  inline void set_has_response_type();
  inline void clear_has_response_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int response_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static RemoveProjectResponseMsg* default_instance_;
};
// -------------------------------------------------------------------

class SetActiveProjectRequestMsg : public ::google::protobuf::Message {
 public:
  SetActiveProjectRequestMsg();
  virtual ~SetActiveProjectRequestMsg();

  SetActiveProjectRequestMsg(const SetActiveProjectRequestMsg& from);

  inline SetActiveProjectRequestMsg& operator=(const SetActiveProjectRequestMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetActiveProjectRequestMsg& default_instance();

  void Swap(SetActiveProjectRequestMsg* other);

  // implements Message ----------------------------------------------

  SetActiveProjectRequestMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetActiveProjectRequestMsg& from);
  void MergeFrom(const SetActiveProjectRequestMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:protobuf.SetActiveProjectRequestMsg)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static SetActiveProjectRequestMsg* default_instance_;
};
// -------------------------------------------------------------------

class SetActiveProjectResponseMsg : public ::google::protobuf::Message {
 public:
  SetActiveProjectResponseMsg();
  virtual ~SetActiveProjectResponseMsg();

  SetActiveProjectResponseMsg(const SetActiveProjectResponseMsg& from);

  inline SetActiveProjectResponseMsg& operator=(const SetActiveProjectResponseMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetActiveProjectResponseMsg& default_instance();

  void Swap(SetActiveProjectResponseMsg* other);

  // implements Message ----------------------------------------------

  SetActiveProjectResponseMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetActiveProjectResponseMsg& from);
  void MergeFrom(const SetActiveProjectResponseMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef SetActiveProjectResponseMsg_ResponseType ResponseType;
  static const ResponseType SUCCESS = SetActiveProjectResponseMsg_ResponseType_SUCCESS;
  static const ResponseType PROJECT_NOT_FOUND = SetActiveProjectResponseMsg_ResponseType_PROJECT_NOT_FOUND;
  static const ResponseType NOT_IN_IDLE_MODE = SetActiveProjectResponseMsg_ResponseType_NOT_IN_IDLE_MODE;
  static const ResponseType OTHER_ERROR = SetActiveProjectResponseMsg_ResponseType_OTHER_ERROR;
  static inline bool ResponseType_IsValid(int value) {
    return SetActiveProjectResponseMsg_ResponseType_IsValid(value);
  }
  static const ResponseType ResponseType_MIN =
    SetActiveProjectResponseMsg_ResponseType_ResponseType_MIN;
  static const ResponseType ResponseType_MAX =
    SetActiveProjectResponseMsg_ResponseType_ResponseType_MAX;
  static const int ResponseType_ARRAYSIZE =
    SetActiveProjectResponseMsg_ResponseType_ResponseType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ResponseType_descriptor() {
    return SetActiveProjectResponseMsg_ResponseType_descriptor();
  }
  static inline const ::std::string& ResponseType_Name(ResponseType value) {
    return SetActiveProjectResponseMsg_ResponseType_Name(value);
  }
  static inline bool ResponseType_Parse(const ::std::string& name,
      ResponseType* value) {
    return SetActiveProjectResponseMsg_ResponseType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .protobuf.SetActiveProjectResponseMsg.ResponseType response_type = 1;
  inline bool has_response_type() const;
  inline void clear_response_type();
  static const int kResponseTypeFieldNumber = 1;
  inline ::protobuf::SetActiveProjectResponseMsg_ResponseType response_type() const;
  inline void set_response_type(::protobuf::SetActiveProjectResponseMsg_ResponseType value);

  // @@protoc_insertion_point(class_scope:protobuf.SetActiveProjectResponseMsg)
 private:
  inline void set_has_response_type();
  inline void clear_has_response_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int response_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static SetActiveProjectResponseMsg* default_instance_;
};
// -------------------------------------------------------------------

class ActiveProjectMsg : public ::google::protobuf::Message {
 public:
  ActiveProjectMsg();
  virtual ~ActiveProjectMsg();

  ActiveProjectMsg(const ActiveProjectMsg& from);

  inline ActiveProjectMsg& operator=(const ActiveProjectMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActiveProjectMsg& default_instance();

  void Swap(ActiveProjectMsg* other);

  // implements Message ----------------------------------------------

  ActiveProjectMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActiveProjectMsg& from);
  void MergeFrom(const ActiveProjectMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:protobuf.ActiveProjectMsg)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static ActiveProjectMsg* default_instance_;
};
// -------------------------------------------------------------------

class ActiveExperimentMsg : public ::google::protobuf::Message {
 public:
  ActiveExperimentMsg();
  virtual ~ActiveExperimentMsg();

  ActiveExperimentMsg(const ActiveExperimentMsg& from);

  inline ActiveExperimentMsg& operator=(const ActiveExperimentMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActiveExperimentMsg& default_instance();

  void Swap(ActiveExperimentMsg* other);

  // implements Message ----------------------------------------------

  ActiveExperimentMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActiveExperimentMsg& from);
  void MergeFrom(const ActiveExperimentMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:protobuf.ActiveExperimentMsg)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static ActiveExperimentMsg* default_instance_;
};
// -------------------------------------------------------------------

class ProjectListMsg : public ::google::protobuf::Message {
 public:
  ProjectListMsg();
  virtual ~ProjectListMsg();

  ProjectListMsg(const ProjectListMsg& from);

  inline ProjectListMsg& operator=(const ProjectListMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProjectListMsg& default_instance();

  void Swap(ProjectListMsg* other);

  // implements Message ----------------------------------------------

  ProjectListMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProjectListMsg& from);
  void MergeFrom(const ProjectListMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string projects = 1;
  inline int projects_size() const;
  inline void clear_projects();
  static const int kProjectsFieldNumber = 1;
  inline const ::std::string& projects(int index) const;
  inline ::std::string* mutable_projects(int index);
  inline void set_projects(int index, const ::std::string& value);
  inline void set_projects(int index, const char* value);
  inline void set_projects(int index, const char* value, size_t size);
  inline ::std::string* add_projects();
  inline void add_projects(const ::std::string& value);
  inline void add_projects(const char* value);
  inline void add_projects(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& projects() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_projects();

  // @@protoc_insertion_point(class_scope:protobuf.ProjectListMsg)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::std::string> projects_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static ProjectListMsg* default_instance_;
};
// -------------------------------------------------------------------

class ProjectMetadataStruct : public ::google::protobuf::Message {
 public:
  ProjectMetadataStruct();
  virtual ~ProjectMetadataStruct();

  ProjectMetadataStruct(const ProjectMetadataStruct& from);

  inline ProjectMetadataStruct& operator=(const ProjectMetadataStruct& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProjectMetadataStruct& default_instance();

  void Swap(ProjectMetadataStruct* other);

  // implements Message ----------------------------------------------

  ProjectMetadataStruct* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProjectMetadataStruct& from);
  void MergeFrom(const ProjectMetadataStruct& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string test_leader = 1;
  inline bool has_test_leader() const;
  inline void clear_test_leader();
  static const int kTestLeaderFieldNumber = 1;
  inline const ::std::string& test_leader() const;
  inline void set_test_leader(const ::std::string& value);
  inline void set_test_leader(const char* value);
  inline void set_test_leader(const char* value, size_t size);
  inline ::std::string* mutable_test_leader();
  inline ::std::string* release_test_leader();
  inline void set_allocated_test_leader(::std::string* test_leader);

  // optional int64 date = 2;
  inline bool has_date() const;
  inline void clear_date();
  static const int kDateFieldNumber = 2;
  inline ::google::protobuf::int64 date() const;
  inline void set_date(::google::protobuf::int64 value);

  // optional string email = 3;
  inline bool has_email() const;
  inline void clear_email();
  static const int kEmailFieldNumber = 3;
  inline const ::std::string& email() const;
  inline void set_email(const ::std::string& value);
  inline void set_email(const char* value);
  inline void set_email(const char* value, size_t size);
  inline ::std::string* mutable_email();
  inline ::std::string* release_email();
  inline void set_allocated_email(::std::string* email);

  // repeated string member_names = 4;
  inline int member_names_size() const;
  inline void clear_member_names();
  static const int kMemberNamesFieldNumber = 4;
  inline const ::std::string& member_names(int index) const;
  inline ::std::string* mutable_member_names(int index);
  inline void set_member_names(int index, const ::std::string& value);
  inline void set_member_names(int index, const char* value);
  inline void set_member_names(int index, const char* value, size_t size);
  inline ::std::string* add_member_names();
  inline void add_member_names(const ::std::string& value);
  inline void add_member_names(const char* value);
  inline void add_member_names(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& member_names() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_member_names();

  // repeated string tags = 5;
  inline int tags_size() const;
  inline void clear_tags();
  static const int kTagsFieldNumber = 5;
  inline const ::std::string& tags(int index) const;
  inline ::std::string* mutable_tags(int index);
  inline void set_tags(int index, const ::std::string& value);
  inline void set_tags(int index, const char* value);
  inline void set_tags(int index, const char* value, size_t size);
  inline ::std::string* add_tags();
  inline void add_tags(const ::std::string& value);
  inline void add_tags(const char* value);
  inline void add_tags(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& tags() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_tags();

  // optional string description = 6;
  inline bool has_description() const;
  inline void clear_description();
  static const int kDescriptionFieldNumber = 6;
  inline const ::std::string& description() const;
  inline void set_description(const ::std::string& value);
  inline void set_description(const char* value);
  inline void set_description(const char* value, size_t size);
  inline ::std::string* mutable_description();
  inline ::std::string* release_description();
  inline void set_allocated_description(::std::string* description);

  // @@protoc_insertion_point(class_scope:protobuf.ProjectMetadataStruct)
 private:
  inline void set_has_test_leader();
  inline void clear_has_test_leader();
  inline void set_has_date();
  inline void clear_has_date();
  inline void set_has_email();
  inline void clear_has_email();
  inline void set_has_description();
  inline void clear_has_description();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* test_leader_;
  ::google::protobuf::int64 date_;
  ::std::string* email_;
  ::google::protobuf::RepeatedPtrField< ::std::string> member_names_;
  ::google::protobuf::RepeatedPtrField< ::std::string> tags_;
  ::std::string* description_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static ProjectMetadataStruct* default_instance_;
};
// -------------------------------------------------------------------

class SetProjectMetadataRequestMsg : public ::google::protobuf::Message {
 public:
  SetProjectMetadataRequestMsg();
  virtual ~SetProjectMetadataRequestMsg();

  SetProjectMetadataRequestMsg(const SetProjectMetadataRequestMsg& from);

  inline SetProjectMetadataRequestMsg& operator=(const SetProjectMetadataRequestMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetProjectMetadataRequestMsg& default_instance();

  void Swap(SetProjectMetadataRequestMsg* other);

  // implements Message ----------------------------------------------

  SetProjectMetadataRequestMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetProjectMetadataRequestMsg& from);
  void MergeFrom(const SetProjectMetadataRequestMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .protobuf.ProjectMetadataStruct metadata = 1;
  inline bool has_metadata() const;
  inline void clear_metadata();
  static const int kMetadataFieldNumber = 1;
  inline const ::protobuf::ProjectMetadataStruct& metadata() const;
  inline ::protobuf::ProjectMetadataStruct* mutable_metadata();
  inline ::protobuf::ProjectMetadataStruct* release_metadata();
  inline void set_allocated_metadata(::protobuf::ProjectMetadataStruct* metadata);

  // @@protoc_insertion_point(class_scope:protobuf.SetProjectMetadataRequestMsg)
 private:
  inline void set_has_metadata();
  inline void clear_has_metadata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::protobuf::ProjectMetadataStruct* metadata_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static SetProjectMetadataRequestMsg* default_instance_;
};
// -------------------------------------------------------------------

class SetProjectMetadataResponseMsg : public ::google::protobuf::Message {
 public:
  SetProjectMetadataResponseMsg();
  virtual ~SetProjectMetadataResponseMsg();

  SetProjectMetadataResponseMsg(const SetProjectMetadataResponseMsg& from);

  inline SetProjectMetadataResponseMsg& operator=(const SetProjectMetadataResponseMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetProjectMetadataResponseMsg& default_instance();

  void Swap(SetProjectMetadataResponseMsg* other);

  // implements Message ----------------------------------------------

  SetProjectMetadataResponseMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetProjectMetadataResponseMsg& from);
  void MergeFrom(const SetProjectMetadataResponseMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef SetProjectMetadataResponseMsg_ResponseType ResponseType;
  static const ResponseType SUCCESS = SetProjectMetadataResponseMsg_ResponseType_SUCCESS;
  static const ResponseType NO_ACTIVE_PROJECT = SetProjectMetadataResponseMsg_ResponseType_NO_ACTIVE_PROJECT;
  static const ResponseType OTHER_ERROR = SetProjectMetadataResponseMsg_ResponseType_OTHER_ERROR;
  static inline bool ResponseType_IsValid(int value) {
    return SetProjectMetadataResponseMsg_ResponseType_IsValid(value);
  }
  static const ResponseType ResponseType_MIN =
    SetProjectMetadataResponseMsg_ResponseType_ResponseType_MIN;
  static const ResponseType ResponseType_MAX =
    SetProjectMetadataResponseMsg_ResponseType_ResponseType_MAX;
  static const int ResponseType_ARRAYSIZE =
    SetProjectMetadataResponseMsg_ResponseType_ResponseType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ResponseType_descriptor() {
    return SetProjectMetadataResponseMsg_ResponseType_descriptor();
  }
  static inline const ::std::string& ResponseType_Name(ResponseType value) {
    return SetProjectMetadataResponseMsg_ResponseType_Name(value);
  }
  static inline bool ResponseType_Parse(const ::std::string& name,
      ResponseType* value) {
    return SetProjectMetadataResponseMsg_ResponseType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .protobuf.SetProjectMetadataResponseMsg.ResponseType response_type = 1;
  inline bool has_response_type() const;
  inline void clear_response_type();
  static const int kResponseTypeFieldNumber = 1;
  inline ::protobuf::SetProjectMetadataResponseMsg_ResponseType response_type() const;
  inline void set_response_type(::protobuf::SetProjectMetadataResponseMsg_ResponseType value);

  // @@protoc_insertion_point(class_scope:protobuf.SetProjectMetadataResponseMsg)
 private:
  inline void set_has_response_type();
  inline void clear_has_response_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int response_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static SetProjectMetadataResponseMsg* default_instance_;
};
// -------------------------------------------------------------------

class ProjectMetadataMsg : public ::google::protobuf::Message {
 public:
  ProjectMetadataMsg();
  virtual ~ProjectMetadataMsg();

  ProjectMetadataMsg(const ProjectMetadataMsg& from);

  inline ProjectMetadataMsg& operator=(const ProjectMetadataMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProjectMetadataMsg& default_instance();

  void Swap(ProjectMetadataMsg* other);

  // implements Message ----------------------------------------------

  ProjectMetadataMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProjectMetadataMsg& from);
  void MergeFrom(const ProjectMetadataMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .protobuf.ProjectMetadataStruct metadata = 1;
  inline bool has_metadata() const;
  inline void clear_metadata();
  static const int kMetadataFieldNumber = 1;
  inline const ::protobuf::ProjectMetadataStruct& metadata() const;
  inline ::protobuf::ProjectMetadataStruct* mutable_metadata();
  inline ::protobuf::ProjectMetadataStruct* release_metadata();
  inline void set_allocated_metadata(::protobuf::ProjectMetadataStruct* metadata);

  // @@protoc_insertion_point(class_scope:protobuf.ProjectMetadataMsg)
 private:
  inline void set_has_metadata();
  inline void clear_has_metadata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::protobuf::ProjectMetadataStruct* metadata_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static ProjectMetadataMsg* default_instance_;
};
// -------------------------------------------------------------------

class ExperimentDataCollectionStartRequestMsg : public ::google::protobuf::Message {
 public:
  ExperimentDataCollectionStartRequestMsg();
  virtual ~ExperimentDataCollectionStartRequestMsg();

  ExperimentDataCollectionStartRequestMsg(const ExperimentDataCollectionStartRequestMsg& from);

  inline ExperimentDataCollectionStartRequestMsg& operator=(const ExperimentDataCollectionStartRequestMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExperimentDataCollectionStartRequestMsg& default_instance();

  void Swap(ExperimentDataCollectionStartRequestMsg* other);

  // implements Message ----------------------------------------------

  ExperimentDataCollectionStartRequestMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExperimentDataCollectionStartRequestMsg& from);
  void MergeFrom(const ExperimentDataCollectionStartRequestMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:protobuf.ExperimentDataCollectionStartRequestMsg)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static ExperimentDataCollectionStartRequestMsg* default_instance_;
};
// -------------------------------------------------------------------

class ExperimentDataCollectionStartResponseMsg : public ::google::protobuf::Message {
 public:
  ExperimentDataCollectionStartResponseMsg();
  virtual ~ExperimentDataCollectionStartResponseMsg();

  ExperimentDataCollectionStartResponseMsg(const ExperimentDataCollectionStartResponseMsg& from);

  inline ExperimentDataCollectionStartResponseMsg& operator=(const ExperimentDataCollectionStartResponseMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExperimentDataCollectionStartResponseMsg& default_instance();

  void Swap(ExperimentDataCollectionStartResponseMsg* other);

  // implements Message ----------------------------------------------

  ExperimentDataCollectionStartResponseMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExperimentDataCollectionStartResponseMsg& from);
  void MergeFrom(const ExperimentDataCollectionStartResponseMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ExperimentDataCollectionStartResponseMsg_ResponseType ResponseType;
  static const ResponseType SUCCESS = ExperimentDataCollectionStartResponseMsg_ResponseType_SUCCESS;
  static const ResponseType NO_ACTIVE_PROJECT = ExperimentDataCollectionStartResponseMsg_ResponseType_NO_ACTIVE_PROJECT;
  static const ResponseType NOT_IN_IDLE_MODE = ExperimentDataCollectionStartResponseMsg_ResponseType_NOT_IN_IDLE_MODE;
  static const ResponseType NAME_TAKEN = ExperimentDataCollectionStartResponseMsg_ResponseType_NAME_TAKEN;
  static const ResponseType ILLEGAL_NAME = ExperimentDataCollectionStartResponseMsg_ResponseType_ILLEGAL_NAME;
  static const ResponseType OTHER_ERROR = ExperimentDataCollectionStartResponseMsg_ResponseType_OTHER_ERROR;
  static inline bool ResponseType_IsValid(int value) {
    return ExperimentDataCollectionStartResponseMsg_ResponseType_IsValid(value);
  }
  static const ResponseType ResponseType_MIN =
    ExperimentDataCollectionStartResponseMsg_ResponseType_ResponseType_MIN;
  static const ResponseType ResponseType_MAX =
    ExperimentDataCollectionStartResponseMsg_ResponseType_ResponseType_MAX;
  static const int ResponseType_ARRAYSIZE =
    ExperimentDataCollectionStartResponseMsg_ResponseType_ResponseType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ResponseType_descriptor() {
    return ExperimentDataCollectionStartResponseMsg_ResponseType_descriptor();
  }
  static inline const ::std::string& ResponseType_Name(ResponseType value) {
    return ExperimentDataCollectionStartResponseMsg_ResponseType_Name(value);
  }
  static inline bool ResponseType_Parse(const ::std::string& name,
      ResponseType* value) {
    return ExperimentDataCollectionStartResponseMsg_ResponseType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .protobuf.ExperimentDataCollectionStartResponseMsg.ResponseType response_type = 1;
  inline bool has_response_type() const;
  inline void clear_response_type();
  static const int kResponseTypeFieldNumber = 1;
  inline ::protobuf::ExperimentDataCollectionStartResponseMsg_ResponseType response_type() const;
  inline void set_response_type(::protobuf::ExperimentDataCollectionStartResponseMsg_ResponseType value);

  // @@protoc_insertion_point(class_scope:protobuf.ExperimentDataCollectionStartResponseMsg)
 private:
  inline void set_has_response_type();
  inline void clear_has_response_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int response_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static ExperimentDataCollectionStartResponseMsg* default_instance_;
};
// -------------------------------------------------------------------

class ExperimentDataCollectionStopRequestMsg : public ::google::protobuf::Message {
 public:
  ExperimentDataCollectionStopRequestMsg();
  virtual ~ExperimentDataCollectionStopRequestMsg();

  ExperimentDataCollectionStopRequestMsg(const ExperimentDataCollectionStopRequestMsg& from);

  inline ExperimentDataCollectionStopRequestMsg& operator=(const ExperimentDataCollectionStopRequestMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExperimentDataCollectionStopRequestMsg& default_instance();

  void Swap(ExperimentDataCollectionStopRequestMsg* other);

  // implements Message ----------------------------------------------

  ExperimentDataCollectionStopRequestMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExperimentDataCollectionStopRequestMsg& from);
  void MergeFrom(const ExperimentDataCollectionStopRequestMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protobuf.ExperimentDataCollectionStopRequestMsg)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static ExperimentDataCollectionStopRequestMsg* default_instance_;
};
// -------------------------------------------------------------------

class ExperimentDataCollectionStopResponseMsg : public ::google::protobuf::Message {
 public:
  ExperimentDataCollectionStopResponseMsg();
  virtual ~ExperimentDataCollectionStopResponseMsg();

  ExperimentDataCollectionStopResponseMsg(const ExperimentDataCollectionStopResponseMsg& from);

  inline ExperimentDataCollectionStopResponseMsg& operator=(const ExperimentDataCollectionStopResponseMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExperimentDataCollectionStopResponseMsg& default_instance();

  void Swap(ExperimentDataCollectionStopResponseMsg* other);

  // implements Message ----------------------------------------------

  ExperimentDataCollectionStopResponseMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExperimentDataCollectionStopResponseMsg& from);
  void MergeFrom(const ExperimentDataCollectionStopResponseMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ExperimentDataCollectionStopResponseMsg_ResponseType ResponseType;
  static const ResponseType SUCCESS = ExperimentDataCollectionStopResponseMsg_ResponseType_SUCCESS;
  static const ResponseType NOT_IN_DATA_COLLECTION_MODE = ExperimentDataCollectionStopResponseMsg_ResponseType_NOT_IN_DATA_COLLECTION_MODE;
  static const ResponseType OTHER_ERROR = ExperimentDataCollectionStopResponseMsg_ResponseType_OTHER_ERROR;
  static inline bool ResponseType_IsValid(int value) {
    return ExperimentDataCollectionStopResponseMsg_ResponseType_IsValid(value);
  }
  static const ResponseType ResponseType_MIN =
    ExperimentDataCollectionStopResponseMsg_ResponseType_ResponseType_MIN;
  static const ResponseType ResponseType_MAX =
    ExperimentDataCollectionStopResponseMsg_ResponseType_ResponseType_MAX;
  static const int ResponseType_ARRAYSIZE =
    ExperimentDataCollectionStopResponseMsg_ResponseType_ResponseType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ResponseType_descriptor() {
    return ExperimentDataCollectionStopResponseMsg_ResponseType_descriptor();
  }
  static inline const ::std::string& ResponseType_Name(ResponseType value) {
    return ExperimentDataCollectionStopResponseMsg_ResponseType_Name(value);
  }
  static inline bool ResponseType_Parse(const ::std::string& name,
      ResponseType* value) {
    return ExperimentDataCollectionStopResponseMsg_ResponseType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .protobuf.ExperimentDataCollectionStopResponseMsg.ResponseType response_type = 1;
  inline bool has_response_type() const;
  inline void clear_response_type();
  static const int kResponseTypeFieldNumber = 1;
  inline ::protobuf::ExperimentDataCollectionStopResponseMsg_ResponseType response_type() const;
  inline void set_response_type(::protobuf::ExperimentDataCollectionStopResponseMsg_ResponseType value);

  // @@protoc_insertion_point(class_scope:protobuf.ExperimentDataCollectionStopResponseMsg)
 private:
  inline void set_has_response_type();
  inline void clear_has_response_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int response_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static ExperimentDataCollectionStopResponseMsg* default_instance_;
};
// -------------------------------------------------------------------

class RenameExperimentRequestMsg : public ::google::protobuf::Message {
 public:
  RenameExperimentRequestMsg();
  virtual ~RenameExperimentRequestMsg();

  RenameExperimentRequestMsg(const RenameExperimentRequestMsg& from);

  inline RenameExperimentRequestMsg& operator=(const RenameExperimentRequestMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RenameExperimentRequestMsg& default_instance();

  void Swap(RenameExperimentRequestMsg* other);

  // implements Message ----------------------------------------------

  RenameExperimentRequestMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RenameExperimentRequestMsg& from);
  void MergeFrom(const RenameExperimentRequestMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string old_name = 1;
  inline bool has_old_name() const;
  inline void clear_old_name();
  static const int kOldNameFieldNumber = 1;
  inline const ::std::string& old_name() const;
  inline void set_old_name(const ::std::string& value);
  inline void set_old_name(const char* value);
  inline void set_old_name(const char* value, size_t size);
  inline ::std::string* mutable_old_name();
  inline ::std::string* release_old_name();
  inline void set_allocated_old_name(::std::string* old_name);

  // required string new_name = 2;
  inline bool has_new_name() const;
  inline void clear_new_name();
  static const int kNewNameFieldNumber = 2;
  inline const ::std::string& new_name() const;
  inline void set_new_name(const ::std::string& value);
  inline void set_new_name(const char* value);
  inline void set_new_name(const char* value, size_t size);
  inline ::std::string* mutable_new_name();
  inline ::std::string* release_new_name();
  inline void set_allocated_new_name(::std::string* new_name);

  // @@protoc_insertion_point(class_scope:protobuf.RenameExperimentRequestMsg)
 private:
  inline void set_has_old_name();
  inline void clear_has_old_name();
  inline void set_has_new_name();
  inline void clear_has_new_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* old_name_;
  ::std::string* new_name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static RenameExperimentRequestMsg* default_instance_;
};
// -------------------------------------------------------------------

class RenameExperimentResponseMsg : public ::google::protobuf::Message {
 public:
  RenameExperimentResponseMsg();
  virtual ~RenameExperimentResponseMsg();

  RenameExperimentResponseMsg(const RenameExperimentResponseMsg& from);

  inline RenameExperimentResponseMsg& operator=(const RenameExperimentResponseMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RenameExperimentResponseMsg& default_instance();

  void Swap(RenameExperimentResponseMsg* other);

  // implements Message ----------------------------------------------

  RenameExperimentResponseMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RenameExperimentResponseMsg& from);
  void MergeFrom(const RenameExperimentResponseMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef RenameExperimentResponseMsg_ResponseType ResponseType;
  static const ResponseType SUCCESS = RenameExperimentResponseMsg_ResponseType_SUCCESS;
  static const ResponseType NO_ACTIVE_PROJECT = RenameExperimentResponseMsg_ResponseType_NO_ACTIVE_PROJECT;
  static const ResponseType NAME_TAKEN = RenameExperimentResponseMsg_ResponseType_NAME_TAKEN;
  static const ResponseType EXPERIMENT_NOT_FOUND = RenameExperimentResponseMsg_ResponseType_EXPERIMENT_NOT_FOUND;
  static const ResponseType OTHER_ERROR = RenameExperimentResponseMsg_ResponseType_OTHER_ERROR;
  static inline bool ResponseType_IsValid(int value) {
    return RenameExperimentResponseMsg_ResponseType_IsValid(value);
  }
  static const ResponseType ResponseType_MIN =
    RenameExperimentResponseMsg_ResponseType_ResponseType_MIN;
  static const ResponseType ResponseType_MAX =
    RenameExperimentResponseMsg_ResponseType_ResponseType_MAX;
  static const int ResponseType_ARRAYSIZE =
    RenameExperimentResponseMsg_ResponseType_ResponseType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ResponseType_descriptor() {
    return RenameExperimentResponseMsg_ResponseType_descriptor();
  }
  static inline const ::std::string& ResponseType_Name(ResponseType value) {
    return RenameExperimentResponseMsg_ResponseType_Name(value);
  }
  static inline bool ResponseType_Parse(const ::std::string& name,
      ResponseType* value) {
    return RenameExperimentResponseMsg_ResponseType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .protobuf.RenameExperimentResponseMsg.ResponseType response_type = 1;
  inline bool has_response_type() const;
  inline void clear_response_type();
  static const int kResponseTypeFieldNumber = 1;
  inline ::protobuf::RenameExperimentResponseMsg_ResponseType response_type() const;
  inline void set_response_type(::protobuf::RenameExperimentResponseMsg_ResponseType value);

  // @@protoc_insertion_point(class_scope:protobuf.RenameExperimentResponseMsg)
 private:
  inline void set_has_response_type();
  inline void clear_has_response_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int response_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static RenameExperimentResponseMsg* default_instance_;
};
// -------------------------------------------------------------------

class RemoveExperimentRequestMsg : public ::google::protobuf::Message {
 public:
  RemoveExperimentRequestMsg();
  virtual ~RemoveExperimentRequestMsg();

  RemoveExperimentRequestMsg(const RemoveExperimentRequestMsg& from);

  inline RemoveExperimentRequestMsg& operator=(const RemoveExperimentRequestMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveExperimentRequestMsg& default_instance();

  void Swap(RemoveExperimentRequestMsg* other);

  // implements Message ----------------------------------------------

  RemoveExperimentRequestMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RemoveExperimentRequestMsg& from);
  void MergeFrom(const RemoveExperimentRequestMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:protobuf.RemoveExperimentRequestMsg)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static RemoveExperimentRequestMsg* default_instance_;
};
// -------------------------------------------------------------------

class RemoveExperimentResponseMsg : public ::google::protobuf::Message {
 public:
  RemoveExperimentResponseMsg();
  virtual ~RemoveExperimentResponseMsg();

  RemoveExperimentResponseMsg(const RemoveExperimentResponseMsg& from);

  inline RemoveExperimentResponseMsg& operator=(const RemoveExperimentResponseMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveExperimentResponseMsg& default_instance();

  void Swap(RemoveExperimentResponseMsg* other);

  // implements Message ----------------------------------------------

  RemoveExperimentResponseMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RemoveExperimentResponseMsg& from);
  void MergeFrom(const RemoveExperimentResponseMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef RemoveExperimentResponseMsg_ResponseType ResponseType;
  static const ResponseType SUCCESS = RemoveExperimentResponseMsg_ResponseType_SUCCESS;
  static const ResponseType NO_ACTIVE_PROJECT = RemoveExperimentResponseMsg_ResponseType_NO_ACTIVE_PROJECT;
  static const ResponseType EXPERIMENT_NOT_FOUND = RemoveExperimentResponseMsg_ResponseType_EXPERIMENT_NOT_FOUND;
  static const ResponseType OTHER_ERROR = RemoveExperimentResponseMsg_ResponseType_OTHER_ERROR;
  static inline bool ResponseType_IsValid(int value) {
    return RemoveExperimentResponseMsg_ResponseType_IsValid(value);
  }
  static const ResponseType ResponseType_MIN =
    RemoveExperimentResponseMsg_ResponseType_ResponseType_MIN;
  static const ResponseType ResponseType_MAX =
    RemoveExperimentResponseMsg_ResponseType_ResponseType_MAX;
  static const int ResponseType_ARRAYSIZE =
    RemoveExperimentResponseMsg_ResponseType_ResponseType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ResponseType_descriptor() {
    return RemoveExperimentResponseMsg_ResponseType_descriptor();
  }
  static inline const ::std::string& ResponseType_Name(ResponseType value) {
    return RemoveExperimentResponseMsg_ResponseType_Name(value);
  }
  static inline bool ResponseType_Parse(const ::std::string& name,
      ResponseType* value) {
    return RemoveExperimentResponseMsg_ResponseType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .protobuf.RemoveExperimentResponseMsg.ResponseType response_type = 1;
  inline bool has_response_type() const;
  inline void clear_response_type();
  static const int kResponseTypeFieldNumber = 1;
  inline ::protobuf::RemoveExperimentResponseMsg_ResponseType response_type() const;
  inline void set_response_type(::protobuf::RemoveExperimentResponseMsg_ResponseType value);

  // @@protoc_insertion_point(class_scope:protobuf.RemoveExperimentResponseMsg)
 private:
  inline void set_has_response_type();
  inline void clear_has_response_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int response_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static RemoveExperimentResponseMsg* default_instance_;
};
// -------------------------------------------------------------------

class ExperimentPlaybackStartRequestMsg : public ::google::protobuf::Message {
 public:
  ExperimentPlaybackStartRequestMsg();
  virtual ~ExperimentPlaybackStartRequestMsg();

  ExperimentPlaybackStartRequestMsg(const ExperimentPlaybackStartRequestMsg& from);

  inline ExperimentPlaybackStartRequestMsg& operator=(const ExperimentPlaybackStartRequestMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExperimentPlaybackStartRequestMsg& default_instance();

  void Swap(ExperimentPlaybackStartRequestMsg* other);

  // implements Message ----------------------------------------------

  ExperimentPlaybackStartRequestMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExperimentPlaybackStartRequestMsg& from);
  void MergeFrom(const ExperimentPlaybackStartRequestMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // repeated int32 sensor_ids = 2;
  inline int sensor_ids_size() const;
  inline void clear_sensor_ids();
  static const int kSensorIdsFieldNumber = 2;
  inline ::google::protobuf::int32 sensor_ids(int index) const;
  inline void set_sensor_ids(int index, ::google::protobuf::int32 value);
  inline void add_sensor_ids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      sensor_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_sensor_ids();

  // @@protoc_insertion_point(class_scope:protobuf.ExperimentPlaybackStartRequestMsg)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > sensor_ids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static ExperimentPlaybackStartRequestMsg* default_instance_;
};
// -------------------------------------------------------------------

class ExperimentPlaybackStartResponseMsg : public ::google::protobuf::Message {
 public:
  ExperimentPlaybackStartResponseMsg();
  virtual ~ExperimentPlaybackStartResponseMsg();

  ExperimentPlaybackStartResponseMsg(const ExperimentPlaybackStartResponseMsg& from);

  inline ExperimentPlaybackStartResponseMsg& operator=(const ExperimentPlaybackStartResponseMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExperimentPlaybackStartResponseMsg& default_instance();

  void Swap(ExperimentPlaybackStartResponseMsg* other);

  // implements Message ----------------------------------------------

  ExperimentPlaybackStartResponseMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExperimentPlaybackStartResponseMsg& from);
  void MergeFrom(const ExperimentPlaybackStartResponseMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ExperimentPlaybackStartResponseMsg_ResponseType ResponseType;
  static const ResponseType SUCCESS = ExperimentPlaybackStartResponseMsg_ResponseType_SUCCESS;
  static const ResponseType NO_ACTIVE_PROJECT = ExperimentPlaybackStartResponseMsg_ResponseType_NO_ACTIVE_PROJECT;
  static const ResponseType EXPERIMENT_NOT_FOUND = ExperimentPlaybackStartResponseMsg_ResponseType_EXPERIMENT_NOT_FOUND;
  static const ResponseType NOT_IN_IDLE_MODE = ExperimentPlaybackStartResponseMsg_ResponseType_NOT_IN_IDLE_MODE;
  static const ResponseType OTHER_ERROR = ExperimentPlaybackStartResponseMsg_ResponseType_OTHER_ERROR;
  static inline bool ResponseType_IsValid(int value) {
    return ExperimentPlaybackStartResponseMsg_ResponseType_IsValid(value);
  }
  static const ResponseType ResponseType_MIN =
    ExperimentPlaybackStartResponseMsg_ResponseType_ResponseType_MIN;
  static const ResponseType ResponseType_MAX =
    ExperimentPlaybackStartResponseMsg_ResponseType_ResponseType_MAX;
  static const int ResponseType_ARRAYSIZE =
    ExperimentPlaybackStartResponseMsg_ResponseType_ResponseType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ResponseType_descriptor() {
    return ExperimentPlaybackStartResponseMsg_ResponseType_descriptor();
  }
  static inline const ::std::string& ResponseType_Name(ResponseType value) {
    return ExperimentPlaybackStartResponseMsg_ResponseType_Name(value);
  }
  static inline bool ResponseType_Parse(const ::std::string& name,
      ResponseType* value) {
    return ExperimentPlaybackStartResponseMsg_ResponseType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .protobuf.ExperimentPlaybackStartResponseMsg.ResponseType response_type = 1;
  inline bool has_response_type() const;
  inline void clear_response_type();
  static const int kResponseTypeFieldNumber = 1;
  inline ::protobuf::ExperimentPlaybackStartResponseMsg_ResponseType response_type() const;
  inline void set_response_type(::protobuf::ExperimentPlaybackStartResponseMsg_ResponseType value);

  // @@protoc_insertion_point(class_scope:protobuf.ExperimentPlaybackStartResponseMsg)
 private:
  inline void set_has_response_type();
  inline void clear_has_response_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int response_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static ExperimentPlaybackStartResponseMsg* default_instance_;
};
// -------------------------------------------------------------------

class ExperimentPlaybackStopRequestMsg : public ::google::protobuf::Message {
 public:
  ExperimentPlaybackStopRequestMsg();
  virtual ~ExperimentPlaybackStopRequestMsg();

  ExperimentPlaybackStopRequestMsg(const ExperimentPlaybackStopRequestMsg& from);

  inline ExperimentPlaybackStopRequestMsg& operator=(const ExperimentPlaybackStopRequestMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExperimentPlaybackStopRequestMsg& default_instance();

  void Swap(ExperimentPlaybackStopRequestMsg* other);

  // implements Message ----------------------------------------------

  ExperimentPlaybackStopRequestMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExperimentPlaybackStopRequestMsg& from);
  void MergeFrom(const ExperimentPlaybackStopRequestMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protobuf.ExperimentPlaybackStopRequestMsg)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static ExperimentPlaybackStopRequestMsg* default_instance_;
};
// -------------------------------------------------------------------

class ExperimentPlaybackStopResponseMsg : public ::google::protobuf::Message {
 public:
  ExperimentPlaybackStopResponseMsg();
  virtual ~ExperimentPlaybackStopResponseMsg();

  ExperimentPlaybackStopResponseMsg(const ExperimentPlaybackStopResponseMsg& from);

  inline ExperimentPlaybackStopResponseMsg& operator=(const ExperimentPlaybackStopResponseMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExperimentPlaybackStopResponseMsg& default_instance();

  void Swap(ExperimentPlaybackStopResponseMsg* other);

  // implements Message ----------------------------------------------

  ExperimentPlaybackStopResponseMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExperimentPlaybackStopResponseMsg& from);
  void MergeFrom(const ExperimentPlaybackStopResponseMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ExperimentPlaybackStopResponseMsg_ResponseType ResponseType;
  static const ResponseType SUCCESS = ExperimentPlaybackStopResponseMsg_ResponseType_SUCCESS;
  static const ResponseType NOT_IN_PLAYBACK_MODE = ExperimentPlaybackStopResponseMsg_ResponseType_NOT_IN_PLAYBACK_MODE;
  static const ResponseType OTHER_ERROR = ExperimentPlaybackStopResponseMsg_ResponseType_OTHER_ERROR;
  static inline bool ResponseType_IsValid(int value) {
    return ExperimentPlaybackStopResponseMsg_ResponseType_IsValid(value);
  }
  static const ResponseType ResponseType_MIN =
    ExperimentPlaybackStopResponseMsg_ResponseType_ResponseType_MIN;
  static const ResponseType ResponseType_MAX =
    ExperimentPlaybackStopResponseMsg_ResponseType_ResponseType_MAX;
  static const int ResponseType_ARRAYSIZE =
    ExperimentPlaybackStopResponseMsg_ResponseType_ResponseType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ResponseType_descriptor() {
    return ExperimentPlaybackStopResponseMsg_ResponseType_descriptor();
  }
  static inline const ::std::string& ResponseType_Name(ResponseType value) {
    return ExperimentPlaybackStopResponseMsg_ResponseType_Name(value);
  }
  static inline bool ResponseType_Parse(const ::std::string& name,
      ResponseType* value) {
    return ExperimentPlaybackStopResponseMsg_ResponseType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .protobuf.ExperimentPlaybackStopResponseMsg.ResponseType response_type = 1;
  inline bool has_response_type() const;
  inline void clear_response_type();
  static const int kResponseTypeFieldNumber = 1;
  inline ::protobuf::ExperimentPlaybackStopResponseMsg_ResponseType response_type() const;
  inline void set_response_type(::protobuf::ExperimentPlaybackStopResponseMsg_ResponseType value);

  // @@protoc_insertion_point(class_scope:protobuf.ExperimentPlaybackStopResponseMsg)
 private:
  inline void set_has_response_type();
  inline void clear_has_response_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int response_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static ExperimentPlaybackStopResponseMsg* default_instance_;
};
// -------------------------------------------------------------------

class ExperimentListMsg : public ::google::protobuf::Message {
 public:
  ExperimentListMsg();
  virtual ~ExperimentListMsg();

  ExperimentListMsg(const ExperimentListMsg& from);

  inline ExperimentListMsg& operator=(const ExperimentListMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExperimentListMsg& default_instance();

  void Swap(ExperimentListMsg* other);

  // implements Message ----------------------------------------------

  ExperimentListMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExperimentListMsg& from);
  void MergeFrom(const ExperimentListMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string names = 1;
  inline int names_size() const;
  inline void clear_names();
  static const int kNamesFieldNumber = 1;
  inline const ::std::string& names(int index) const;
  inline ::std::string* mutable_names(int index);
  inline void set_names(int index, const ::std::string& value);
  inline void set_names(int index, const char* value);
  inline void set_names(int index, const char* value, size_t size);
  inline ::std::string* add_names();
  inline void add_names(const ::std::string& value);
  inline void add_names(const char* value);
  inline void add_names(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& names() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_names();

  // @@protoc_insertion_point(class_scope:protobuf.ExperimentListMsg)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::std::string> names_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static ExperimentListMsg* default_instance_;
};
// -------------------------------------------------------------------

class SetExperimentMetadataRequestMsg : public ::google::protobuf::Message {
 public:
  SetExperimentMetadataRequestMsg();
  virtual ~SetExperimentMetadataRequestMsg();

  SetExperimentMetadataRequestMsg(const SetExperimentMetadataRequestMsg& from);

  inline SetExperimentMetadataRequestMsg& operator=(const SetExperimentMetadataRequestMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetExperimentMetadataRequestMsg& default_instance();

  void Swap(SetExperimentMetadataRequestMsg* other);

  // implements Message ----------------------------------------------

  SetExperimentMetadataRequestMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetExperimentMetadataRequestMsg& from);
  void MergeFrom(const SetExperimentMetadataRequestMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string experiment_name = 1;
  inline bool has_experiment_name() const;
  inline void clear_experiment_name();
  static const int kExperimentNameFieldNumber = 1;
  inline const ::std::string& experiment_name() const;
  inline void set_experiment_name(const ::std::string& value);
  inline void set_experiment_name(const char* value);
  inline void set_experiment_name(const char* value, size_t size);
  inline ::std::string* mutable_experiment_name();
  inline ::std::string* release_experiment_name();
  inline void set_allocated_experiment_name(::std::string* experiment_name);

  // repeated string tags = 2;
  inline int tags_size() const;
  inline void clear_tags();
  static const int kTagsFieldNumber = 2;
  inline const ::std::string& tags(int index) const;
  inline ::std::string* mutable_tags(int index);
  inline void set_tags(int index, const ::std::string& value);
  inline void set_tags(int index, const char* value);
  inline void set_tags(int index, const char* value, size_t size);
  inline ::std::string* add_tags();
  inline void add_tags(const ::std::string& value);
  inline void add_tags(const char* value);
  inline void add_tags(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& tags() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_tags();

  // optional string notes = 3;
  inline bool has_notes() const;
  inline void clear_notes();
  static const int kNotesFieldNumber = 3;
  inline const ::std::string& notes() const;
  inline void set_notes(const ::std::string& value);
  inline void set_notes(const char* value);
  inline void set_notes(const char* value, size_t size);
  inline ::std::string* mutable_notes();
  inline ::std::string* release_notes();
  inline void set_allocated_notes(::std::string* notes);

  // @@protoc_insertion_point(class_scope:protobuf.SetExperimentMetadataRequestMsg)
 private:
  inline void set_has_experiment_name();
  inline void clear_has_experiment_name();
  inline void set_has_notes();
  inline void clear_has_notes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* experiment_name_;
  ::google::protobuf::RepeatedPtrField< ::std::string> tags_;
  ::std::string* notes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static SetExperimentMetadataRequestMsg* default_instance_;
};
// -------------------------------------------------------------------

class SetExperimentMetadataResponseMsg : public ::google::protobuf::Message {
 public:
  SetExperimentMetadataResponseMsg();
  virtual ~SetExperimentMetadataResponseMsg();

  SetExperimentMetadataResponseMsg(const SetExperimentMetadataResponseMsg& from);

  inline SetExperimentMetadataResponseMsg& operator=(const SetExperimentMetadataResponseMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetExperimentMetadataResponseMsg& default_instance();

  void Swap(SetExperimentMetadataResponseMsg* other);

  // implements Message ----------------------------------------------

  SetExperimentMetadataResponseMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetExperimentMetadataResponseMsg& from);
  void MergeFrom(const SetExperimentMetadataResponseMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef SetExperimentMetadataResponseMsg_ResponseType ResponseType;
  static const ResponseType SUCCESS = SetExperimentMetadataResponseMsg_ResponseType_SUCCESS;
  static const ResponseType NO_ACTIVE_PROJECT = SetExperimentMetadataResponseMsg_ResponseType_NO_ACTIVE_PROJECT;
  static const ResponseType EXPERIMENT_NOT_FOUND = SetExperimentMetadataResponseMsg_ResponseType_EXPERIMENT_NOT_FOUND;
  static const ResponseType OTHER_ERROR = SetExperimentMetadataResponseMsg_ResponseType_OTHER_ERROR;
  static inline bool ResponseType_IsValid(int value) {
    return SetExperimentMetadataResponseMsg_ResponseType_IsValid(value);
  }
  static const ResponseType ResponseType_MIN =
    SetExperimentMetadataResponseMsg_ResponseType_ResponseType_MIN;
  static const ResponseType ResponseType_MAX =
    SetExperimentMetadataResponseMsg_ResponseType_ResponseType_MAX;
  static const int ResponseType_ARRAYSIZE =
    SetExperimentMetadataResponseMsg_ResponseType_ResponseType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ResponseType_descriptor() {
    return SetExperimentMetadataResponseMsg_ResponseType_descriptor();
  }
  static inline const ::std::string& ResponseType_Name(ResponseType value) {
    return SetExperimentMetadataResponseMsg_ResponseType_Name(value);
  }
  static inline bool ResponseType_Parse(const ::std::string& name,
      ResponseType* value) {
    return SetExperimentMetadataResponseMsg_ResponseType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .protobuf.SetExperimentMetadataResponseMsg.ResponseType response_type = 1;
  inline bool has_response_type() const;
  inline void clear_response_type();
  static const int kResponseTypeFieldNumber = 1;
  inline ::protobuf::SetExperimentMetadataResponseMsg_ResponseType response_type() const;
  inline void set_response_type(::protobuf::SetExperimentMetadataResponseMsg_ResponseType value);

  // @@protoc_insertion_point(class_scope:protobuf.SetExperimentMetadataResponseMsg)
 private:
  inline void set_has_response_type();
  inline void clear_has_response_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int response_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static SetExperimentMetadataResponseMsg* default_instance_;
};
// -------------------------------------------------------------------

class ExperimentMetadataMsg_MetadataStruct : public ::google::protobuf::Message {
 public:
  ExperimentMetadataMsg_MetadataStruct();
  virtual ~ExperimentMetadataMsg_MetadataStruct();

  ExperimentMetadataMsg_MetadataStruct(const ExperimentMetadataMsg_MetadataStruct& from);

  inline ExperimentMetadataMsg_MetadataStruct& operator=(const ExperimentMetadataMsg_MetadataStruct& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExperimentMetadataMsg_MetadataStruct& default_instance();

  void Swap(ExperimentMetadataMsg_MetadataStruct* other);

  // implements Message ----------------------------------------------

  ExperimentMetadataMsg_MetadataStruct* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExperimentMetadataMsg_MetadataStruct& from);
  void MergeFrom(const ExperimentMetadataMsg_MetadataStruct& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string tags = 1;
  inline int tags_size() const;
  inline void clear_tags();
  static const int kTagsFieldNumber = 1;
  inline const ::std::string& tags(int index) const;
  inline ::std::string* mutable_tags(int index);
  inline void set_tags(int index, const ::std::string& value);
  inline void set_tags(int index, const char* value);
  inline void set_tags(int index, const char* value, size_t size);
  inline ::std::string* add_tags();
  inline void add_tags(const ::std::string& value);
  inline void add_tags(const char* value);
  inline void add_tags(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& tags() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_tags();

  // optional string notes = 2;
  inline bool has_notes() const;
  inline void clear_notes();
  static const int kNotesFieldNumber = 2;
  inline const ::std::string& notes() const;
  inline void set_notes(const ::std::string& value);
  inline void set_notes(const char* value);
  inline void set_notes(const char* value, size_t size);
  inline ::std::string* mutable_notes();
  inline ::std::string* release_notes();
  inline void set_allocated_notes(::std::string* notes);

  // repeated .protobuf.SensorConfiguration sensor_configurations = 3;
  inline int sensor_configurations_size() const;
  inline void clear_sensor_configurations();
  static const int kSensorConfigurationsFieldNumber = 3;
  inline const ::protobuf::SensorConfiguration& sensor_configurations(int index) const;
  inline ::protobuf::SensorConfiguration* mutable_sensor_configurations(int index);
  inline ::protobuf::SensorConfiguration* add_sensor_configurations();
  inline const ::google::protobuf::RepeatedPtrField< ::protobuf::SensorConfiguration >&
      sensor_configurations() const;
  inline ::google::protobuf::RepeatedPtrField< ::protobuf::SensorConfiguration >*
      mutable_sensor_configurations();

  // @@protoc_insertion_point(class_scope:protobuf.ExperimentMetadataMsg.MetadataStruct)
 private:
  inline void set_has_notes();
  inline void clear_has_notes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::std::string> tags_;
  ::std::string* notes_;
  ::google::protobuf::RepeatedPtrField< ::protobuf::SensorConfiguration > sensor_configurations_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static ExperimentMetadataMsg_MetadataStruct* default_instance_;
};
// -------------------------------------------------------------------

class ExperimentMetadataMsg : public ::google::protobuf::Message {
 public:
  ExperimentMetadataMsg();
  virtual ~ExperimentMetadataMsg();

  ExperimentMetadataMsg(const ExperimentMetadataMsg& from);

  inline ExperimentMetadataMsg& operator=(const ExperimentMetadataMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExperimentMetadataMsg& default_instance();

  void Swap(ExperimentMetadataMsg* other);

  // implements Message ----------------------------------------------

  ExperimentMetadataMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExperimentMetadataMsg& from);
  void MergeFrom(const ExperimentMetadataMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ExperimentMetadataMsg_MetadataStruct MetadataStruct;

  // accessors -------------------------------------------------------

  // required string experiment_name = 1;
  inline bool has_experiment_name() const;
  inline void clear_experiment_name();
  static const int kExperimentNameFieldNumber = 1;
  inline const ::std::string& experiment_name() const;
  inline void set_experiment_name(const ::std::string& value);
  inline void set_experiment_name(const char* value);
  inline void set_experiment_name(const char* value, size_t size);
  inline ::std::string* mutable_experiment_name();
  inline ::std::string* release_experiment_name();
  inline void set_allocated_experiment_name(::std::string* experiment_name);

  // required .protobuf.ExperimentMetadataMsg.MetadataStruct metadata = 2;
  inline bool has_metadata() const;
  inline void clear_metadata();
  static const int kMetadataFieldNumber = 2;
  inline const ::protobuf::ExperimentMetadataMsg_MetadataStruct& metadata() const;
  inline ::protobuf::ExperimentMetadataMsg_MetadataStruct* mutable_metadata();
  inline ::protobuf::ExperimentMetadataMsg_MetadataStruct* release_metadata();
  inline void set_allocated_metadata(::protobuf::ExperimentMetadataMsg_MetadataStruct* metadata);

  // @@protoc_insertion_point(class_scope:protobuf.ExperimentMetadataMsg)
 private:
  inline void set_has_experiment_name();
  inline void clear_has_experiment_name();
  inline void set_has_metadata();
  inline void clear_has_metadata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* experiment_name_;
  ::protobuf::ExperimentMetadataMsg_MetadataStruct* metadata_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static ExperimentMetadataMsg* default_instance_;
};
// -------------------------------------------------------------------

class DebugMsg : public ::google::protobuf::Message {
 public:
  DebugMsg();
  virtual ~DebugMsg();

  DebugMsg(const DebugMsg& from);

  inline DebugMsg& operator=(const DebugMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DebugMsg& default_instance();

  void Swap(DebugMsg* other);

  // implements Message ----------------------------------------------

  DebugMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DebugMsg& from);
  void MergeFrom(const DebugMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string debug_message = 1;
  inline bool has_debug_message() const;
  inline void clear_debug_message();
  static const int kDebugMessageFieldNumber = 1;
  inline const ::std::string& debug_message() const;
  inline void set_debug_message(const ::std::string& value);
  inline void set_debug_message(const char* value);
  inline void set_debug_message(const char* value, size_t size);
  inline ::std::string* mutable_debug_message();
  inline ::std::string* release_debug_message();
  inline void set_allocated_debug_message(::std::string* debug_message);

  // @@protoc_insertion_point(class_scope:protobuf.DebugMsg)
 private:
  inline void set_has_debug_message();
  inline void clear_has_debug_message();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* debug_message_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static DebugMsg* default_instance_;
};
// -------------------------------------------------------------------

class ErrorMsg : public ::google::protobuf::Message {
 public:
  ErrorMsg();
  virtual ~ErrorMsg();

  ErrorMsg(const ErrorMsg& from);

  inline ErrorMsg& operator=(const ErrorMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ErrorMsg& default_instance();

  void Swap(ErrorMsg* other);

  // implements Message ----------------------------------------------

  ErrorMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ErrorMsg& from);
  void MergeFrom(const ErrorMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ErrorMsg_ErrorType ErrorType;
  static const ErrorType UNKNOWN_SENSOR_ID = ErrorMsg_ErrorType_UNKNOWN_SENSOR_ID;
  static const ErrorType UNKNOWN_GENERALMSG_SUBTYPE = ErrorMsg_ErrorType_UNKNOWN_GENERALMSG_SUBTYPE;
  static inline bool ErrorType_IsValid(int value) {
    return ErrorMsg_ErrorType_IsValid(value);
  }
  static const ErrorType ErrorType_MIN =
    ErrorMsg_ErrorType_ErrorType_MIN;
  static const ErrorType ErrorType_MAX =
    ErrorMsg_ErrorType_ErrorType_MAX;
  static const int ErrorType_ARRAYSIZE =
    ErrorMsg_ErrorType_ErrorType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ErrorType_descriptor() {
    return ErrorMsg_ErrorType_descriptor();
  }
  static inline const ::std::string& ErrorType_Name(ErrorType value) {
    return ErrorMsg_ErrorType_Name(value);
  }
  static inline bool ErrorType_Parse(const ::std::string& name,
      ErrorType* value) {
    return ErrorMsg_ErrorType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .protobuf.ErrorMsg.ErrorType error_type = 1;
  inline bool has_error_type() const;
  inline void clear_error_type();
  static const int kErrorTypeFieldNumber = 1;
  inline ::protobuf::ErrorMsg_ErrorType error_type() const;
  inline void set_error_type(::protobuf::ErrorMsg_ErrorType value);

  // @@protoc_insertion_point(class_scope:protobuf.ErrorMsg)
 private:
  inline void set_has_error_type();
  inline void clear_has_error_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int error_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2eproto();
  friend void protobuf_AssignDesc_protocol_2eproto();
  friend void protobuf_ShutdownFile_protocol_2eproto();

  void InitAsDefaultInstance();
  static ErrorMsg* default_instance_;
};
// ===================================================================


// ===================================================================

// GeneralMsg

// required .protobuf.GeneralMsg.SubType sub_type = 1;
inline bool GeneralMsg::has_sub_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GeneralMsg::set_has_sub_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GeneralMsg::clear_has_sub_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GeneralMsg::clear_sub_type() {
  sub_type_ = 1;
  clear_has_sub_type();
}
inline ::protobuf::GeneralMsg_SubType GeneralMsg::sub_type() const {
  return static_cast< ::protobuf::GeneralMsg_SubType >(sub_type_);
}
inline void GeneralMsg::set_sub_type(::protobuf::GeneralMsg_SubType value) {
  assert(::protobuf::GeneralMsg_SubType_IsValid(value));
  set_has_sub_type();
  sub_type_ = value;
}

// optional .protobuf.DataMsg data = 2;
inline bool GeneralMsg::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GeneralMsg::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GeneralMsg::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GeneralMsg::clear_data() {
  if (data_ != NULL) data_->::protobuf::DataMsg::Clear();
  clear_has_data();
}
inline const ::protobuf::DataMsg& GeneralMsg::data() const {
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::protobuf::DataMsg* GeneralMsg::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::protobuf::DataMsg;
  return data_;
}
inline ::protobuf::DataMsg* GeneralMsg::release_data() {
  clear_has_data();
  ::protobuf::DataMsg* temp = data_;
  data_ = NULL;
  return temp;
}
inline void GeneralMsg::set_allocated_data(::protobuf::DataMsg* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
}

// optional .protobuf.SetDynamicEventRequestMsg set_dynamic_event_request = 3;
inline bool GeneralMsg::has_set_dynamic_event_request() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GeneralMsg::set_has_set_dynamic_event_request() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GeneralMsg::clear_has_set_dynamic_event_request() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GeneralMsg::clear_set_dynamic_event_request() {
  if (set_dynamic_event_request_ != NULL) set_dynamic_event_request_->::protobuf::SetDynamicEventRequestMsg::Clear();
  clear_has_set_dynamic_event_request();
}
inline const ::protobuf::SetDynamicEventRequestMsg& GeneralMsg::set_dynamic_event_request() const {
  return set_dynamic_event_request_ != NULL ? *set_dynamic_event_request_ : *default_instance_->set_dynamic_event_request_;
}
inline ::protobuf::SetDynamicEventRequestMsg* GeneralMsg::mutable_set_dynamic_event_request() {
  set_has_set_dynamic_event_request();
  if (set_dynamic_event_request_ == NULL) set_dynamic_event_request_ = new ::protobuf::SetDynamicEventRequestMsg;
  return set_dynamic_event_request_;
}
inline ::protobuf::SetDynamicEventRequestMsg* GeneralMsg::release_set_dynamic_event_request() {
  clear_has_set_dynamic_event_request();
  ::protobuf::SetDynamicEventRequestMsg* temp = set_dynamic_event_request_;
  set_dynamic_event_request_ = NULL;
  return temp;
}
inline void GeneralMsg::set_allocated_set_dynamic_event_request(::protobuf::SetDynamicEventRequestMsg* set_dynamic_event_request) {
  delete set_dynamic_event_request_;
  set_dynamic_event_request_ = set_dynamic_event_request;
  if (set_dynamic_event_request) {
    set_has_set_dynamic_event_request();
  } else {
    clear_has_set_dynamic_event_request();
  }
}

// optional .protobuf.SetDynamicEventResponseMsg set_dynamic_event_response = 4;
inline bool GeneralMsg::has_set_dynamic_event_response() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GeneralMsg::set_has_set_dynamic_event_response() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GeneralMsg::clear_has_set_dynamic_event_response() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GeneralMsg::clear_set_dynamic_event_response() {
  if (set_dynamic_event_response_ != NULL) set_dynamic_event_response_->::protobuf::SetDynamicEventResponseMsg::Clear();
  clear_has_set_dynamic_event_response();
}
inline const ::protobuf::SetDynamicEventResponseMsg& GeneralMsg::set_dynamic_event_response() const {
  return set_dynamic_event_response_ != NULL ? *set_dynamic_event_response_ : *default_instance_->set_dynamic_event_response_;
}
inline ::protobuf::SetDynamicEventResponseMsg* GeneralMsg::mutable_set_dynamic_event_response() {
  set_has_set_dynamic_event_response();
  if (set_dynamic_event_response_ == NULL) set_dynamic_event_response_ = new ::protobuf::SetDynamicEventResponseMsg;
  return set_dynamic_event_response_;
}
inline ::protobuf::SetDynamicEventResponseMsg* GeneralMsg::release_set_dynamic_event_response() {
  clear_has_set_dynamic_event_response();
  ::protobuf::SetDynamicEventResponseMsg* temp = set_dynamic_event_response_;
  set_dynamic_event_response_ = NULL;
  return temp;
}
inline void GeneralMsg::set_allocated_set_dynamic_event_response(::protobuf::SetDynamicEventResponseMsg* set_dynamic_event_response) {
  delete set_dynamic_event_response_;
  set_dynamic_event_response_ = set_dynamic_event_response;
  if (set_dynamic_event_response) {
    set_has_set_dynamic_event_response();
  } else {
    clear_has_set_dynamic_event_response();
  }
}

// optional .protobuf.DynamicEventMsg dynamic_event = 5;
inline bool GeneralMsg::has_dynamic_event() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GeneralMsg::set_has_dynamic_event() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GeneralMsg::clear_has_dynamic_event() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GeneralMsg::clear_dynamic_event() {
  if (dynamic_event_ != NULL) dynamic_event_->::protobuf::DynamicEventMsg::Clear();
  clear_has_dynamic_event();
}
inline const ::protobuf::DynamicEventMsg& GeneralMsg::dynamic_event() const {
  return dynamic_event_ != NULL ? *dynamic_event_ : *default_instance_->dynamic_event_;
}
inline ::protobuf::DynamicEventMsg* GeneralMsg::mutable_dynamic_event() {
  set_has_dynamic_event();
  if (dynamic_event_ == NULL) dynamic_event_ = new ::protobuf::DynamicEventMsg;
  return dynamic_event_;
}
inline ::protobuf::DynamicEventMsg* GeneralMsg::release_dynamic_event() {
  clear_has_dynamic_event();
  ::protobuf::DynamicEventMsg* temp = dynamic_event_;
  dynamic_event_ = NULL;
  return temp;
}
inline void GeneralMsg::set_allocated_dynamic_event(::protobuf::DynamicEventMsg* dynamic_event) {
  delete dynamic_event_;
  dynamic_event_ = dynamic_event;
  if (dynamic_event) {
    set_has_dynamic_event();
  } else {
    clear_has_dynamic_event();
  }
}

// optional .protobuf.ConfigurationMsg configuration = 6;
inline bool GeneralMsg::has_configuration() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GeneralMsg::set_has_configuration() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GeneralMsg::clear_has_configuration() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GeneralMsg::clear_configuration() {
  if (configuration_ != NULL) configuration_->::protobuf::ConfigurationMsg::Clear();
  clear_has_configuration();
}
inline const ::protobuf::ConfigurationMsg& GeneralMsg::configuration() const {
  return configuration_ != NULL ? *configuration_ : *default_instance_->configuration_;
}
inline ::protobuf::ConfigurationMsg* GeneralMsg::mutable_configuration() {
  set_has_configuration();
  if (configuration_ == NULL) configuration_ = new ::protobuf::ConfigurationMsg;
  return configuration_;
}
inline ::protobuf::ConfigurationMsg* GeneralMsg::release_configuration() {
  clear_has_configuration();
  ::protobuf::ConfigurationMsg* temp = configuration_;
  configuration_ = NULL;
  return temp;
}
inline void GeneralMsg::set_allocated_configuration(::protobuf::ConfigurationMsg* configuration) {
  delete configuration_;
  configuration_ = configuration;
  if (configuration) {
    set_has_configuration();
  } else {
    clear_has_configuration();
  }
}

// optional .protobuf.SettingsRequestMsg settings_request = 7;
inline bool GeneralMsg::has_settings_request() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GeneralMsg::set_has_settings_request() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GeneralMsg::clear_has_settings_request() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GeneralMsg::clear_settings_request() {
  if (settings_request_ != NULL) settings_request_->::protobuf::SettingsRequestMsg::Clear();
  clear_has_settings_request();
}
inline const ::protobuf::SettingsRequestMsg& GeneralMsg::settings_request() const {
  return settings_request_ != NULL ? *settings_request_ : *default_instance_->settings_request_;
}
inline ::protobuf::SettingsRequestMsg* GeneralMsg::mutable_settings_request() {
  set_has_settings_request();
  if (settings_request_ == NULL) settings_request_ = new ::protobuf::SettingsRequestMsg;
  return settings_request_;
}
inline ::protobuf::SettingsRequestMsg* GeneralMsg::release_settings_request() {
  clear_has_settings_request();
  ::protobuf::SettingsRequestMsg* temp = settings_request_;
  settings_request_ = NULL;
  return temp;
}
inline void GeneralMsg::set_allocated_settings_request(::protobuf::SettingsRequestMsg* settings_request) {
  delete settings_request_;
  settings_request_ = settings_request;
  if (settings_request) {
    set_has_settings_request();
  } else {
    clear_has_settings_request();
  }
}

// optional .protobuf.SettingsResponseMsg settings_response = 8;
inline bool GeneralMsg::has_settings_response() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GeneralMsg::set_has_settings_response() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GeneralMsg::clear_has_settings_response() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GeneralMsg::clear_settings_response() {
  if (settings_response_ != NULL) settings_response_->::protobuf::SettingsResponseMsg::Clear();
  clear_has_settings_response();
}
inline const ::protobuf::SettingsResponseMsg& GeneralMsg::settings_response() const {
  return settings_response_ != NULL ? *settings_response_ : *default_instance_->settings_response_;
}
inline ::protobuf::SettingsResponseMsg* GeneralMsg::mutable_settings_response() {
  set_has_settings_response();
  if (settings_response_ == NULL) settings_response_ = new ::protobuf::SettingsResponseMsg;
  return settings_response_;
}
inline ::protobuf::SettingsResponseMsg* GeneralMsg::release_settings_response() {
  clear_has_settings_response();
  ::protobuf::SettingsResponseMsg* temp = settings_response_;
  settings_response_ = NULL;
  return temp;
}
inline void GeneralMsg::set_allocated_settings_response(::protobuf::SettingsResponseMsg* settings_response) {
  delete settings_response_;
  settings_response_ = settings_response;
  if (settings_response) {
    set_has_settings_response();
  } else {
    clear_has_settings_response();
  }
}

// optional .protobuf.SensorStatusMsg sensor_status = 9;
inline bool GeneralMsg::has_sensor_status() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GeneralMsg::set_has_sensor_status() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GeneralMsg::clear_has_sensor_status() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GeneralMsg::clear_sensor_status() {
  if (sensor_status_ != NULL) sensor_status_->::protobuf::SensorStatusMsg::Clear();
  clear_has_sensor_status();
}
inline const ::protobuf::SensorStatusMsg& GeneralMsg::sensor_status() const {
  return sensor_status_ != NULL ? *sensor_status_ : *default_instance_->sensor_status_;
}
inline ::protobuf::SensorStatusMsg* GeneralMsg::mutable_sensor_status() {
  set_has_sensor_status();
  if (sensor_status_ == NULL) sensor_status_ = new ::protobuf::SensorStatusMsg;
  return sensor_status_;
}
inline ::protobuf::SensorStatusMsg* GeneralMsg::release_sensor_status() {
  clear_has_sensor_status();
  ::protobuf::SensorStatusMsg* temp = sensor_status_;
  sensor_status_ = NULL;
  return temp;
}
inline void GeneralMsg::set_allocated_sensor_status(::protobuf::SensorStatusMsg* sensor_status) {
  delete sensor_status_;
  sensor_status_ = sensor_status;
  if (sensor_status) {
    set_has_sensor_status();
  } else {
    clear_has_sensor_status();
  }
}

// optional .protobuf.StatusMsg status = 10;
inline bool GeneralMsg::has_status() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GeneralMsg::set_has_status() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GeneralMsg::clear_has_status() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GeneralMsg::clear_status() {
  if (status_ != NULL) status_->::protobuf::StatusMsg::Clear();
  clear_has_status();
}
inline const ::protobuf::StatusMsg& GeneralMsg::status() const {
  return status_ != NULL ? *status_ : *default_instance_->status_;
}
inline ::protobuf::StatusMsg* GeneralMsg::mutable_status() {
  set_has_status();
  if (status_ == NULL) status_ = new ::protobuf::StatusMsg;
  return status_;
}
inline ::protobuf::StatusMsg* GeneralMsg::release_status() {
  clear_has_status();
  ::protobuf::StatusMsg* temp = status_;
  status_ = NULL;
  return temp;
}
inline void GeneralMsg::set_allocated_status(::protobuf::StatusMsg* status) {
  delete status_;
  status_ = status;
  if (status) {
    set_has_status();
  } else {
    clear_has_status();
  }
}

// optional .protobuf.CreateNewProjectRequestMsg create_new_project_request = 11;
inline bool GeneralMsg::has_create_new_project_request() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GeneralMsg::set_has_create_new_project_request() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GeneralMsg::clear_has_create_new_project_request() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GeneralMsg::clear_create_new_project_request() {
  if (create_new_project_request_ != NULL) create_new_project_request_->::protobuf::CreateNewProjectRequestMsg::Clear();
  clear_has_create_new_project_request();
}
inline const ::protobuf::CreateNewProjectRequestMsg& GeneralMsg::create_new_project_request() const {
  return create_new_project_request_ != NULL ? *create_new_project_request_ : *default_instance_->create_new_project_request_;
}
inline ::protobuf::CreateNewProjectRequestMsg* GeneralMsg::mutable_create_new_project_request() {
  set_has_create_new_project_request();
  if (create_new_project_request_ == NULL) create_new_project_request_ = new ::protobuf::CreateNewProjectRequestMsg;
  return create_new_project_request_;
}
inline ::protobuf::CreateNewProjectRequestMsg* GeneralMsg::release_create_new_project_request() {
  clear_has_create_new_project_request();
  ::protobuf::CreateNewProjectRequestMsg* temp = create_new_project_request_;
  create_new_project_request_ = NULL;
  return temp;
}
inline void GeneralMsg::set_allocated_create_new_project_request(::protobuf::CreateNewProjectRequestMsg* create_new_project_request) {
  delete create_new_project_request_;
  create_new_project_request_ = create_new_project_request;
  if (create_new_project_request) {
    set_has_create_new_project_request();
  } else {
    clear_has_create_new_project_request();
  }
}

// optional .protobuf.CreateNewProjectResponseMsg create_new_project_response = 12;
inline bool GeneralMsg::has_create_new_project_response() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GeneralMsg::set_has_create_new_project_response() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GeneralMsg::clear_has_create_new_project_response() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GeneralMsg::clear_create_new_project_response() {
  if (create_new_project_response_ != NULL) create_new_project_response_->::protobuf::CreateNewProjectResponseMsg::Clear();
  clear_has_create_new_project_response();
}
inline const ::protobuf::CreateNewProjectResponseMsg& GeneralMsg::create_new_project_response() const {
  return create_new_project_response_ != NULL ? *create_new_project_response_ : *default_instance_->create_new_project_response_;
}
inline ::protobuf::CreateNewProjectResponseMsg* GeneralMsg::mutable_create_new_project_response() {
  set_has_create_new_project_response();
  if (create_new_project_response_ == NULL) create_new_project_response_ = new ::protobuf::CreateNewProjectResponseMsg;
  return create_new_project_response_;
}
inline ::protobuf::CreateNewProjectResponseMsg* GeneralMsg::release_create_new_project_response() {
  clear_has_create_new_project_response();
  ::protobuf::CreateNewProjectResponseMsg* temp = create_new_project_response_;
  create_new_project_response_ = NULL;
  return temp;
}
inline void GeneralMsg::set_allocated_create_new_project_response(::protobuf::CreateNewProjectResponseMsg* create_new_project_response) {
  delete create_new_project_response_;
  create_new_project_response_ = create_new_project_response;
  if (create_new_project_response) {
    set_has_create_new_project_response();
  } else {
    clear_has_create_new_project_response();
  }
}

// optional .protobuf.RenameProjectRequestMsg rename_project_request = 13;
inline bool GeneralMsg::has_rename_project_request() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void GeneralMsg::set_has_rename_project_request() {
  _has_bits_[0] |= 0x00001000u;
}
inline void GeneralMsg::clear_has_rename_project_request() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void GeneralMsg::clear_rename_project_request() {
  if (rename_project_request_ != NULL) rename_project_request_->::protobuf::RenameProjectRequestMsg::Clear();
  clear_has_rename_project_request();
}
inline const ::protobuf::RenameProjectRequestMsg& GeneralMsg::rename_project_request() const {
  return rename_project_request_ != NULL ? *rename_project_request_ : *default_instance_->rename_project_request_;
}
inline ::protobuf::RenameProjectRequestMsg* GeneralMsg::mutable_rename_project_request() {
  set_has_rename_project_request();
  if (rename_project_request_ == NULL) rename_project_request_ = new ::protobuf::RenameProjectRequestMsg;
  return rename_project_request_;
}
inline ::protobuf::RenameProjectRequestMsg* GeneralMsg::release_rename_project_request() {
  clear_has_rename_project_request();
  ::protobuf::RenameProjectRequestMsg* temp = rename_project_request_;
  rename_project_request_ = NULL;
  return temp;
}
inline void GeneralMsg::set_allocated_rename_project_request(::protobuf::RenameProjectRequestMsg* rename_project_request) {
  delete rename_project_request_;
  rename_project_request_ = rename_project_request;
  if (rename_project_request) {
    set_has_rename_project_request();
  } else {
    clear_has_rename_project_request();
  }
}

// optional .protobuf.RenameProjectResponseMsg rename_project_response = 14;
inline bool GeneralMsg::has_rename_project_response() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void GeneralMsg::set_has_rename_project_response() {
  _has_bits_[0] |= 0x00002000u;
}
inline void GeneralMsg::clear_has_rename_project_response() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void GeneralMsg::clear_rename_project_response() {
  if (rename_project_response_ != NULL) rename_project_response_->::protobuf::RenameProjectResponseMsg::Clear();
  clear_has_rename_project_response();
}
inline const ::protobuf::RenameProjectResponseMsg& GeneralMsg::rename_project_response() const {
  return rename_project_response_ != NULL ? *rename_project_response_ : *default_instance_->rename_project_response_;
}
inline ::protobuf::RenameProjectResponseMsg* GeneralMsg::mutable_rename_project_response() {
  set_has_rename_project_response();
  if (rename_project_response_ == NULL) rename_project_response_ = new ::protobuf::RenameProjectResponseMsg;
  return rename_project_response_;
}
inline ::protobuf::RenameProjectResponseMsg* GeneralMsg::release_rename_project_response() {
  clear_has_rename_project_response();
  ::protobuf::RenameProjectResponseMsg* temp = rename_project_response_;
  rename_project_response_ = NULL;
  return temp;
}
inline void GeneralMsg::set_allocated_rename_project_response(::protobuf::RenameProjectResponseMsg* rename_project_response) {
  delete rename_project_response_;
  rename_project_response_ = rename_project_response;
  if (rename_project_response) {
    set_has_rename_project_response();
  } else {
    clear_has_rename_project_response();
  }
}

// optional .protobuf.RemoveProjectRequestMsg remove_project_request = 15;
inline bool GeneralMsg::has_remove_project_request() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void GeneralMsg::set_has_remove_project_request() {
  _has_bits_[0] |= 0x00004000u;
}
inline void GeneralMsg::clear_has_remove_project_request() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void GeneralMsg::clear_remove_project_request() {
  if (remove_project_request_ != NULL) remove_project_request_->::protobuf::RemoveProjectRequestMsg::Clear();
  clear_has_remove_project_request();
}
inline const ::protobuf::RemoveProjectRequestMsg& GeneralMsg::remove_project_request() const {
  return remove_project_request_ != NULL ? *remove_project_request_ : *default_instance_->remove_project_request_;
}
inline ::protobuf::RemoveProjectRequestMsg* GeneralMsg::mutable_remove_project_request() {
  set_has_remove_project_request();
  if (remove_project_request_ == NULL) remove_project_request_ = new ::protobuf::RemoveProjectRequestMsg;
  return remove_project_request_;
}
inline ::protobuf::RemoveProjectRequestMsg* GeneralMsg::release_remove_project_request() {
  clear_has_remove_project_request();
  ::protobuf::RemoveProjectRequestMsg* temp = remove_project_request_;
  remove_project_request_ = NULL;
  return temp;
}
inline void GeneralMsg::set_allocated_remove_project_request(::protobuf::RemoveProjectRequestMsg* remove_project_request) {
  delete remove_project_request_;
  remove_project_request_ = remove_project_request;
  if (remove_project_request) {
    set_has_remove_project_request();
  } else {
    clear_has_remove_project_request();
  }
}

// optional .protobuf.RemoveProjectResponseMsg remove_project_response = 16;
inline bool GeneralMsg::has_remove_project_response() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void GeneralMsg::set_has_remove_project_response() {
  _has_bits_[0] |= 0x00008000u;
}
inline void GeneralMsg::clear_has_remove_project_response() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void GeneralMsg::clear_remove_project_response() {
  if (remove_project_response_ != NULL) remove_project_response_->::protobuf::RemoveProjectResponseMsg::Clear();
  clear_has_remove_project_response();
}
inline const ::protobuf::RemoveProjectResponseMsg& GeneralMsg::remove_project_response() const {
  return remove_project_response_ != NULL ? *remove_project_response_ : *default_instance_->remove_project_response_;
}
inline ::protobuf::RemoveProjectResponseMsg* GeneralMsg::mutable_remove_project_response() {
  set_has_remove_project_response();
  if (remove_project_response_ == NULL) remove_project_response_ = new ::protobuf::RemoveProjectResponseMsg;
  return remove_project_response_;
}
inline ::protobuf::RemoveProjectResponseMsg* GeneralMsg::release_remove_project_response() {
  clear_has_remove_project_response();
  ::protobuf::RemoveProjectResponseMsg* temp = remove_project_response_;
  remove_project_response_ = NULL;
  return temp;
}
inline void GeneralMsg::set_allocated_remove_project_response(::protobuf::RemoveProjectResponseMsg* remove_project_response) {
  delete remove_project_response_;
  remove_project_response_ = remove_project_response;
  if (remove_project_response) {
    set_has_remove_project_response();
  } else {
    clear_has_remove_project_response();
  }
}

// optional .protobuf.SetActiveProjectRequestMsg set_active_project_request = 17;
inline bool GeneralMsg::has_set_active_project_request() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void GeneralMsg::set_has_set_active_project_request() {
  _has_bits_[0] |= 0x00010000u;
}
inline void GeneralMsg::clear_has_set_active_project_request() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void GeneralMsg::clear_set_active_project_request() {
  if (set_active_project_request_ != NULL) set_active_project_request_->::protobuf::SetActiveProjectRequestMsg::Clear();
  clear_has_set_active_project_request();
}
inline const ::protobuf::SetActiveProjectRequestMsg& GeneralMsg::set_active_project_request() const {
  return set_active_project_request_ != NULL ? *set_active_project_request_ : *default_instance_->set_active_project_request_;
}
inline ::protobuf::SetActiveProjectRequestMsg* GeneralMsg::mutable_set_active_project_request() {
  set_has_set_active_project_request();
  if (set_active_project_request_ == NULL) set_active_project_request_ = new ::protobuf::SetActiveProjectRequestMsg;
  return set_active_project_request_;
}
inline ::protobuf::SetActiveProjectRequestMsg* GeneralMsg::release_set_active_project_request() {
  clear_has_set_active_project_request();
  ::protobuf::SetActiveProjectRequestMsg* temp = set_active_project_request_;
  set_active_project_request_ = NULL;
  return temp;
}
inline void GeneralMsg::set_allocated_set_active_project_request(::protobuf::SetActiveProjectRequestMsg* set_active_project_request) {
  delete set_active_project_request_;
  set_active_project_request_ = set_active_project_request;
  if (set_active_project_request) {
    set_has_set_active_project_request();
  } else {
    clear_has_set_active_project_request();
  }
}

// optional .protobuf.SetActiveProjectResponseMsg set_active_project_response = 18;
inline bool GeneralMsg::has_set_active_project_response() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void GeneralMsg::set_has_set_active_project_response() {
  _has_bits_[0] |= 0x00020000u;
}
inline void GeneralMsg::clear_has_set_active_project_response() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void GeneralMsg::clear_set_active_project_response() {
  if (set_active_project_response_ != NULL) set_active_project_response_->::protobuf::SetActiveProjectResponseMsg::Clear();
  clear_has_set_active_project_response();
}
inline const ::protobuf::SetActiveProjectResponseMsg& GeneralMsg::set_active_project_response() const {
  return set_active_project_response_ != NULL ? *set_active_project_response_ : *default_instance_->set_active_project_response_;
}
inline ::protobuf::SetActiveProjectResponseMsg* GeneralMsg::mutable_set_active_project_response() {
  set_has_set_active_project_response();
  if (set_active_project_response_ == NULL) set_active_project_response_ = new ::protobuf::SetActiveProjectResponseMsg;
  return set_active_project_response_;
}
inline ::protobuf::SetActiveProjectResponseMsg* GeneralMsg::release_set_active_project_response() {
  clear_has_set_active_project_response();
  ::protobuf::SetActiveProjectResponseMsg* temp = set_active_project_response_;
  set_active_project_response_ = NULL;
  return temp;
}
inline void GeneralMsg::set_allocated_set_active_project_response(::protobuf::SetActiveProjectResponseMsg* set_active_project_response) {
  delete set_active_project_response_;
  set_active_project_response_ = set_active_project_response;
  if (set_active_project_response) {
    set_has_set_active_project_response();
  } else {
    clear_has_set_active_project_response();
  }
}

// optional .protobuf.ActiveProjectMsg active_project = 19;
inline bool GeneralMsg::has_active_project() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void GeneralMsg::set_has_active_project() {
  _has_bits_[0] |= 0x00040000u;
}
inline void GeneralMsg::clear_has_active_project() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void GeneralMsg::clear_active_project() {
  if (active_project_ != NULL) active_project_->::protobuf::ActiveProjectMsg::Clear();
  clear_has_active_project();
}
inline const ::protobuf::ActiveProjectMsg& GeneralMsg::active_project() const {
  return active_project_ != NULL ? *active_project_ : *default_instance_->active_project_;
}
inline ::protobuf::ActiveProjectMsg* GeneralMsg::mutable_active_project() {
  set_has_active_project();
  if (active_project_ == NULL) active_project_ = new ::protobuf::ActiveProjectMsg;
  return active_project_;
}
inline ::protobuf::ActiveProjectMsg* GeneralMsg::release_active_project() {
  clear_has_active_project();
  ::protobuf::ActiveProjectMsg* temp = active_project_;
  active_project_ = NULL;
  return temp;
}
inline void GeneralMsg::set_allocated_active_project(::protobuf::ActiveProjectMsg* active_project) {
  delete active_project_;
  active_project_ = active_project;
  if (active_project) {
    set_has_active_project();
  } else {
    clear_has_active_project();
  }
}

// optional .protobuf.ProjectListMsg project_list = 20;
inline bool GeneralMsg::has_project_list() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void GeneralMsg::set_has_project_list() {
  _has_bits_[0] |= 0x00080000u;
}
inline void GeneralMsg::clear_has_project_list() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void GeneralMsg::clear_project_list() {
  if (project_list_ != NULL) project_list_->::protobuf::ProjectListMsg::Clear();
  clear_has_project_list();
}
inline const ::protobuf::ProjectListMsg& GeneralMsg::project_list() const {
  return project_list_ != NULL ? *project_list_ : *default_instance_->project_list_;
}
inline ::protobuf::ProjectListMsg* GeneralMsg::mutable_project_list() {
  set_has_project_list();
  if (project_list_ == NULL) project_list_ = new ::protobuf::ProjectListMsg;
  return project_list_;
}
inline ::protobuf::ProjectListMsg* GeneralMsg::release_project_list() {
  clear_has_project_list();
  ::protobuf::ProjectListMsg* temp = project_list_;
  project_list_ = NULL;
  return temp;
}
inline void GeneralMsg::set_allocated_project_list(::protobuf::ProjectListMsg* project_list) {
  delete project_list_;
  project_list_ = project_list;
  if (project_list) {
    set_has_project_list();
  } else {
    clear_has_project_list();
  }
}

// optional .protobuf.SetProjectMetadataRequestMsg set_project_metadata_request = 21;
inline bool GeneralMsg::has_set_project_metadata_request() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void GeneralMsg::set_has_set_project_metadata_request() {
  _has_bits_[0] |= 0x00100000u;
}
inline void GeneralMsg::clear_has_set_project_metadata_request() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void GeneralMsg::clear_set_project_metadata_request() {
  if (set_project_metadata_request_ != NULL) set_project_metadata_request_->::protobuf::SetProjectMetadataRequestMsg::Clear();
  clear_has_set_project_metadata_request();
}
inline const ::protobuf::SetProjectMetadataRequestMsg& GeneralMsg::set_project_metadata_request() const {
  return set_project_metadata_request_ != NULL ? *set_project_metadata_request_ : *default_instance_->set_project_metadata_request_;
}
inline ::protobuf::SetProjectMetadataRequestMsg* GeneralMsg::mutable_set_project_metadata_request() {
  set_has_set_project_metadata_request();
  if (set_project_metadata_request_ == NULL) set_project_metadata_request_ = new ::protobuf::SetProjectMetadataRequestMsg;
  return set_project_metadata_request_;
}
inline ::protobuf::SetProjectMetadataRequestMsg* GeneralMsg::release_set_project_metadata_request() {
  clear_has_set_project_metadata_request();
  ::protobuf::SetProjectMetadataRequestMsg* temp = set_project_metadata_request_;
  set_project_metadata_request_ = NULL;
  return temp;
}
inline void GeneralMsg::set_allocated_set_project_metadata_request(::protobuf::SetProjectMetadataRequestMsg* set_project_metadata_request) {
  delete set_project_metadata_request_;
  set_project_metadata_request_ = set_project_metadata_request;
  if (set_project_metadata_request) {
    set_has_set_project_metadata_request();
  } else {
    clear_has_set_project_metadata_request();
  }
}

// optional .protobuf.SetProjectMetadataResponseMsg set_project_metadata_response = 22;
inline bool GeneralMsg::has_set_project_metadata_response() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void GeneralMsg::set_has_set_project_metadata_response() {
  _has_bits_[0] |= 0x00200000u;
}
inline void GeneralMsg::clear_has_set_project_metadata_response() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void GeneralMsg::clear_set_project_metadata_response() {
  if (set_project_metadata_response_ != NULL) set_project_metadata_response_->::protobuf::SetProjectMetadataResponseMsg::Clear();
  clear_has_set_project_metadata_response();
}
inline const ::protobuf::SetProjectMetadataResponseMsg& GeneralMsg::set_project_metadata_response() const {
  return set_project_metadata_response_ != NULL ? *set_project_metadata_response_ : *default_instance_->set_project_metadata_response_;
}
inline ::protobuf::SetProjectMetadataResponseMsg* GeneralMsg::mutable_set_project_metadata_response() {
  set_has_set_project_metadata_response();
  if (set_project_metadata_response_ == NULL) set_project_metadata_response_ = new ::protobuf::SetProjectMetadataResponseMsg;
  return set_project_metadata_response_;
}
inline ::protobuf::SetProjectMetadataResponseMsg* GeneralMsg::release_set_project_metadata_response() {
  clear_has_set_project_metadata_response();
  ::protobuf::SetProjectMetadataResponseMsg* temp = set_project_metadata_response_;
  set_project_metadata_response_ = NULL;
  return temp;
}
inline void GeneralMsg::set_allocated_set_project_metadata_response(::protobuf::SetProjectMetadataResponseMsg* set_project_metadata_response) {
  delete set_project_metadata_response_;
  set_project_metadata_response_ = set_project_metadata_response;
  if (set_project_metadata_response) {
    set_has_set_project_metadata_response();
  } else {
    clear_has_set_project_metadata_response();
  }
}

// optional .protobuf.ProjectMetadataMsg project_metadata = 23;
inline bool GeneralMsg::has_project_metadata() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void GeneralMsg::set_has_project_metadata() {
  _has_bits_[0] |= 0x00400000u;
}
inline void GeneralMsg::clear_has_project_metadata() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void GeneralMsg::clear_project_metadata() {
  if (project_metadata_ != NULL) project_metadata_->::protobuf::ProjectMetadataMsg::Clear();
  clear_has_project_metadata();
}
inline const ::protobuf::ProjectMetadataMsg& GeneralMsg::project_metadata() const {
  return project_metadata_ != NULL ? *project_metadata_ : *default_instance_->project_metadata_;
}
inline ::protobuf::ProjectMetadataMsg* GeneralMsg::mutable_project_metadata() {
  set_has_project_metadata();
  if (project_metadata_ == NULL) project_metadata_ = new ::protobuf::ProjectMetadataMsg;
  return project_metadata_;
}
inline ::protobuf::ProjectMetadataMsg* GeneralMsg::release_project_metadata() {
  clear_has_project_metadata();
  ::protobuf::ProjectMetadataMsg* temp = project_metadata_;
  project_metadata_ = NULL;
  return temp;
}
inline void GeneralMsg::set_allocated_project_metadata(::protobuf::ProjectMetadataMsg* project_metadata) {
  delete project_metadata_;
  project_metadata_ = project_metadata;
  if (project_metadata) {
    set_has_project_metadata();
  } else {
    clear_has_project_metadata();
  }
}

// optional .protobuf.ExperimentDataCollectionStartRequestMsg experiment_data_collection_start_request = 24;
inline bool GeneralMsg::has_experiment_data_collection_start_request() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void GeneralMsg::set_has_experiment_data_collection_start_request() {
  _has_bits_[0] |= 0x00800000u;
}
inline void GeneralMsg::clear_has_experiment_data_collection_start_request() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void GeneralMsg::clear_experiment_data_collection_start_request() {
  if (experiment_data_collection_start_request_ != NULL) experiment_data_collection_start_request_->::protobuf::ExperimentDataCollectionStartRequestMsg::Clear();
  clear_has_experiment_data_collection_start_request();
}
inline const ::protobuf::ExperimentDataCollectionStartRequestMsg& GeneralMsg::experiment_data_collection_start_request() const {
  return experiment_data_collection_start_request_ != NULL ? *experiment_data_collection_start_request_ : *default_instance_->experiment_data_collection_start_request_;
}
inline ::protobuf::ExperimentDataCollectionStartRequestMsg* GeneralMsg::mutable_experiment_data_collection_start_request() {
  set_has_experiment_data_collection_start_request();
  if (experiment_data_collection_start_request_ == NULL) experiment_data_collection_start_request_ = new ::protobuf::ExperimentDataCollectionStartRequestMsg;
  return experiment_data_collection_start_request_;
}
inline ::protobuf::ExperimentDataCollectionStartRequestMsg* GeneralMsg::release_experiment_data_collection_start_request() {
  clear_has_experiment_data_collection_start_request();
  ::protobuf::ExperimentDataCollectionStartRequestMsg* temp = experiment_data_collection_start_request_;
  experiment_data_collection_start_request_ = NULL;
  return temp;
}
inline void GeneralMsg::set_allocated_experiment_data_collection_start_request(::protobuf::ExperimentDataCollectionStartRequestMsg* experiment_data_collection_start_request) {
  delete experiment_data_collection_start_request_;
  experiment_data_collection_start_request_ = experiment_data_collection_start_request;
  if (experiment_data_collection_start_request) {
    set_has_experiment_data_collection_start_request();
  } else {
    clear_has_experiment_data_collection_start_request();
  }
}

// optional .protobuf.ExperimentDataCollectionStartResponseMsg experiment_data_collection_start_response = 25;
inline bool GeneralMsg::has_experiment_data_collection_start_response() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void GeneralMsg::set_has_experiment_data_collection_start_response() {
  _has_bits_[0] |= 0x01000000u;
}
inline void GeneralMsg::clear_has_experiment_data_collection_start_response() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void GeneralMsg::clear_experiment_data_collection_start_response() {
  if (experiment_data_collection_start_response_ != NULL) experiment_data_collection_start_response_->::protobuf::ExperimentDataCollectionStartResponseMsg::Clear();
  clear_has_experiment_data_collection_start_response();
}
inline const ::protobuf::ExperimentDataCollectionStartResponseMsg& GeneralMsg::experiment_data_collection_start_response() const {
  return experiment_data_collection_start_response_ != NULL ? *experiment_data_collection_start_response_ : *default_instance_->experiment_data_collection_start_response_;
}
inline ::protobuf::ExperimentDataCollectionStartResponseMsg* GeneralMsg::mutable_experiment_data_collection_start_response() {
  set_has_experiment_data_collection_start_response();
  if (experiment_data_collection_start_response_ == NULL) experiment_data_collection_start_response_ = new ::protobuf::ExperimentDataCollectionStartResponseMsg;
  return experiment_data_collection_start_response_;
}
inline ::protobuf::ExperimentDataCollectionStartResponseMsg* GeneralMsg::release_experiment_data_collection_start_response() {
  clear_has_experiment_data_collection_start_response();
  ::protobuf::ExperimentDataCollectionStartResponseMsg* temp = experiment_data_collection_start_response_;
  experiment_data_collection_start_response_ = NULL;
  return temp;
}
inline void GeneralMsg::set_allocated_experiment_data_collection_start_response(::protobuf::ExperimentDataCollectionStartResponseMsg* experiment_data_collection_start_response) {
  delete experiment_data_collection_start_response_;
  experiment_data_collection_start_response_ = experiment_data_collection_start_response;
  if (experiment_data_collection_start_response) {
    set_has_experiment_data_collection_start_response();
  } else {
    clear_has_experiment_data_collection_start_response();
  }
}

// optional .protobuf.ExperimentDataCollectionStopRequestMsg experiment_data_collection_stop_request = 26;
inline bool GeneralMsg::has_experiment_data_collection_stop_request() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void GeneralMsg::set_has_experiment_data_collection_stop_request() {
  _has_bits_[0] |= 0x02000000u;
}
inline void GeneralMsg::clear_has_experiment_data_collection_stop_request() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void GeneralMsg::clear_experiment_data_collection_stop_request() {
  if (experiment_data_collection_stop_request_ != NULL) experiment_data_collection_stop_request_->::protobuf::ExperimentDataCollectionStopRequestMsg::Clear();
  clear_has_experiment_data_collection_stop_request();
}
inline const ::protobuf::ExperimentDataCollectionStopRequestMsg& GeneralMsg::experiment_data_collection_stop_request() const {
  return experiment_data_collection_stop_request_ != NULL ? *experiment_data_collection_stop_request_ : *default_instance_->experiment_data_collection_stop_request_;
}
inline ::protobuf::ExperimentDataCollectionStopRequestMsg* GeneralMsg::mutable_experiment_data_collection_stop_request() {
  set_has_experiment_data_collection_stop_request();
  if (experiment_data_collection_stop_request_ == NULL) experiment_data_collection_stop_request_ = new ::protobuf::ExperimentDataCollectionStopRequestMsg;
  return experiment_data_collection_stop_request_;
}
inline ::protobuf::ExperimentDataCollectionStopRequestMsg* GeneralMsg::release_experiment_data_collection_stop_request() {
  clear_has_experiment_data_collection_stop_request();
  ::protobuf::ExperimentDataCollectionStopRequestMsg* temp = experiment_data_collection_stop_request_;
  experiment_data_collection_stop_request_ = NULL;
  return temp;
}
inline void GeneralMsg::set_allocated_experiment_data_collection_stop_request(::protobuf::ExperimentDataCollectionStopRequestMsg* experiment_data_collection_stop_request) {
  delete experiment_data_collection_stop_request_;
  experiment_data_collection_stop_request_ = experiment_data_collection_stop_request;
  if (experiment_data_collection_stop_request) {
    set_has_experiment_data_collection_stop_request();
  } else {
    clear_has_experiment_data_collection_stop_request();
  }
}

// optional .protobuf.ExperimentDataCollectionStopResponseMsg experiment_data_collection_stop_response = 27;
inline bool GeneralMsg::has_experiment_data_collection_stop_response() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void GeneralMsg::set_has_experiment_data_collection_stop_response() {
  _has_bits_[0] |= 0x04000000u;
}
inline void GeneralMsg::clear_has_experiment_data_collection_stop_response() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void GeneralMsg::clear_experiment_data_collection_stop_response() {
  if (experiment_data_collection_stop_response_ != NULL) experiment_data_collection_stop_response_->::protobuf::ExperimentDataCollectionStopResponseMsg::Clear();
  clear_has_experiment_data_collection_stop_response();
}
inline const ::protobuf::ExperimentDataCollectionStopResponseMsg& GeneralMsg::experiment_data_collection_stop_response() const {
  return experiment_data_collection_stop_response_ != NULL ? *experiment_data_collection_stop_response_ : *default_instance_->experiment_data_collection_stop_response_;
}
inline ::protobuf::ExperimentDataCollectionStopResponseMsg* GeneralMsg::mutable_experiment_data_collection_stop_response() {
  set_has_experiment_data_collection_stop_response();
  if (experiment_data_collection_stop_response_ == NULL) experiment_data_collection_stop_response_ = new ::protobuf::ExperimentDataCollectionStopResponseMsg;
  return experiment_data_collection_stop_response_;
}
inline ::protobuf::ExperimentDataCollectionStopResponseMsg* GeneralMsg::release_experiment_data_collection_stop_response() {
  clear_has_experiment_data_collection_stop_response();
  ::protobuf::ExperimentDataCollectionStopResponseMsg* temp = experiment_data_collection_stop_response_;
  experiment_data_collection_stop_response_ = NULL;
  return temp;
}
inline void GeneralMsg::set_allocated_experiment_data_collection_stop_response(::protobuf::ExperimentDataCollectionStopResponseMsg* experiment_data_collection_stop_response) {
  delete experiment_data_collection_stop_response_;
  experiment_data_collection_stop_response_ = experiment_data_collection_stop_response;
  if (experiment_data_collection_stop_response) {
    set_has_experiment_data_collection_stop_response();
  } else {
    clear_has_experiment_data_collection_stop_response();
  }
}

// optional .protobuf.RenameExperimentRequestMsg rename_experiment_request = 28;
inline bool GeneralMsg::has_rename_experiment_request() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void GeneralMsg::set_has_rename_experiment_request() {
  _has_bits_[0] |= 0x08000000u;
}
inline void GeneralMsg::clear_has_rename_experiment_request() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void GeneralMsg::clear_rename_experiment_request() {
  if (rename_experiment_request_ != NULL) rename_experiment_request_->::protobuf::RenameExperimentRequestMsg::Clear();
  clear_has_rename_experiment_request();
}
inline const ::protobuf::RenameExperimentRequestMsg& GeneralMsg::rename_experiment_request() const {
  return rename_experiment_request_ != NULL ? *rename_experiment_request_ : *default_instance_->rename_experiment_request_;
}
inline ::protobuf::RenameExperimentRequestMsg* GeneralMsg::mutable_rename_experiment_request() {
  set_has_rename_experiment_request();
  if (rename_experiment_request_ == NULL) rename_experiment_request_ = new ::protobuf::RenameExperimentRequestMsg;
  return rename_experiment_request_;
}
inline ::protobuf::RenameExperimentRequestMsg* GeneralMsg::release_rename_experiment_request() {
  clear_has_rename_experiment_request();
  ::protobuf::RenameExperimentRequestMsg* temp = rename_experiment_request_;
  rename_experiment_request_ = NULL;
  return temp;
}
inline void GeneralMsg::set_allocated_rename_experiment_request(::protobuf::RenameExperimentRequestMsg* rename_experiment_request) {
  delete rename_experiment_request_;
  rename_experiment_request_ = rename_experiment_request;
  if (rename_experiment_request) {
    set_has_rename_experiment_request();
  } else {
    clear_has_rename_experiment_request();
  }
}

// optional .protobuf.RenameExperimentResponseMsg rename_experiment_response = 29;
inline bool GeneralMsg::has_rename_experiment_response() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void GeneralMsg::set_has_rename_experiment_response() {
  _has_bits_[0] |= 0x10000000u;
}
inline void GeneralMsg::clear_has_rename_experiment_response() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void GeneralMsg::clear_rename_experiment_response() {
  if (rename_experiment_response_ != NULL) rename_experiment_response_->::protobuf::RenameExperimentResponseMsg::Clear();
  clear_has_rename_experiment_response();
}
inline const ::protobuf::RenameExperimentResponseMsg& GeneralMsg::rename_experiment_response() const {
  return rename_experiment_response_ != NULL ? *rename_experiment_response_ : *default_instance_->rename_experiment_response_;
}
inline ::protobuf::RenameExperimentResponseMsg* GeneralMsg::mutable_rename_experiment_response() {
  set_has_rename_experiment_response();
  if (rename_experiment_response_ == NULL) rename_experiment_response_ = new ::protobuf::RenameExperimentResponseMsg;
  return rename_experiment_response_;
}
inline ::protobuf::RenameExperimentResponseMsg* GeneralMsg::release_rename_experiment_response() {
  clear_has_rename_experiment_response();
  ::protobuf::RenameExperimentResponseMsg* temp = rename_experiment_response_;
  rename_experiment_response_ = NULL;
  return temp;
}
inline void GeneralMsg::set_allocated_rename_experiment_response(::protobuf::RenameExperimentResponseMsg* rename_experiment_response) {
  delete rename_experiment_response_;
  rename_experiment_response_ = rename_experiment_response;
  if (rename_experiment_response) {
    set_has_rename_experiment_response();
  } else {
    clear_has_rename_experiment_response();
  }
}

// optional .protobuf.RemoveExperimentRequestMsg remove_experiment_request = 30;
inline bool GeneralMsg::has_remove_experiment_request() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void GeneralMsg::set_has_remove_experiment_request() {
  _has_bits_[0] |= 0x20000000u;
}
inline void GeneralMsg::clear_has_remove_experiment_request() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void GeneralMsg::clear_remove_experiment_request() {
  if (remove_experiment_request_ != NULL) remove_experiment_request_->::protobuf::RemoveExperimentRequestMsg::Clear();
  clear_has_remove_experiment_request();
}
inline const ::protobuf::RemoveExperimentRequestMsg& GeneralMsg::remove_experiment_request() const {
  return remove_experiment_request_ != NULL ? *remove_experiment_request_ : *default_instance_->remove_experiment_request_;
}
inline ::protobuf::RemoveExperimentRequestMsg* GeneralMsg::mutable_remove_experiment_request() {
  set_has_remove_experiment_request();
  if (remove_experiment_request_ == NULL) remove_experiment_request_ = new ::protobuf::RemoveExperimentRequestMsg;
  return remove_experiment_request_;
}
inline ::protobuf::RemoveExperimentRequestMsg* GeneralMsg::release_remove_experiment_request() {
  clear_has_remove_experiment_request();
  ::protobuf::RemoveExperimentRequestMsg* temp = remove_experiment_request_;
  remove_experiment_request_ = NULL;
  return temp;
}
inline void GeneralMsg::set_allocated_remove_experiment_request(::protobuf::RemoveExperimentRequestMsg* remove_experiment_request) {
  delete remove_experiment_request_;
  remove_experiment_request_ = remove_experiment_request;
  if (remove_experiment_request) {
    set_has_remove_experiment_request();
  } else {
    clear_has_remove_experiment_request();
  }
}

// optional .protobuf.RemoveExperimentResponseMsg remove_experiment_response = 31;
inline bool GeneralMsg::has_remove_experiment_response() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void GeneralMsg::set_has_remove_experiment_response() {
  _has_bits_[0] |= 0x40000000u;
}
inline void GeneralMsg::clear_has_remove_experiment_response() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void GeneralMsg::clear_remove_experiment_response() {
  if (remove_experiment_response_ != NULL) remove_experiment_response_->::protobuf::RemoveExperimentResponseMsg::Clear();
  clear_has_remove_experiment_response();
}
inline const ::protobuf::RemoveExperimentResponseMsg& GeneralMsg::remove_experiment_response() const {
  return remove_experiment_response_ != NULL ? *remove_experiment_response_ : *default_instance_->remove_experiment_response_;
}
inline ::protobuf::RemoveExperimentResponseMsg* GeneralMsg::mutable_remove_experiment_response() {
  set_has_remove_experiment_response();
  if (remove_experiment_response_ == NULL) remove_experiment_response_ = new ::protobuf::RemoveExperimentResponseMsg;
  return remove_experiment_response_;
}
inline ::protobuf::RemoveExperimentResponseMsg* GeneralMsg::release_remove_experiment_response() {
  clear_has_remove_experiment_response();
  ::protobuf::RemoveExperimentResponseMsg* temp = remove_experiment_response_;
  remove_experiment_response_ = NULL;
  return temp;
}
inline void GeneralMsg::set_allocated_remove_experiment_response(::protobuf::RemoveExperimentResponseMsg* remove_experiment_response) {
  delete remove_experiment_response_;
  remove_experiment_response_ = remove_experiment_response;
  if (remove_experiment_response) {
    set_has_remove_experiment_response();
  } else {
    clear_has_remove_experiment_response();
  }
}

// optional .protobuf.ExperimentPlaybackStartRequestMsg experiment_playback_start_request = 32;
inline bool GeneralMsg::has_experiment_playback_start_request() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void GeneralMsg::set_has_experiment_playback_start_request() {
  _has_bits_[0] |= 0x80000000u;
}
inline void GeneralMsg::clear_has_experiment_playback_start_request() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void GeneralMsg::clear_experiment_playback_start_request() {
  if (experiment_playback_start_request_ != NULL) experiment_playback_start_request_->::protobuf::ExperimentPlaybackStartRequestMsg::Clear();
  clear_has_experiment_playback_start_request();
}
inline const ::protobuf::ExperimentPlaybackStartRequestMsg& GeneralMsg::experiment_playback_start_request() const {
  return experiment_playback_start_request_ != NULL ? *experiment_playback_start_request_ : *default_instance_->experiment_playback_start_request_;
}
inline ::protobuf::ExperimentPlaybackStartRequestMsg* GeneralMsg::mutable_experiment_playback_start_request() {
  set_has_experiment_playback_start_request();
  if (experiment_playback_start_request_ == NULL) experiment_playback_start_request_ = new ::protobuf::ExperimentPlaybackStartRequestMsg;
  return experiment_playback_start_request_;
}
inline ::protobuf::ExperimentPlaybackStartRequestMsg* GeneralMsg::release_experiment_playback_start_request() {
  clear_has_experiment_playback_start_request();
  ::protobuf::ExperimentPlaybackStartRequestMsg* temp = experiment_playback_start_request_;
  experiment_playback_start_request_ = NULL;
  return temp;
}
inline void GeneralMsg::set_allocated_experiment_playback_start_request(::protobuf::ExperimentPlaybackStartRequestMsg* experiment_playback_start_request) {
  delete experiment_playback_start_request_;
  experiment_playback_start_request_ = experiment_playback_start_request;
  if (experiment_playback_start_request) {
    set_has_experiment_playback_start_request();
  } else {
    clear_has_experiment_playback_start_request();
  }
}

// optional .protobuf.ExperimentPlaybackStartResponseMsg experiment_playback_start_response = 33;
inline bool GeneralMsg::has_experiment_playback_start_response() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void GeneralMsg::set_has_experiment_playback_start_response() {
  _has_bits_[1] |= 0x00000001u;
}
inline void GeneralMsg::clear_has_experiment_playback_start_response() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void GeneralMsg::clear_experiment_playback_start_response() {
  if (experiment_playback_start_response_ != NULL) experiment_playback_start_response_->::protobuf::ExperimentPlaybackStartResponseMsg::Clear();
  clear_has_experiment_playback_start_response();
}
inline const ::protobuf::ExperimentPlaybackStartResponseMsg& GeneralMsg::experiment_playback_start_response() const {
  return experiment_playback_start_response_ != NULL ? *experiment_playback_start_response_ : *default_instance_->experiment_playback_start_response_;
}
inline ::protobuf::ExperimentPlaybackStartResponseMsg* GeneralMsg::mutable_experiment_playback_start_response() {
  set_has_experiment_playback_start_response();
  if (experiment_playback_start_response_ == NULL) experiment_playback_start_response_ = new ::protobuf::ExperimentPlaybackStartResponseMsg;
  return experiment_playback_start_response_;
}
inline ::protobuf::ExperimentPlaybackStartResponseMsg* GeneralMsg::release_experiment_playback_start_response() {
  clear_has_experiment_playback_start_response();
  ::protobuf::ExperimentPlaybackStartResponseMsg* temp = experiment_playback_start_response_;
  experiment_playback_start_response_ = NULL;
  return temp;
}
inline void GeneralMsg::set_allocated_experiment_playback_start_response(::protobuf::ExperimentPlaybackStartResponseMsg* experiment_playback_start_response) {
  delete experiment_playback_start_response_;
  experiment_playback_start_response_ = experiment_playback_start_response;
  if (experiment_playback_start_response) {
    set_has_experiment_playback_start_response();
  } else {
    clear_has_experiment_playback_start_response();
  }
}

// optional .protobuf.ExperimentPlaybackStopRequestMsg experiment_playback_stop_request = 34;
inline bool GeneralMsg::has_experiment_playback_stop_request() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void GeneralMsg::set_has_experiment_playback_stop_request() {
  _has_bits_[1] |= 0x00000002u;
}
inline void GeneralMsg::clear_has_experiment_playback_stop_request() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void GeneralMsg::clear_experiment_playback_stop_request() {
  if (experiment_playback_stop_request_ != NULL) experiment_playback_stop_request_->::protobuf::ExperimentPlaybackStopRequestMsg::Clear();
  clear_has_experiment_playback_stop_request();
}
inline const ::protobuf::ExperimentPlaybackStopRequestMsg& GeneralMsg::experiment_playback_stop_request() const {
  return experiment_playback_stop_request_ != NULL ? *experiment_playback_stop_request_ : *default_instance_->experiment_playback_stop_request_;
}
inline ::protobuf::ExperimentPlaybackStopRequestMsg* GeneralMsg::mutable_experiment_playback_stop_request() {
  set_has_experiment_playback_stop_request();
  if (experiment_playback_stop_request_ == NULL) experiment_playback_stop_request_ = new ::protobuf::ExperimentPlaybackStopRequestMsg;
  return experiment_playback_stop_request_;
}
inline ::protobuf::ExperimentPlaybackStopRequestMsg* GeneralMsg::release_experiment_playback_stop_request() {
  clear_has_experiment_playback_stop_request();
  ::protobuf::ExperimentPlaybackStopRequestMsg* temp = experiment_playback_stop_request_;
  experiment_playback_stop_request_ = NULL;
  return temp;
}
inline void GeneralMsg::set_allocated_experiment_playback_stop_request(::protobuf::ExperimentPlaybackStopRequestMsg* experiment_playback_stop_request) {
  delete experiment_playback_stop_request_;
  experiment_playback_stop_request_ = experiment_playback_stop_request;
  if (experiment_playback_stop_request) {
    set_has_experiment_playback_stop_request();
  } else {
    clear_has_experiment_playback_stop_request();
  }
}

// optional .protobuf.ExperimentPlaybackStopResponseMsg experiment_playback_stop_response = 35;
inline bool GeneralMsg::has_experiment_playback_stop_response() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void GeneralMsg::set_has_experiment_playback_stop_response() {
  _has_bits_[1] |= 0x00000004u;
}
inline void GeneralMsg::clear_has_experiment_playback_stop_response() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void GeneralMsg::clear_experiment_playback_stop_response() {
  if (experiment_playback_stop_response_ != NULL) experiment_playback_stop_response_->::protobuf::ExperimentPlaybackStopResponseMsg::Clear();
  clear_has_experiment_playback_stop_response();
}
inline const ::protobuf::ExperimentPlaybackStopResponseMsg& GeneralMsg::experiment_playback_stop_response() const {
  return experiment_playback_stop_response_ != NULL ? *experiment_playback_stop_response_ : *default_instance_->experiment_playback_stop_response_;
}
inline ::protobuf::ExperimentPlaybackStopResponseMsg* GeneralMsg::mutable_experiment_playback_stop_response() {
  set_has_experiment_playback_stop_response();
  if (experiment_playback_stop_response_ == NULL) experiment_playback_stop_response_ = new ::protobuf::ExperimentPlaybackStopResponseMsg;
  return experiment_playback_stop_response_;
}
inline ::protobuf::ExperimentPlaybackStopResponseMsg* GeneralMsg::release_experiment_playback_stop_response() {
  clear_has_experiment_playback_stop_response();
  ::protobuf::ExperimentPlaybackStopResponseMsg* temp = experiment_playback_stop_response_;
  experiment_playback_stop_response_ = NULL;
  return temp;
}
inline void GeneralMsg::set_allocated_experiment_playback_stop_response(::protobuf::ExperimentPlaybackStopResponseMsg* experiment_playback_stop_response) {
  delete experiment_playback_stop_response_;
  experiment_playback_stop_response_ = experiment_playback_stop_response;
  if (experiment_playback_stop_response) {
    set_has_experiment_playback_stop_response();
  } else {
    clear_has_experiment_playback_stop_response();
  }
}

// optional .protobuf.ExperimentListMsg experiment_list = 36;
inline bool GeneralMsg::has_experiment_list() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void GeneralMsg::set_has_experiment_list() {
  _has_bits_[1] |= 0x00000008u;
}
inline void GeneralMsg::clear_has_experiment_list() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void GeneralMsg::clear_experiment_list() {
  if (experiment_list_ != NULL) experiment_list_->::protobuf::ExperimentListMsg::Clear();
  clear_has_experiment_list();
}
inline const ::protobuf::ExperimentListMsg& GeneralMsg::experiment_list() const {
  return experiment_list_ != NULL ? *experiment_list_ : *default_instance_->experiment_list_;
}
inline ::protobuf::ExperimentListMsg* GeneralMsg::mutable_experiment_list() {
  set_has_experiment_list();
  if (experiment_list_ == NULL) experiment_list_ = new ::protobuf::ExperimentListMsg;
  return experiment_list_;
}
inline ::protobuf::ExperimentListMsg* GeneralMsg::release_experiment_list() {
  clear_has_experiment_list();
  ::protobuf::ExperimentListMsg* temp = experiment_list_;
  experiment_list_ = NULL;
  return temp;
}
inline void GeneralMsg::set_allocated_experiment_list(::protobuf::ExperimentListMsg* experiment_list) {
  delete experiment_list_;
  experiment_list_ = experiment_list;
  if (experiment_list) {
    set_has_experiment_list();
  } else {
    clear_has_experiment_list();
  }
}

// optional .protobuf.SetExperimentMetadataRequestMsg set_experiment_metadata_request = 37;
inline bool GeneralMsg::has_set_experiment_metadata_request() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void GeneralMsg::set_has_set_experiment_metadata_request() {
  _has_bits_[1] |= 0x00000010u;
}
inline void GeneralMsg::clear_has_set_experiment_metadata_request() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void GeneralMsg::clear_set_experiment_metadata_request() {
  if (set_experiment_metadata_request_ != NULL) set_experiment_metadata_request_->::protobuf::SetExperimentMetadataRequestMsg::Clear();
  clear_has_set_experiment_metadata_request();
}
inline const ::protobuf::SetExperimentMetadataRequestMsg& GeneralMsg::set_experiment_metadata_request() const {
  return set_experiment_metadata_request_ != NULL ? *set_experiment_metadata_request_ : *default_instance_->set_experiment_metadata_request_;
}
inline ::protobuf::SetExperimentMetadataRequestMsg* GeneralMsg::mutable_set_experiment_metadata_request() {
  set_has_set_experiment_metadata_request();
  if (set_experiment_metadata_request_ == NULL) set_experiment_metadata_request_ = new ::protobuf::SetExperimentMetadataRequestMsg;
  return set_experiment_metadata_request_;
}
inline ::protobuf::SetExperimentMetadataRequestMsg* GeneralMsg::release_set_experiment_metadata_request() {
  clear_has_set_experiment_metadata_request();
  ::protobuf::SetExperimentMetadataRequestMsg* temp = set_experiment_metadata_request_;
  set_experiment_metadata_request_ = NULL;
  return temp;
}
inline void GeneralMsg::set_allocated_set_experiment_metadata_request(::protobuf::SetExperimentMetadataRequestMsg* set_experiment_metadata_request) {
  delete set_experiment_metadata_request_;
  set_experiment_metadata_request_ = set_experiment_metadata_request;
  if (set_experiment_metadata_request) {
    set_has_set_experiment_metadata_request();
  } else {
    clear_has_set_experiment_metadata_request();
  }
}

// optional .protobuf.SetExperimentMetadataResponseMsg set_experiment_metadata_response = 38;
inline bool GeneralMsg::has_set_experiment_metadata_response() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void GeneralMsg::set_has_set_experiment_metadata_response() {
  _has_bits_[1] |= 0x00000020u;
}
inline void GeneralMsg::clear_has_set_experiment_metadata_response() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void GeneralMsg::clear_set_experiment_metadata_response() {
  if (set_experiment_metadata_response_ != NULL) set_experiment_metadata_response_->::protobuf::SetExperimentMetadataResponseMsg::Clear();
  clear_has_set_experiment_metadata_response();
}
inline const ::protobuf::SetExperimentMetadataResponseMsg& GeneralMsg::set_experiment_metadata_response() const {
  return set_experiment_metadata_response_ != NULL ? *set_experiment_metadata_response_ : *default_instance_->set_experiment_metadata_response_;
}
inline ::protobuf::SetExperimentMetadataResponseMsg* GeneralMsg::mutable_set_experiment_metadata_response() {
  set_has_set_experiment_metadata_response();
  if (set_experiment_metadata_response_ == NULL) set_experiment_metadata_response_ = new ::protobuf::SetExperimentMetadataResponseMsg;
  return set_experiment_metadata_response_;
}
inline ::protobuf::SetExperimentMetadataResponseMsg* GeneralMsg::release_set_experiment_metadata_response() {
  clear_has_set_experiment_metadata_response();
  ::protobuf::SetExperimentMetadataResponseMsg* temp = set_experiment_metadata_response_;
  set_experiment_metadata_response_ = NULL;
  return temp;
}
inline void GeneralMsg::set_allocated_set_experiment_metadata_response(::protobuf::SetExperimentMetadataResponseMsg* set_experiment_metadata_response) {
  delete set_experiment_metadata_response_;
  set_experiment_metadata_response_ = set_experiment_metadata_response;
  if (set_experiment_metadata_response) {
    set_has_set_experiment_metadata_response();
  } else {
    clear_has_set_experiment_metadata_response();
  }
}

// optional .protobuf.ExperimentMetadataMsg experiment_metadata = 39;
inline bool GeneralMsg::has_experiment_metadata() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void GeneralMsg::set_has_experiment_metadata() {
  _has_bits_[1] |= 0x00000040u;
}
inline void GeneralMsg::clear_has_experiment_metadata() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void GeneralMsg::clear_experiment_metadata() {
  if (experiment_metadata_ != NULL) experiment_metadata_->::protobuf::ExperimentMetadataMsg::Clear();
  clear_has_experiment_metadata();
}
inline const ::protobuf::ExperimentMetadataMsg& GeneralMsg::experiment_metadata() const {
  return experiment_metadata_ != NULL ? *experiment_metadata_ : *default_instance_->experiment_metadata_;
}
inline ::protobuf::ExperimentMetadataMsg* GeneralMsg::mutable_experiment_metadata() {
  set_has_experiment_metadata();
  if (experiment_metadata_ == NULL) experiment_metadata_ = new ::protobuf::ExperimentMetadataMsg;
  return experiment_metadata_;
}
inline ::protobuf::ExperimentMetadataMsg* GeneralMsg::release_experiment_metadata() {
  clear_has_experiment_metadata();
  ::protobuf::ExperimentMetadataMsg* temp = experiment_metadata_;
  experiment_metadata_ = NULL;
  return temp;
}
inline void GeneralMsg::set_allocated_experiment_metadata(::protobuf::ExperimentMetadataMsg* experiment_metadata) {
  delete experiment_metadata_;
  experiment_metadata_ = experiment_metadata;
  if (experiment_metadata) {
    set_has_experiment_metadata();
  } else {
    clear_has_experiment_metadata();
  }
}

// optional .protobuf.DebugMsg debug_message = 40;
inline bool GeneralMsg::has_debug_message() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void GeneralMsg::set_has_debug_message() {
  _has_bits_[1] |= 0x00000080u;
}
inline void GeneralMsg::clear_has_debug_message() {
  _has_bits_[1] &= ~0x00000080u;
}
inline void GeneralMsg::clear_debug_message() {
  if (debug_message_ != NULL) debug_message_->::protobuf::DebugMsg::Clear();
  clear_has_debug_message();
}
inline const ::protobuf::DebugMsg& GeneralMsg::debug_message() const {
  return debug_message_ != NULL ? *debug_message_ : *default_instance_->debug_message_;
}
inline ::protobuf::DebugMsg* GeneralMsg::mutable_debug_message() {
  set_has_debug_message();
  if (debug_message_ == NULL) debug_message_ = new ::protobuf::DebugMsg;
  return debug_message_;
}
inline ::protobuf::DebugMsg* GeneralMsg::release_debug_message() {
  clear_has_debug_message();
  ::protobuf::DebugMsg* temp = debug_message_;
  debug_message_ = NULL;
  return temp;
}
inline void GeneralMsg::set_allocated_debug_message(::protobuf::DebugMsg* debug_message) {
  delete debug_message_;
  debug_message_ = debug_message;
  if (debug_message) {
    set_has_debug_message();
  } else {
    clear_has_debug_message();
  }
}

// optional .protobuf.ErrorMsg error_message = 41;
inline bool GeneralMsg::has_error_message() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void GeneralMsg::set_has_error_message() {
  _has_bits_[1] |= 0x00000100u;
}
inline void GeneralMsg::clear_has_error_message() {
  _has_bits_[1] &= ~0x00000100u;
}
inline void GeneralMsg::clear_error_message() {
  if (error_message_ != NULL) error_message_->::protobuf::ErrorMsg::Clear();
  clear_has_error_message();
}
inline const ::protobuf::ErrorMsg& GeneralMsg::error_message() const {
  return error_message_ != NULL ? *error_message_ : *default_instance_->error_message_;
}
inline ::protobuf::ErrorMsg* GeneralMsg::mutable_error_message() {
  set_has_error_message();
  if (error_message_ == NULL) error_message_ = new ::protobuf::ErrorMsg;
  return error_message_;
}
inline ::protobuf::ErrorMsg* GeneralMsg::release_error_message() {
  clear_has_error_message();
  ::protobuf::ErrorMsg* temp = error_message_;
  error_message_ = NULL;
  return temp;
}
inline void GeneralMsg::set_allocated_error_message(::protobuf::ErrorMsg* error_message) {
  delete error_message_;
  error_message_ = error_message;
  if (error_message) {
    set_has_error_message();
  } else {
    clear_has_error_message();
  }
}

// optional .protobuf.ActiveExperimentMsg active_experiment = 42;
inline bool GeneralMsg::has_active_experiment() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
inline void GeneralMsg::set_has_active_experiment() {
  _has_bits_[1] |= 0x00000200u;
}
inline void GeneralMsg::clear_has_active_experiment() {
  _has_bits_[1] &= ~0x00000200u;
}
inline void GeneralMsg::clear_active_experiment() {
  if (active_experiment_ != NULL) active_experiment_->::protobuf::ActiveExperimentMsg::Clear();
  clear_has_active_experiment();
}
inline const ::protobuf::ActiveExperimentMsg& GeneralMsg::active_experiment() const {
  return active_experiment_ != NULL ? *active_experiment_ : *default_instance_->active_experiment_;
}
inline ::protobuf::ActiveExperimentMsg* GeneralMsg::mutable_active_experiment() {
  set_has_active_experiment();
  if (active_experiment_ == NULL) active_experiment_ = new ::protobuf::ActiveExperimentMsg;
  return active_experiment_;
}
inline ::protobuf::ActiveExperimentMsg* GeneralMsg::release_active_experiment() {
  clear_has_active_experiment();
  ::protobuf::ActiveExperimentMsg* temp = active_experiment_;
  active_experiment_ = NULL;
  return temp;
}
inline void GeneralMsg::set_allocated_active_experiment(::protobuf::ActiveExperimentMsg* active_experiment) {
  delete active_experiment_;
  active_experiment_ = active_experiment;
  if (active_experiment) {
    set_has_active_experiment();
  } else {
    clear_has_active_experiment();
  }
}

// -------------------------------------------------------------------

// DataMsg

// required double time = 1;
inline bool DataMsg::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DataMsg::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DataMsg::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DataMsg::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline double DataMsg::time() const {
  return time_;
}
inline void DataMsg::set_time(double value) {
  set_has_time();
  time_ = value;
}

// required int32 type_id = 2;
inline bool DataMsg::has_type_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DataMsg::set_has_type_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DataMsg::clear_has_type_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DataMsg::clear_type_id() {
  type_id_ = 0;
  clear_has_type_id();
}
inline ::google::protobuf::int32 DataMsg::type_id() const {
  return type_id_;
}
inline void DataMsg::set_type_id(::google::protobuf::int32 value) {
  set_has_type_id();
  type_id_ = value;
}

// repeated float data = 3;
inline int DataMsg::data_size() const {
  return data_.size();
}
inline void DataMsg::clear_data() {
  data_.Clear();
}
inline float DataMsg::data(int index) const {
  return data_.Get(index);
}
inline void DataMsg::set_data(int index, float value) {
  data_.Set(index, value);
}
inline void DataMsg::add_data(float value) {
  data_.Add(value);
}
inline const ::google::protobuf::RepeatedField< float >&
DataMsg::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedField< float >*
DataMsg::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// DynamicEventStruct

// required double time = 1;
inline bool DynamicEventStruct::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DynamicEventStruct::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DynamicEventStruct::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DynamicEventStruct::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline double DynamicEventStruct::time() const {
  return time_;
}
inline void DynamicEventStruct::set_time(double value) {
  set_has_time();
  time_ = value;
}

// required string message = 2;
inline bool DynamicEventStruct::has_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DynamicEventStruct::set_has_message() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DynamicEventStruct::clear_has_message() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DynamicEventStruct::clear_message() {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& DynamicEventStruct::message() const {
  return *message_;
}
inline void DynamicEventStruct::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void DynamicEventStruct::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void DynamicEventStruct::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DynamicEventStruct::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  return message_;
}
inline ::std::string* DynamicEventStruct::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DynamicEventStruct::set_allocated_message(::std::string* message) {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    delete message_;
  }
  if (message) {
    set_has_message();
    message_ = message;
  } else {
    clear_has_message();
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// SetDynamicEventRequestMsg

// required .protobuf.DynamicEventStruct dynamic_event = 1;
inline bool SetDynamicEventRequestMsg::has_dynamic_event() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetDynamicEventRequestMsg::set_has_dynamic_event() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetDynamicEventRequestMsg::clear_has_dynamic_event() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetDynamicEventRequestMsg::clear_dynamic_event() {
  if (dynamic_event_ != NULL) dynamic_event_->::protobuf::DynamicEventStruct::Clear();
  clear_has_dynamic_event();
}
inline const ::protobuf::DynamicEventStruct& SetDynamicEventRequestMsg::dynamic_event() const {
  return dynamic_event_ != NULL ? *dynamic_event_ : *default_instance_->dynamic_event_;
}
inline ::protobuf::DynamicEventStruct* SetDynamicEventRequestMsg::mutable_dynamic_event() {
  set_has_dynamic_event();
  if (dynamic_event_ == NULL) dynamic_event_ = new ::protobuf::DynamicEventStruct;
  return dynamic_event_;
}
inline ::protobuf::DynamicEventStruct* SetDynamicEventRequestMsg::release_dynamic_event() {
  clear_has_dynamic_event();
  ::protobuf::DynamicEventStruct* temp = dynamic_event_;
  dynamic_event_ = NULL;
  return temp;
}
inline void SetDynamicEventRequestMsg::set_allocated_dynamic_event(::protobuf::DynamicEventStruct* dynamic_event) {
  delete dynamic_event_;
  dynamic_event_ = dynamic_event;
  if (dynamic_event) {
    set_has_dynamic_event();
  } else {
    clear_has_dynamic_event();
  }
}

// -------------------------------------------------------------------

// SetDynamicEventResponseMsg

// required .protobuf.SetDynamicEventResponseMsg.ResponseType response_type = 1;
inline bool SetDynamicEventResponseMsg::has_response_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetDynamicEventResponseMsg::set_has_response_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetDynamicEventResponseMsg::clear_has_response_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetDynamicEventResponseMsg::clear_response_type() {
  response_type_ = 1;
  clear_has_response_type();
}
inline ::protobuf::SetDynamicEventResponseMsg_ResponseType SetDynamicEventResponseMsg::response_type() const {
  return static_cast< ::protobuf::SetDynamicEventResponseMsg_ResponseType >(response_type_);
}
inline void SetDynamicEventResponseMsg::set_response_type(::protobuf::SetDynamicEventResponseMsg_ResponseType value) {
  assert(::protobuf::SetDynamicEventResponseMsg_ResponseType_IsValid(value));
  set_has_response_type();
  response_type_ = value;
}

// -------------------------------------------------------------------

// DynamicEventMsg

// required .protobuf.DynamicEventStruct dynamic_event = 1;
inline bool DynamicEventMsg::has_dynamic_event() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DynamicEventMsg::set_has_dynamic_event() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DynamicEventMsg::clear_has_dynamic_event() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DynamicEventMsg::clear_dynamic_event() {
  if (dynamic_event_ != NULL) dynamic_event_->::protobuf::DynamicEventStruct::Clear();
  clear_has_dynamic_event();
}
inline const ::protobuf::DynamicEventStruct& DynamicEventMsg::dynamic_event() const {
  return dynamic_event_ != NULL ? *dynamic_event_ : *default_instance_->dynamic_event_;
}
inline ::protobuf::DynamicEventStruct* DynamicEventMsg::mutable_dynamic_event() {
  set_has_dynamic_event();
  if (dynamic_event_ == NULL) dynamic_event_ = new ::protobuf::DynamicEventStruct;
  return dynamic_event_;
}
inline ::protobuf::DynamicEventStruct* DynamicEventMsg::release_dynamic_event() {
  clear_has_dynamic_event();
  ::protobuf::DynamicEventStruct* temp = dynamic_event_;
  dynamic_event_ = NULL;
  return temp;
}
inline void DynamicEventMsg::set_allocated_dynamic_event(::protobuf::DynamicEventStruct* dynamic_event) {
  delete dynamic_event_;
  dynamic_event_ = dynamic_event;
  if (dynamic_event) {
    set_has_dynamic_event();
  } else {
    clear_has_dynamic_event();
  }
}

// -------------------------------------------------------------------

// AttributeConfiguration

// required uint32 index = 1;
inline bool AttributeConfiguration::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AttributeConfiguration::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AttributeConfiguration::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AttributeConfiguration::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 AttributeConfiguration::index() const {
  return index_;
}
inline void AttributeConfiguration::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
}

// required string name = 2;
inline bool AttributeConfiguration::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AttributeConfiguration::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AttributeConfiguration::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AttributeConfiguration::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& AttributeConfiguration::name() const {
  return *name_;
}
inline void AttributeConfiguration::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void AttributeConfiguration::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void AttributeConfiguration::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AttributeConfiguration::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* AttributeConfiguration::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AttributeConfiguration::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// SensorConfiguration

// required int32 sensor_id = 1;
inline bool SensorConfiguration::has_sensor_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SensorConfiguration::set_has_sensor_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SensorConfiguration::clear_has_sensor_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SensorConfiguration::clear_sensor_id() {
  sensor_id_ = 0;
  clear_has_sensor_id();
}
inline ::google::protobuf::int32 SensorConfiguration::sensor_id() const {
  return sensor_id_;
}
inline void SensorConfiguration::set_sensor_id(::google::protobuf::int32 value) {
  set_has_sensor_id();
  sensor_id_ = value;
}

// required string name = 2;
inline bool SensorConfiguration::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SensorConfiguration::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SensorConfiguration::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SensorConfiguration::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& SensorConfiguration::name() const {
  return *name_;
}
inline void SensorConfiguration::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void SensorConfiguration::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void SensorConfiguration::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SensorConfiguration::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* SensorConfiguration::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SensorConfiguration::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 max_attributes = 3;
inline bool SensorConfiguration::has_max_attributes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SensorConfiguration::set_has_max_attributes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SensorConfiguration::clear_has_max_attributes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SensorConfiguration::clear_max_attributes() {
  max_attributes_ = 0u;
  clear_has_max_attributes();
}
inline ::google::protobuf::uint32 SensorConfiguration::max_attributes() const {
  return max_attributes_;
}
inline void SensorConfiguration::set_max_attributes(::google::protobuf::uint32 value) {
  set_has_max_attributes();
  max_attributes_ = value;
}

// repeated .protobuf.AttributeConfiguration attribute_configurations = 4;
inline int SensorConfiguration::attribute_configurations_size() const {
  return attribute_configurations_.size();
}
inline void SensorConfiguration::clear_attribute_configurations() {
  attribute_configurations_.Clear();
}
inline const ::protobuf::AttributeConfiguration& SensorConfiguration::attribute_configurations(int index) const {
  return attribute_configurations_.Get(index);
}
inline ::protobuf::AttributeConfiguration* SensorConfiguration::mutable_attribute_configurations(int index) {
  return attribute_configurations_.Mutable(index);
}
inline ::protobuf::AttributeConfiguration* SensorConfiguration::add_attribute_configurations() {
  return attribute_configurations_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protobuf::AttributeConfiguration >&
SensorConfiguration::attribute_configurations() const {
  return attribute_configurations_;
}
inline ::google::protobuf::RepeatedPtrField< ::protobuf::AttributeConfiguration >*
SensorConfiguration::mutable_attribute_configurations() {
  return &attribute_configurations_;
}

// -------------------------------------------------------------------

// ConfigurationMsg

// repeated .protobuf.SensorConfiguration sensor_configurations = 1;
inline int ConfigurationMsg::sensor_configurations_size() const {
  return sensor_configurations_.size();
}
inline void ConfigurationMsg::clear_sensor_configurations() {
  sensor_configurations_.Clear();
}
inline const ::protobuf::SensorConfiguration& ConfigurationMsg::sensor_configurations(int index) const {
  return sensor_configurations_.Get(index);
}
inline ::protobuf::SensorConfiguration* ConfigurationMsg::mutable_sensor_configurations(int index) {
  return sensor_configurations_.Mutable(index);
}
inline ::protobuf::SensorConfiguration* ConfigurationMsg::add_sensor_configurations() {
  return sensor_configurations_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protobuf::SensorConfiguration >&
ConfigurationMsg::sensor_configurations() const {
  return sensor_configurations_;
}
inline ::google::protobuf::RepeatedPtrField< ::protobuf::SensorConfiguration >*
ConfigurationMsg::mutable_sensor_configurations() {
  return &sensor_configurations_;
}

// -------------------------------------------------------------------

// SettingsRequestMsg

// required uint32 min_time = 1;
inline bool SettingsRequestMsg::has_min_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SettingsRequestMsg::set_has_min_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SettingsRequestMsg::clear_has_min_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SettingsRequestMsg::clear_min_time() {
  min_time_ = 0u;
  clear_has_min_time();
}
inline ::google::protobuf::uint32 SettingsRequestMsg::min_time() const {
  return min_time_;
}
inline void SettingsRequestMsg::set_min_time(::google::protobuf::uint32 value) {
  set_has_min_time();
  min_time_ = value;
}

// repeated int32 sensor_ids = 2;
inline int SettingsRequestMsg::sensor_ids_size() const {
  return sensor_ids_.size();
}
inline void SettingsRequestMsg::clear_sensor_ids() {
  sensor_ids_.Clear();
}
inline ::google::protobuf::int32 SettingsRequestMsg::sensor_ids(int index) const {
  return sensor_ids_.Get(index);
}
inline void SettingsRequestMsg::set_sensor_ids(int index, ::google::protobuf::int32 value) {
  sensor_ids_.Set(index, value);
}
inline void SettingsRequestMsg::add_sensor_ids(::google::protobuf::int32 value) {
  sensor_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SettingsRequestMsg::sensor_ids() const {
  return sensor_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SettingsRequestMsg::mutable_sensor_ids() {
  return &sensor_ids_;
}

// -------------------------------------------------------------------

// SettingsResponseMsg

// required .protobuf.SettingsResponseMsg.ResponseType response_type = 1;
inline bool SettingsResponseMsg::has_response_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SettingsResponseMsg::set_has_response_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SettingsResponseMsg::clear_has_response_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SettingsResponseMsg::clear_response_type() {
  response_type_ = 1;
  clear_has_response_type();
}
inline ::protobuf::SettingsResponseMsg_ResponseType SettingsResponseMsg::response_type() const {
  return static_cast< ::protobuf::SettingsResponseMsg_ResponseType >(response_type_);
}
inline void SettingsResponseMsg::set_response_type(::protobuf::SettingsResponseMsg_ResponseType value) {
  assert(::protobuf::SettingsResponseMsg_ResponseType_IsValid(value));
  set_has_response_type();
  response_type_ = value;
}

// -------------------------------------------------------------------

// SensorStatusMsg_Attribute

// required uint32 index = 1;
inline bool SensorStatusMsg_Attribute::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SensorStatusMsg_Attribute::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SensorStatusMsg_Attribute::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SensorStatusMsg_Attribute::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 SensorStatusMsg_Attribute::index() const {
  return index_;
}
inline void SensorStatusMsg_Attribute::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
}

// required .protobuf.SensorStatusMsg.AttributeStatusType status = 2;
inline bool SensorStatusMsg_Attribute::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SensorStatusMsg_Attribute::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SensorStatusMsg_Attribute::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SensorStatusMsg_Attribute::clear_status() {
  status_ = 1;
  clear_has_status();
}
inline ::protobuf::SensorStatusMsg_AttributeStatusType SensorStatusMsg_Attribute::status() const {
  return static_cast< ::protobuf::SensorStatusMsg_AttributeStatusType >(status_);
}
inline void SensorStatusMsg_Attribute::set_status(::protobuf::SensorStatusMsg_AttributeStatusType value) {
  assert(::protobuf::SensorStatusMsg_AttributeStatusType_IsValid(value));
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// SensorStatusMsg_Sensor

// required int32 sensor_id = 1;
inline bool SensorStatusMsg_Sensor::has_sensor_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SensorStatusMsg_Sensor::set_has_sensor_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SensorStatusMsg_Sensor::clear_has_sensor_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SensorStatusMsg_Sensor::clear_sensor_id() {
  sensor_id_ = 0;
  clear_has_sensor_id();
}
inline ::google::protobuf::int32 SensorStatusMsg_Sensor::sensor_id() const {
  return sensor_id_;
}
inline void SensorStatusMsg_Sensor::set_sensor_id(::google::protobuf::int32 value) {
  set_has_sensor_id();
  sensor_id_ = value;
}

// required .protobuf.SensorStatusMsg.SensorStatusType status = 2;
inline bool SensorStatusMsg_Sensor::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SensorStatusMsg_Sensor::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SensorStatusMsg_Sensor::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SensorStatusMsg_Sensor::clear_status() {
  status_ = 1;
  clear_has_status();
}
inline ::protobuf::SensorStatusMsg_SensorStatusType SensorStatusMsg_Sensor::status() const {
  return static_cast< ::protobuf::SensorStatusMsg_SensorStatusType >(status_);
}
inline void SensorStatusMsg_Sensor::set_status(::protobuf::SensorStatusMsg_SensorStatusType value) {
  assert(::protobuf::SensorStatusMsg_SensorStatusType_IsValid(value));
  set_has_status();
  status_ = value;
}

// repeated .protobuf.SensorStatusMsg.Attribute attributes = 3;
inline int SensorStatusMsg_Sensor::attributes_size() const {
  return attributes_.size();
}
inline void SensorStatusMsg_Sensor::clear_attributes() {
  attributes_.Clear();
}
inline const ::protobuf::SensorStatusMsg_Attribute& SensorStatusMsg_Sensor::attributes(int index) const {
  return attributes_.Get(index);
}
inline ::protobuf::SensorStatusMsg_Attribute* SensorStatusMsg_Sensor::mutable_attributes(int index) {
  return attributes_.Mutable(index);
}
inline ::protobuf::SensorStatusMsg_Attribute* SensorStatusMsg_Sensor::add_attributes() {
  return attributes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protobuf::SensorStatusMsg_Attribute >&
SensorStatusMsg_Sensor::attributes() const {
  return attributes_;
}
inline ::google::protobuf::RepeatedPtrField< ::protobuf::SensorStatusMsg_Attribute >*
SensorStatusMsg_Sensor::mutable_attributes() {
  return &attributes_;
}

// -------------------------------------------------------------------

// SensorStatusMsg

// repeated .protobuf.SensorStatusMsg.Sensor sensors = 1;
inline int SensorStatusMsg::sensors_size() const {
  return sensors_.size();
}
inline void SensorStatusMsg::clear_sensors() {
  sensors_.Clear();
}
inline const ::protobuf::SensorStatusMsg_Sensor& SensorStatusMsg::sensors(int index) const {
  return sensors_.Get(index);
}
inline ::protobuf::SensorStatusMsg_Sensor* SensorStatusMsg::mutable_sensors(int index) {
  return sensors_.Mutable(index);
}
inline ::protobuf::SensorStatusMsg_Sensor* SensorStatusMsg::add_sensors() {
  return sensors_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protobuf::SensorStatusMsg_Sensor >&
SensorStatusMsg::sensors() const {
  return sensors_;
}
inline ::google::protobuf::RepeatedPtrField< ::protobuf::SensorStatusMsg_Sensor >*
SensorStatusMsg::mutable_sensors() {
  return &sensors_;
}

// -------------------------------------------------------------------

// StatusMsg

// required .protobuf.StatusMsg.StatusType status_type = 1;
inline bool StatusMsg::has_status_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StatusMsg::set_has_status_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StatusMsg::clear_has_status_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StatusMsg::clear_status_type() {
  status_type_ = 1;
  clear_has_status_type();
}
inline ::protobuf::StatusMsg_StatusType StatusMsg::status_type() const {
  return static_cast< ::protobuf::StatusMsg_StatusType >(status_type_);
}
inline void StatusMsg::set_status_type(::protobuf::StatusMsg_StatusType value) {
  assert(::protobuf::StatusMsg_StatusType_IsValid(value));
  set_has_status_type();
  status_type_ = value;
}

// optional string project_name = 2;
inline bool StatusMsg::has_project_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StatusMsg::set_has_project_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StatusMsg::clear_has_project_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StatusMsg::clear_project_name() {
  if (project_name_ != &::google::protobuf::internal::kEmptyString) {
    project_name_->clear();
  }
  clear_has_project_name();
}
inline const ::std::string& StatusMsg::project_name() const {
  return *project_name_;
}
inline void StatusMsg::set_project_name(const ::std::string& value) {
  set_has_project_name();
  if (project_name_ == &::google::protobuf::internal::kEmptyString) {
    project_name_ = new ::std::string;
  }
  project_name_->assign(value);
}
inline void StatusMsg::set_project_name(const char* value) {
  set_has_project_name();
  if (project_name_ == &::google::protobuf::internal::kEmptyString) {
    project_name_ = new ::std::string;
  }
  project_name_->assign(value);
}
inline void StatusMsg::set_project_name(const char* value, size_t size) {
  set_has_project_name();
  if (project_name_ == &::google::protobuf::internal::kEmptyString) {
    project_name_ = new ::std::string;
  }
  project_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* StatusMsg::mutable_project_name() {
  set_has_project_name();
  if (project_name_ == &::google::protobuf::internal::kEmptyString) {
    project_name_ = new ::std::string;
  }
  return project_name_;
}
inline ::std::string* StatusMsg::release_project_name() {
  clear_has_project_name();
  if (project_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = project_name_;
    project_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void StatusMsg::set_allocated_project_name(::std::string* project_name) {
  if (project_name_ != &::google::protobuf::internal::kEmptyString) {
    delete project_name_;
  }
  if (project_name) {
    set_has_project_name();
    project_name_ = project_name;
  } else {
    clear_has_project_name();
    project_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CreateNewProjectRequestMsg

// required string name = 1;
inline bool CreateNewProjectRequestMsg::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateNewProjectRequestMsg::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateNewProjectRequestMsg::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateNewProjectRequestMsg::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CreateNewProjectRequestMsg::name() const {
  return *name_;
}
inline void CreateNewProjectRequestMsg::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CreateNewProjectRequestMsg::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CreateNewProjectRequestMsg::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CreateNewProjectRequestMsg::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CreateNewProjectRequestMsg::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CreateNewProjectRequestMsg::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CreateNewProjectResponseMsg

// required .protobuf.CreateNewProjectResponseMsg.ResponseType response_type = 1;
inline bool CreateNewProjectResponseMsg::has_response_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateNewProjectResponseMsg::set_has_response_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateNewProjectResponseMsg::clear_has_response_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateNewProjectResponseMsg::clear_response_type() {
  response_type_ = 1;
  clear_has_response_type();
}
inline ::protobuf::CreateNewProjectResponseMsg_ResponseType CreateNewProjectResponseMsg::response_type() const {
  return static_cast< ::protobuf::CreateNewProjectResponseMsg_ResponseType >(response_type_);
}
inline void CreateNewProjectResponseMsg::set_response_type(::protobuf::CreateNewProjectResponseMsg_ResponseType value) {
  assert(::protobuf::CreateNewProjectResponseMsg_ResponseType_IsValid(value));
  set_has_response_type();
  response_type_ = value;
}

// -------------------------------------------------------------------

// RenameProjectRequestMsg

// required string old_name = 1;
inline bool RenameProjectRequestMsg::has_old_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RenameProjectRequestMsg::set_has_old_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RenameProjectRequestMsg::clear_has_old_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RenameProjectRequestMsg::clear_old_name() {
  if (old_name_ != &::google::protobuf::internal::kEmptyString) {
    old_name_->clear();
  }
  clear_has_old_name();
}
inline const ::std::string& RenameProjectRequestMsg::old_name() const {
  return *old_name_;
}
inline void RenameProjectRequestMsg::set_old_name(const ::std::string& value) {
  set_has_old_name();
  if (old_name_ == &::google::protobuf::internal::kEmptyString) {
    old_name_ = new ::std::string;
  }
  old_name_->assign(value);
}
inline void RenameProjectRequestMsg::set_old_name(const char* value) {
  set_has_old_name();
  if (old_name_ == &::google::protobuf::internal::kEmptyString) {
    old_name_ = new ::std::string;
  }
  old_name_->assign(value);
}
inline void RenameProjectRequestMsg::set_old_name(const char* value, size_t size) {
  set_has_old_name();
  if (old_name_ == &::google::protobuf::internal::kEmptyString) {
    old_name_ = new ::std::string;
  }
  old_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RenameProjectRequestMsg::mutable_old_name() {
  set_has_old_name();
  if (old_name_ == &::google::protobuf::internal::kEmptyString) {
    old_name_ = new ::std::string;
  }
  return old_name_;
}
inline ::std::string* RenameProjectRequestMsg::release_old_name() {
  clear_has_old_name();
  if (old_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = old_name_;
    old_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RenameProjectRequestMsg::set_allocated_old_name(::std::string* old_name) {
  if (old_name_ != &::google::protobuf::internal::kEmptyString) {
    delete old_name_;
  }
  if (old_name) {
    set_has_old_name();
    old_name_ = old_name;
  } else {
    clear_has_old_name();
    old_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string new_name = 2;
inline bool RenameProjectRequestMsg::has_new_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RenameProjectRequestMsg::set_has_new_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RenameProjectRequestMsg::clear_has_new_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RenameProjectRequestMsg::clear_new_name() {
  if (new_name_ != &::google::protobuf::internal::kEmptyString) {
    new_name_->clear();
  }
  clear_has_new_name();
}
inline const ::std::string& RenameProjectRequestMsg::new_name() const {
  return *new_name_;
}
inline void RenameProjectRequestMsg::set_new_name(const ::std::string& value) {
  set_has_new_name();
  if (new_name_ == &::google::protobuf::internal::kEmptyString) {
    new_name_ = new ::std::string;
  }
  new_name_->assign(value);
}
inline void RenameProjectRequestMsg::set_new_name(const char* value) {
  set_has_new_name();
  if (new_name_ == &::google::protobuf::internal::kEmptyString) {
    new_name_ = new ::std::string;
  }
  new_name_->assign(value);
}
inline void RenameProjectRequestMsg::set_new_name(const char* value, size_t size) {
  set_has_new_name();
  if (new_name_ == &::google::protobuf::internal::kEmptyString) {
    new_name_ = new ::std::string;
  }
  new_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RenameProjectRequestMsg::mutable_new_name() {
  set_has_new_name();
  if (new_name_ == &::google::protobuf::internal::kEmptyString) {
    new_name_ = new ::std::string;
  }
  return new_name_;
}
inline ::std::string* RenameProjectRequestMsg::release_new_name() {
  clear_has_new_name();
  if (new_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = new_name_;
    new_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RenameProjectRequestMsg::set_allocated_new_name(::std::string* new_name) {
  if (new_name_ != &::google::protobuf::internal::kEmptyString) {
    delete new_name_;
  }
  if (new_name) {
    set_has_new_name();
    new_name_ = new_name;
  } else {
    clear_has_new_name();
    new_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// RenameProjectResponseMsg

// required .protobuf.RenameProjectResponseMsg.ResponseType response_type = 1;
inline bool RenameProjectResponseMsg::has_response_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RenameProjectResponseMsg::set_has_response_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RenameProjectResponseMsg::clear_has_response_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RenameProjectResponseMsg::clear_response_type() {
  response_type_ = 1;
  clear_has_response_type();
}
inline ::protobuf::RenameProjectResponseMsg_ResponseType RenameProjectResponseMsg::response_type() const {
  return static_cast< ::protobuf::RenameProjectResponseMsg_ResponseType >(response_type_);
}
inline void RenameProjectResponseMsg::set_response_type(::protobuf::RenameProjectResponseMsg_ResponseType value) {
  assert(::protobuf::RenameProjectResponseMsg_ResponseType_IsValid(value));
  set_has_response_type();
  response_type_ = value;
}

// -------------------------------------------------------------------

// RemoveProjectRequestMsg

// required string name = 1;
inline bool RemoveProjectRequestMsg::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RemoveProjectRequestMsg::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RemoveProjectRequestMsg::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RemoveProjectRequestMsg::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& RemoveProjectRequestMsg::name() const {
  return *name_;
}
inline void RemoveProjectRequestMsg::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RemoveProjectRequestMsg::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RemoveProjectRequestMsg::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RemoveProjectRequestMsg::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* RemoveProjectRequestMsg::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RemoveProjectRequestMsg::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// RemoveProjectResponseMsg

// required .protobuf.RemoveProjectResponseMsg.ResponseType response_type = 1;
inline bool RemoveProjectResponseMsg::has_response_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RemoveProjectResponseMsg::set_has_response_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RemoveProjectResponseMsg::clear_has_response_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RemoveProjectResponseMsg::clear_response_type() {
  response_type_ = 1;
  clear_has_response_type();
}
inline ::protobuf::RemoveProjectResponseMsg_ResponseType RemoveProjectResponseMsg::response_type() const {
  return static_cast< ::protobuf::RemoveProjectResponseMsg_ResponseType >(response_type_);
}
inline void RemoveProjectResponseMsg::set_response_type(::protobuf::RemoveProjectResponseMsg_ResponseType value) {
  assert(::protobuf::RemoveProjectResponseMsg_ResponseType_IsValid(value));
  set_has_response_type();
  response_type_ = value;
}

// -------------------------------------------------------------------

// SetActiveProjectRequestMsg

// required string name = 1;
inline bool SetActiveProjectRequestMsg::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetActiveProjectRequestMsg::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetActiveProjectRequestMsg::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetActiveProjectRequestMsg::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& SetActiveProjectRequestMsg::name() const {
  return *name_;
}
inline void SetActiveProjectRequestMsg::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void SetActiveProjectRequestMsg::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void SetActiveProjectRequestMsg::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SetActiveProjectRequestMsg::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* SetActiveProjectRequestMsg::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SetActiveProjectRequestMsg::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// SetActiveProjectResponseMsg

// required .protobuf.SetActiveProjectResponseMsg.ResponseType response_type = 1;
inline bool SetActiveProjectResponseMsg::has_response_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetActiveProjectResponseMsg::set_has_response_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetActiveProjectResponseMsg::clear_has_response_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetActiveProjectResponseMsg::clear_response_type() {
  response_type_ = 1;
  clear_has_response_type();
}
inline ::protobuf::SetActiveProjectResponseMsg_ResponseType SetActiveProjectResponseMsg::response_type() const {
  return static_cast< ::protobuf::SetActiveProjectResponseMsg_ResponseType >(response_type_);
}
inline void SetActiveProjectResponseMsg::set_response_type(::protobuf::SetActiveProjectResponseMsg_ResponseType value) {
  assert(::protobuf::SetActiveProjectResponseMsg_ResponseType_IsValid(value));
  set_has_response_type();
  response_type_ = value;
}

// -------------------------------------------------------------------

// ActiveProjectMsg

// optional string name = 1;
inline bool ActiveProjectMsg::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActiveProjectMsg::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActiveProjectMsg::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActiveProjectMsg::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ActiveProjectMsg::name() const {
  return *name_;
}
inline void ActiveProjectMsg::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ActiveProjectMsg::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ActiveProjectMsg::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ActiveProjectMsg::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* ActiveProjectMsg::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ActiveProjectMsg::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ActiveExperimentMsg

// optional string name = 1;
inline bool ActiveExperimentMsg::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActiveExperimentMsg::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActiveExperimentMsg::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActiveExperimentMsg::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ActiveExperimentMsg::name() const {
  return *name_;
}
inline void ActiveExperimentMsg::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ActiveExperimentMsg::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ActiveExperimentMsg::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ActiveExperimentMsg::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* ActiveExperimentMsg::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ActiveExperimentMsg::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ProjectListMsg

// repeated string projects = 1;
inline int ProjectListMsg::projects_size() const {
  return projects_.size();
}
inline void ProjectListMsg::clear_projects() {
  projects_.Clear();
}
inline const ::std::string& ProjectListMsg::projects(int index) const {
  return projects_.Get(index);
}
inline ::std::string* ProjectListMsg::mutable_projects(int index) {
  return projects_.Mutable(index);
}
inline void ProjectListMsg::set_projects(int index, const ::std::string& value) {
  projects_.Mutable(index)->assign(value);
}
inline void ProjectListMsg::set_projects(int index, const char* value) {
  projects_.Mutable(index)->assign(value);
}
inline void ProjectListMsg::set_projects(int index, const char* value, size_t size) {
  projects_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProjectListMsg::add_projects() {
  return projects_.Add();
}
inline void ProjectListMsg::add_projects(const ::std::string& value) {
  projects_.Add()->assign(value);
}
inline void ProjectListMsg::add_projects(const char* value) {
  projects_.Add()->assign(value);
}
inline void ProjectListMsg::add_projects(const char* value, size_t size) {
  projects_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ProjectListMsg::projects() const {
  return projects_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ProjectListMsg::mutable_projects() {
  return &projects_;
}

// -------------------------------------------------------------------

// ProjectMetadataStruct

// optional string test_leader = 1;
inline bool ProjectMetadataStruct::has_test_leader() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProjectMetadataStruct::set_has_test_leader() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProjectMetadataStruct::clear_has_test_leader() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProjectMetadataStruct::clear_test_leader() {
  if (test_leader_ != &::google::protobuf::internal::kEmptyString) {
    test_leader_->clear();
  }
  clear_has_test_leader();
}
inline const ::std::string& ProjectMetadataStruct::test_leader() const {
  return *test_leader_;
}
inline void ProjectMetadataStruct::set_test_leader(const ::std::string& value) {
  set_has_test_leader();
  if (test_leader_ == &::google::protobuf::internal::kEmptyString) {
    test_leader_ = new ::std::string;
  }
  test_leader_->assign(value);
}
inline void ProjectMetadataStruct::set_test_leader(const char* value) {
  set_has_test_leader();
  if (test_leader_ == &::google::protobuf::internal::kEmptyString) {
    test_leader_ = new ::std::string;
  }
  test_leader_->assign(value);
}
inline void ProjectMetadataStruct::set_test_leader(const char* value, size_t size) {
  set_has_test_leader();
  if (test_leader_ == &::google::protobuf::internal::kEmptyString) {
    test_leader_ = new ::std::string;
  }
  test_leader_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProjectMetadataStruct::mutable_test_leader() {
  set_has_test_leader();
  if (test_leader_ == &::google::protobuf::internal::kEmptyString) {
    test_leader_ = new ::std::string;
  }
  return test_leader_;
}
inline ::std::string* ProjectMetadataStruct::release_test_leader() {
  clear_has_test_leader();
  if (test_leader_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = test_leader_;
    test_leader_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ProjectMetadataStruct::set_allocated_test_leader(::std::string* test_leader) {
  if (test_leader_ != &::google::protobuf::internal::kEmptyString) {
    delete test_leader_;
  }
  if (test_leader) {
    set_has_test_leader();
    test_leader_ = test_leader;
  } else {
    clear_has_test_leader();
    test_leader_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 date = 2;
inline bool ProjectMetadataStruct::has_date() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProjectMetadataStruct::set_has_date() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProjectMetadataStruct::clear_has_date() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProjectMetadataStruct::clear_date() {
  date_ = GOOGLE_LONGLONG(0);
  clear_has_date();
}
inline ::google::protobuf::int64 ProjectMetadataStruct::date() const {
  return date_;
}
inline void ProjectMetadataStruct::set_date(::google::protobuf::int64 value) {
  set_has_date();
  date_ = value;
}

// optional string email = 3;
inline bool ProjectMetadataStruct::has_email() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProjectMetadataStruct::set_has_email() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProjectMetadataStruct::clear_has_email() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProjectMetadataStruct::clear_email() {
  if (email_ != &::google::protobuf::internal::kEmptyString) {
    email_->clear();
  }
  clear_has_email();
}
inline const ::std::string& ProjectMetadataStruct::email() const {
  return *email_;
}
inline void ProjectMetadataStruct::set_email(const ::std::string& value) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::kEmptyString) {
    email_ = new ::std::string;
  }
  email_->assign(value);
}
inline void ProjectMetadataStruct::set_email(const char* value) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::kEmptyString) {
    email_ = new ::std::string;
  }
  email_->assign(value);
}
inline void ProjectMetadataStruct::set_email(const char* value, size_t size) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::kEmptyString) {
    email_ = new ::std::string;
  }
  email_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProjectMetadataStruct::mutable_email() {
  set_has_email();
  if (email_ == &::google::protobuf::internal::kEmptyString) {
    email_ = new ::std::string;
  }
  return email_;
}
inline ::std::string* ProjectMetadataStruct::release_email() {
  clear_has_email();
  if (email_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = email_;
    email_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ProjectMetadataStruct::set_allocated_email(::std::string* email) {
  if (email_ != &::google::protobuf::internal::kEmptyString) {
    delete email_;
  }
  if (email) {
    set_has_email();
    email_ = email;
  } else {
    clear_has_email();
    email_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated string member_names = 4;
inline int ProjectMetadataStruct::member_names_size() const {
  return member_names_.size();
}
inline void ProjectMetadataStruct::clear_member_names() {
  member_names_.Clear();
}
inline const ::std::string& ProjectMetadataStruct::member_names(int index) const {
  return member_names_.Get(index);
}
inline ::std::string* ProjectMetadataStruct::mutable_member_names(int index) {
  return member_names_.Mutable(index);
}
inline void ProjectMetadataStruct::set_member_names(int index, const ::std::string& value) {
  member_names_.Mutable(index)->assign(value);
}
inline void ProjectMetadataStruct::set_member_names(int index, const char* value) {
  member_names_.Mutable(index)->assign(value);
}
inline void ProjectMetadataStruct::set_member_names(int index, const char* value, size_t size) {
  member_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProjectMetadataStruct::add_member_names() {
  return member_names_.Add();
}
inline void ProjectMetadataStruct::add_member_names(const ::std::string& value) {
  member_names_.Add()->assign(value);
}
inline void ProjectMetadataStruct::add_member_names(const char* value) {
  member_names_.Add()->assign(value);
}
inline void ProjectMetadataStruct::add_member_names(const char* value, size_t size) {
  member_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ProjectMetadataStruct::member_names() const {
  return member_names_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ProjectMetadataStruct::mutable_member_names() {
  return &member_names_;
}

// repeated string tags = 5;
inline int ProjectMetadataStruct::tags_size() const {
  return tags_.size();
}
inline void ProjectMetadataStruct::clear_tags() {
  tags_.Clear();
}
inline const ::std::string& ProjectMetadataStruct::tags(int index) const {
  return tags_.Get(index);
}
inline ::std::string* ProjectMetadataStruct::mutable_tags(int index) {
  return tags_.Mutable(index);
}
inline void ProjectMetadataStruct::set_tags(int index, const ::std::string& value) {
  tags_.Mutable(index)->assign(value);
}
inline void ProjectMetadataStruct::set_tags(int index, const char* value) {
  tags_.Mutable(index)->assign(value);
}
inline void ProjectMetadataStruct::set_tags(int index, const char* value, size_t size) {
  tags_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProjectMetadataStruct::add_tags() {
  return tags_.Add();
}
inline void ProjectMetadataStruct::add_tags(const ::std::string& value) {
  tags_.Add()->assign(value);
}
inline void ProjectMetadataStruct::add_tags(const char* value) {
  tags_.Add()->assign(value);
}
inline void ProjectMetadataStruct::add_tags(const char* value, size_t size) {
  tags_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ProjectMetadataStruct::tags() const {
  return tags_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ProjectMetadataStruct::mutable_tags() {
  return &tags_;
}

// optional string description = 6;
inline bool ProjectMetadataStruct::has_description() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProjectMetadataStruct::set_has_description() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ProjectMetadataStruct::clear_has_description() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ProjectMetadataStruct::clear_description() {
  if (description_ != &::google::protobuf::internal::kEmptyString) {
    description_->clear();
  }
  clear_has_description();
}
inline const ::std::string& ProjectMetadataStruct::description() const {
  return *description_;
}
inline void ProjectMetadataStruct::set_description(const ::std::string& value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::kEmptyString) {
    description_ = new ::std::string;
  }
  description_->assign(value);
}
inline void ProjectMetadataStruct::set_description(const char* value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::kEmptyString) {
    description_ = new ::std::string;
  }
  description_->assign(value);
}
inline void ProjectMetadataStruct::set_description(const char* value, size_t size) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::kEmptyString) {
    description_ = new ::std::string;
  }
  description_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProjectMetadataStruct::mutable_description() {
  set_has_description();
  if (description_ == &::google::protobuf::internal::kEmptyString) {
    description_ = new ::std::string;
  }
  return description_;
}
inline ::std::string* ProjectMetadataStruct::release_description() {
  clear_has_description();
  if (description_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = description_;
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ProjectMetadataStruct::set_allocated_description(::std::string* description) {
  if (description_ != &::google::protobuf::internal::kEmptyString) {
    delete description_;
  }
  if (description) {
    set_has_description();
    description_ = description;
  } else {
    clear_has_description();
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// SetProjectMetadataRequestMsg

// required .protobuf.ProjectMetadataStruct metadata = 1;
inline bool SetProjectMetadataRequestMsg::has_metadata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetProjectMetadataRequestMsg::set_has_metadata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetProjectMetadataRequestMsg::clear_has_metadata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetProjectMetadataRequestMsg::clear_metadata() {
  if (metadata_ != NULL) metadata_->::protobuf::ProjectMetadataStruct::Clear();
  clear_has_metadata();
}
inline const ::protobuf::ProjectMetadataStruct& SetProjectMetadataRequestMsg::metadata() const {
  return metadata_ != NULL ? *metadata_ : *default_instance_->metadata_;
}
inline ::protobuf::ProjectMetadataStruct* SetProjectMetadataRequestMsg::mutable_metadata() {
  set_has_metadata();
  if (metadata_ == NULL) metadata_ = new ::protobuf::ProjectMetadataStruct;
  return metadata_;
}
inline ::protobuf::ProjectMetadataStruct* SetProjectMetadataRequestMsg::release_metadata() {
  clear_has_metadata();
  ::protobuf::ProjectMetadataStruct* temp = metadata_;
  metadata_ = NULL;
  return temp;
}
inline void SetProjectMetadataRequestMsg::set_allocated_metadata(::protobuf::ProjectMetadataStruct* metadata) {
  delete metadata_;
  metadata_ = metadata;
  if (metadata) {
    set_has_metadata();
  } else {
    clear_has_metadata();
  }
}

// -------------------------------------------------------------------

// SetProjectMetadataResponseMsg

// required .protobuf.SetProjectMetadataResponseMsg.ResponseType response_type = 1;
inline bool SetProjectMetadataResponseMsg::has_response_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetProjectMetadataResponseMsg::set_has_response_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetProjectMetadataResponseMsg::clear_has_response_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetProjectMetadataResponseMsg::clear_response_type() {
  response_type_ = 1;
  clear_has_response_type();
}
inline ::protobuf::SetProjectMetadataResponseMsg_ResponseType SetProjectMetadataResponseMsg::response_type() const {
  return static_cast< ::protobuf::SetProjectMetadataResponseMsg_ResponseType >(response_type_);
}
inline void SetProjectMetadataResponseMsg::set_response_type(::protobuf::SetProjectMetadataResponseMsg_ResponseType value) {
  assert(::protobuf::SetProjectMetadataResponseMsg_ResponseType_IsValid(value));
  set_has_response_type();
  response_type_ = value;
}

// -------------------------------------------------------------------

// ProjectMetadataMsg

// required .protobuf.ProjectMetadataStruct metadata = 1;
inline bool ProjectMetadataMsg::has_metadata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProjectMetadataMsg::set_has_metadata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProjectMetadataMsg::clear_has_metadata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProjectMetadataMsg::clear_metadata() {
  if (metadata_ != NULL) metadata_->::protobuf::ProjectMetadataStruct::Clear();
  clear_has_metadata();
}
inline const ::protobuf::ProjectMetadataStruct& ProjectMetadataMsg::metadata() const {
  return metadata_ != NULL ? *metadata_ : *default_instance_->metadata_;
}
inline ::protobuf::ProjectMetadataStruct* ProjectMetadataMsg::mutable_metadata() {
  set_has_metadata();
  if (metadata_ == NULL) metadata_ = new ::protobuf::ProjectMetadataStruct;
  return metadata_;
}
inline ::protobuf::ProjectMetadataStruct* ProjectMetadataMsg::release_metadata() {
  clear_has_metadata();
  ::protobuf::ProjectMetadataStruct* temp = metadata_;
  metadata_ = NULL;
  return temp;
}
inline void ProjectMetadataMsg::set_allocated_metadata(::protobuf::ProjectMetadataStruct* metadata) {
  delete metadata_;
  metadata_ = metadata;
  if (metadata) {
    set_has_metadata();
  } else {
    clear_has_metadata();
  }
}

// -------------------------------------------------------------------

// ExperimentDataCollectionStartRequestMsg

// required string name = 1;
inline bool ExperimentDataCollectionStartRequestMsg::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExperimentDataCollectionStartRequestMsg::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExperimentDataCollectionStartRequestMsg::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExperimentDataCollectionStartRequestMsg::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ExperimentDataCollectionStartRequestMsg::name() const {
  return *name_;
}
inline void ExperimentDataCollectionStartRequestMsg::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ExperimentDataCollectionStartRequestMsg::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ExperimentDataCollectionStartRequestMsg::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ExperimentDataCollectionStartRequestMsg::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* ExperimentDataCollectionStartRequestMsg::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ExperimentDataCollectionStartRequestMsg::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ExperimentDataCollectionStartResponseMsg

// required .protobuf.ExperimentDataCollectionStartResponseMsg.ResponseType response_type = 1;
inline bool ExperimentDataCollectionStartResponseMsg::has_response_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExperimentDataCollectionStartResponseMsg::set_has_response_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExperimentDataCollectionStartResponseMsg::clear_has_response_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExperimentDataCollectionStartResponseMsg::clear_response_type() {
  response_type_ = 1;
  clear_has_response_type();
}
inline ::protobuf::ExperimentDataCollectionStartResponseMsg_ResponseType ExperimentDataCollectionStartResponseMsg::response_type() const {
  return static_cast< ::protobuf::ExperimentDataCollectionStartResponseMsg_ResponseType >(response_type_);
}
inline void ExperimentDataCollectionStartResponseMsg::set_response_type(::protobuf::ExperimentDataCollectionStartResponseMsg_ResponseType value) {
  assert(::protobuf::ExperimentDataCollectionStartResponseMsg_ResponseType_IsValid(value));
  set_has_response_type();
  response_type_ = value;
}

// -------------------------------------------------------------------

// ExperimentDataCollectionStopRequestMsg

// -------------------------------------------------------------------

// ExperimentDataCollectionStopResponseMsg

// required .protobuf.ExperimentDataCollectionStopResponseMsg.ResponseType response_type = 1;
inline bool ExperimentDataCollectionStopResponseMsg::has_response_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExperimentDataCollectionStopResponseMsg::set_has_response_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExperimentDataCollectionStopResponseMsg::clear_has_response_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExperimentDataCollectionStopResponseMsg::clear_response_type() {
  response_type_ = 1;
  clear_has_response_type();
}
inline ::protobuf::ExperimentDataCollectionStopResponseMsg_ResponseType ExperimentDataCollectionStopResponseMsg::response_type() const {
  return static_cast< ::protobuf::ExperimentDataCollectionStopResponseMsg_ResponseType >(response_type_);
}
inline void ExperimentDataCollectionStopResponseMsg::set_response_type(::protobuf::ExperimentDataCollectionStopResponseMsg_ResponseType value) {
  assert(::protobuf::ExperimentDataCollectionStopResponseMsg_ResponseType_IsValid(value));
  set_has_response_type();
  response_type_ = value;
}

// -------------------------------------------------------------------

// RenameExperimentRequestMsg

// required string old_name = 1;
inline bool RenameExperimentRequestMsg::has_old_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RenameExperimentRequestMsg::set_has_old_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RenameExperimentRequestMsg::clear_has_old_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RenameExperimentRequestMsg::clear_old_name() {
  if (old_name_ != &::google::protobuf::internal::kEmptyString) {
    old_name_->clear();
  }
  clear_has_old_name();
}
inline const ::std::string& RenameExperimentRequestMsg::old_name() const {
  return *old_name_;
}
inline void RenameExperimentRequestMsg::set_old_name(const ::std::string& value) {
  set_has_old_name();
  if (old_name_ == &::google::protobuf::internal::kEmptyString) {
    old_name_ = new ::std::string;
  }
  old_name_->assign(value);
}
inline void RenameExperimentRequestMsg::set_old_name(const char* value) {
  set_has_old_name();
  if (old_name_ == &::google::protobuf::internal::kEmptyString) {
    old_name_ = new ::std::string;
  }
  old_name_->assign(value);
}
inline void RenameExperimentRequestMsg::set_old_name(const char* value, size_t size) {
  set_has_old_name();
  if (old_name_ == &::google::protobuf::internal::kEmptyString) {
    old_name_ = new ::std::string;
  }
  old_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RenameExperimentRequestMsg::mutable_old_name() {
  set_has_old_name();
  if (old_name_ == &::google::protobuf::internal::kEmptyString) {
    old_name_ = new ::std::string;
  }
  return old_name_;
}
inline ::std::string* RenameExperimentRequestMsg::release_old_name() {
  clear_has_old_name();
  if (old_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = old_name_;
    old_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RenameExperimentRequestMsg::set_allocated_old_name(::std::string* old_name) {
  if (old_name_ != &::google::protobuf::internal::kEmptyString) {
    delete old_name_;
  }
  if (old_name) {
    set_has_old_name();
    old_name_ = old_name;
  } else {
    clear_has_old_name();
    old_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string new_name = 2;
inline bool RenameExperimentRequestMsg::has_new_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RenameExperimentRequestMsg::set_has_new_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RenameExperimentRequestMsg::clear_has_new_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RenameExperimentRequestMsg::clear_new_name() {
  if (new_name_ != &::google::protobuf::internal::kEmptyString) {
    new_name_->clear();
  }
  clear_has_new_name();
}
inline const ::std::string& RenameExperimentRequestMsg::new_name() const {
  return *new_name_;
}
inline void RenameExperimentRequestMsg::set_new_name(const ::std::string& value) {
  set_has_new_name();
  if (new_name_ == &::google::protobuf::internal::kEmptyString) {
    new_name_ = new ::std::string;
  }
  new_name_->assign(value);
}
inline void RenameExperimentRequestMsg::set_new_name(const char* value) {
  set_has_new_name();
  if (new_name_ == &::google::protobuf::internal::kEmptyString) {
    new_name_ = new ::std::string;
  }
  new_name_->assign(value);
}
inline void RenameExperimentRequestMsg::set_new_name(const char* value, size_t size) {
  set_has_new_name();
  if (new_name_ == &::google::protobuf::internal::kEmptyString) {
    new_name_ = new ::std::string;
  }
  new_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RenameExperimentRequestMsg::mutable_new_name() {
  set_has_new_name();
  if (new_name_ == &::google::protobuf::internal::kEmptyString) {
    new_name_ = new ::std::string;
  }
  return new_name_;
}
inline ::std::string* RenameExperimentRequestMsg::release_new_name() {
  clear_has_new_name();
  if (new_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = new_name_;
    new_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RenameExperimentRequestMsg::set_allocated_new_name(::std::string* new_name) {
  if (new_name_ != &::google::protobuf::internal::kEmptyString) {
    delete new_name_;
  }
  if (new_name) {
    set_has_new_name();
    new_name_ = new_name;
  } else {
    clear_has_new_name();
    new_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// RenameExperimentResponseMsg

// required .protobuf.RenameExperimentResponseMsg.ResponseType response_type = 1;
inline bool RenameExperimentResponseMsg::has_response_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RenameExperimentResponseMsg::set_has_response_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RenameExperimentResponseMsg::clear_has_response_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RenameExperimentResponseMsg::clear_response_type() {
  response_type_ = 1;
  clear_has_response_type();
}
inline ::protobuf::RenameExperimentResponseMsg_ResponseType RenameExperimentResponseMsg::response_type() const {
  return static_cast< ::protobuf::RenameExperimentResponseMsg_ResponseType >(response_type_);
}
inline void RenameExperimentResponseMsg::set_response_type(::protobuf::RenameExperimentResponseMsg_ResponseType value) {
  assert(::protobuf::RenameExperimentResponseMsg_ResponseType_IsValid(value));
  set_has_response_type();
  response_type_ = value;
}

// -------------------------------------------------------------------

// RemoveExperimentRequestMsg

// required string name = 1;
inline bool RemoveExperimentRequestMsg::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RemoveExperimentRequestMsg::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RemoveExperimentRequestMsg::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RemoveExperimentRequestMsg::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& RemoveExperimentRequestMsg::name() const {
  return *name_;
}
inline void RemoveExperimentRequestMsg::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RemoveExperimentRequestMsg::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RemoveExperimentRequestMsg::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RemoveExperimentRequestMsg::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* RemoveExperimentRequestMsg::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RemoveExperimentRequestMsg::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// RemoveExperimentResponseMsg

// required .protobuf.RemoveExperimentResponseMsg.ResponseType response_type = 1;
inline bool RemoveExperimentResponseMsg::has_response_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RemoveExperimentResponseMsg::set_has_response_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RemoveExperimentResponseMsg::clear_has_response_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RemoveExperimentResponseMsg::clear_response_type() {
  response_type_ = 1;
  clear_has_response_type();
}
inline ::protobuf::RemoveExperimentResponseMsg_ResponseType RemoveExperimentResponseMsg::response_type() const {
  return static_cast< ::protobuf::RemoveExperimentResponseMsg_ResponseType >(response_type_);
}
inline void RemoveExperimentResponseMsg::set_response_type(::protobuf::RemoveExperimentResponseMsg_ResponseType value) {
  assert(::protobuf::RemoveExperimentResponseMsg_ResponseType_IsValid(value));
  set_has_response_type();
  response_type_ = value;
}

// -------------------------------------------------------------------

// ExperimentPlaybackStartRequestMsg

// required string name = 1;
inline bool ExperimentPlaybackStartRequestMsg::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExperimentPlaybackStartRequestMsg::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExperimentPlaybackStartRequestMsg::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExperimentPlaybackStartRequestMsg::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ExperimentPlaybackStartRequestMsg::name() const {
  return *name_;
}
inline void ExperimentPlaybackStartRequestMsg::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ExperimentPlaybackStartRequestMsg::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ExperimentPlaybackStartRequestMsg::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ExperimentPlaybackStartRequestMsg::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* ExperimentPlaybackStartRequestMsg::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ExperimentPlaybackStartRequestMsg::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated int32 sensor_ids = 2;
inline int ExperimentPlaybackStartRequestMsg::sensor_ids_size() const {
  return sensor_ids_.size();
}
inline void ExperimentPlaybackStartRequestMsg::clear_sensor_ids() {
  sensor_ids_.Clear();
}
inline ::google::protobuf::int32 ExperimentPlaybackStartRequestMsg::sensor_ids(int index) const {
  return sensor_ids_.Get(index);
}
inline void ExperimentPlaybackStartRequestMsg::set_sensor_ids(int index, ::google::protobuf::int32 value) {
  sensor_ids_.Set(index, value);
}
inline void ExperimentPlaybackStartRequestMsg::add_sensor_ids(::google::protobuf::int32 value) {
  sensor_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ExperimentPlaybackStartRequestMsg::sensor_ids() const {
  return sensor_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ExperimentPlaybackStartRequestMsg::mutable_sensor_ids() {
  return &sensor_ids_;
}

// -------------------------------------------------------------------

// ExperimentPlaybackStartResponseMsg

// required .protobuf.ExperimentPlaybackStartResponseMsg.ResponseType response_type = 1;
inline bool ExperimentPlaybackStartResponseMsg::has_response_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExperimentPlaybackStartResponseMsg::set_has_response_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExperimentPlaybackStartResponseMsg::clear_has_response_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExperimentPlaybackStartResponseMsg::clear_response_type() {
  response_type_ = 1;
  clear_has_response_type();
}
inline ::protobuf::ExperimentPlaybackStartResponseMsg_ResponseType ExperimentPlaybackStartResponseMsg::response_type() const {
  return static_cast< ::protobuf::ExperimentPlaybackStartResponseMsg_ResponseType >(response_type_);
}
inline void ExperimentPlaybackStartResponseMsg::set_response_type(::protobuf::ExperimentPlaybackStartResponseMsg_ResponseType value) {
  assert(::protobuf::ExperimentPlaybackStartResponseMsg_ResponseType_IsValid(value));
  set_has_response_type();
  response_type_ = value;
}

// -------------------------------------------------------------------

// ExperimentPlaybackStopRequestMsg

// -------------------------------------------------------------------

// ExperimentPlaybackStopResponseMsg

// required .protobuf.ExperimentPlaybackStopResponseMsg.ResponseType response_type = 1;
inline bool ExperimentPlaybackStopResponseMsg::has_response_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExperimentPlaybackStopResponseMsg::set_has_response_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExperimentPlaybackStopResponseMsg::clear_has_response_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExperimentPlaybackStopResponseMsg::clear_response_type() {
  response_type_ = 1;
  clear_has_response_type();
}
inline ::protobuf::ExperimentPlaybackStopResponseMsg_ResponseType ExperimentPlaybackStopResponseMsg::response_type() const {
  return static_cast< ::protobuf::ExperimentPlaybackStopResponseMsg_ResponseType >(response_type_);
}
inline void ExperimentPlaybackStopResponseMsg::set_response_type(::protobuf::ExperimentPlaybackStopResponseMsg_ResponseType value) {
  assert(::protobuf::ExperimentPlaybackStopResponseMsg_ResponseType_IsValid(value));
  set_has_response_type();
  response_type_ = value;
}

// -------------------------------------------------------------------

// ExperimentListMsg

// repeated string names = 1;
inline int ExperimentListMsg::names_size() const {
  return names_.size();
}
inline void ExperimentListMsg::clear_names() {
  names_.Clear();
}
inline const ::std::string& ExperimentListMsg::names(int index) const {
  return names_.Get(index);
}
inline ::std::string* ExperimentListMsg::mutable_names(int index) {
  return names_.Mutable(index);
}
inline void ExperimentListMsg::set_names(int index, const ::std::string& value) {
  names_.Mutable(index)->assign(value);
}
inline void ExperimentListMsg::set_names(int index, const char* value) {
  names_.Mutable(index)->assign(value);
}
inline void ExperimentListMsg::set_names(int index, const char* value, size_t size) {
  names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ExperimentListMsg::add_names() {
  return names_.Add();
}
inline void ExperimentListMsg::add_names(const ::std::string& value) {
  names_.Add()->assign(value);
}
inline void ExperimentListMsg::add_names(const char* value) {
  names_.Add()->assign(value);
}
inline void ExperimentListMsg::add_names(const char* value, size_t size) {
  names_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ExperimentListMsg::names() const {
  return names_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ExperimentListMsg::mutable_names() {
  return &names_;
}

// -------------------------------------------------------------------

// SetExperimentMetadataRequestMsg

// required string experiment_name = 1;
inline bool SetExperimentMetadataRequestMsg::has_experiment_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetExperimentMetadataRequestMsg::set_has_experiment_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetExperimentMetadataRequestMsg::clear_has_experiment_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetExperimentMetadataRequestMsg::clear_experiment_name() {
  if (experiment_name_ != &::google::protobuf::internal::kEmptyString) {
    experiment_name_->clear();
  }
  clear_has_experiment_name();
}
inline const ::std::string& SetExperimentMetadataRequestMsg::experiment_name() const {
  return *experiment_name_;
}
inline void SetExperimentMetadataRequestMsg::set_experiment_name(const ::std::string& value) {
  set_has_experiment_name();
  if (experiment_name_ == &::google::protobuf::internal::kEmptyString) {
    experiment_name_ = new ::std::string;
  }
  experiment_name_->assign(value);
}
inline void SetExperimentMetadataRequestMsg::set_experiment_name(const char* value) {
  set_has_experiment_name();
  if (experiment_name_ == &::google::protobuf::internal::kEmptyString) {
    experiment_name_ = new ::std::string;
  }
  experiment_name_->assign(value);
}
inline void SetExperimentMetadataRequestMsg::set_experiment_name(const char* value, size_t size) {
  set_has_experiment_name();
  if (experiment_name_ == &::google::protobuf::internal::kEmptyString) {
    experiment_name_ = new ::std::string;
  }
  experiment_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SetExperimentMetadataRequestMsg::mutable_experiment_name() {
  set_has_experiment_name();
  if (experiment_name_ == &::google::protobuf::internal::kEmptyString) {
    experiment_name_ = new ::std::string;
  }
  return experiment_name_;
}
inline ::std::string* SetExperimentMetadataRequestMsg::release_experiment_name() {
  clear_has_experiment_name();
  if (experiment_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = experiment_name_;
    experiment_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SetExperimentMetadataRequestMsg::set_allocated_experiment_name(::std::string* experiment_name) {
  if (experiment_name_ != &::google::protobuf::internal::kEmptyString) {
    delete experiment_name_;
  }
  if (experiment_name) {
    set_has_experiment_name();
    experiment_name_ = experiment_name;
  } else {
    clear_has_experiment_name();
    experiment_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated string tags = 2;
inline int SetExperimentMetadataRequestMsg::tags_size() const {
  return tags_.size();
}
inline void SetExperimentMetadataRequestMsg::clear_tags() {
  tags_.Clear();
}
inline const ::std::string& SetExperimentMetadataRequestMsg::tags(int index) const {
  return tags_.Get(index);
}
inline ::std::string* SetExperimentMetadataRequestMsg::mutable_tags(int index) {
  return tags_.Mutable(index);
}
inline void SetExperimentMetadataRequestMsg::set_tags(int index, const ::std::string& value) {
  tags_.Mutable(index)->assign(value);
}
inline void SetExperimentMetadataRequestMsg::set_tags(int index, const char* value) {
  tags_.Mutable(index)->assign(value);
}
inline void SetExperimentMetadataRequestMsg::set_tags(int index, const char* value, size_t size) {
  tags_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SetExperimentMetadataRequestMsg::add_tags() {
  return tags_.Add();
}
inline void SetExperimentMetadataRequestMsg::add_tags(const ::std::string& value) {
  tags_.Add()->assign(value);
}
inline void SetExperimentMetadataRequestMsg::add_tags(const char* value) {
  tags_.Add()->assign(value);
}
inline void SetExperimentMetadataRequestMsg::add_tags(const char* value, size_t size) {
  tags_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SetExperimentMetadataRequestMsg::tags() const {
  return tags_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SetExperimentMetadataRequestMsg::mutable_tags() {
  return &tags_;
}

// optional string notes = 3;
inline bool SetExperimentMetadataRequestMsg::has_notes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SetExperimentMetadataRequestMsg::set_has_notes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SetExperimentMetadataRequestMsg::clear_has_notes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SetExperimentMetadataRequestMsg::clear_notes() {
  if (notes_ != &::google::protobuf::internal::kEmptyString) {
    notes_->clear();
  }
  clear_has_notes();
}
inline const ::std::string& SetExperimentMetadataRequestMsg::notes() const {
  return *notes_;
}
inline void SetExperimentMetadataRequestMsg::set_notes(const ::std::string& value) {
  set_has_notes();
  if (notes_ == &::google::protobuf::internal::kEmptyString) {
    notes_ = new ::std::string;
  }
  notes_->assign(value);
}
inline void SetExperimentMetadataRequestMsg::set_notes(const char* value) {
  set_has_notes();
  if (notes_ == &::google::protobuf::internal::kEmptyString) {
    notes_ = new ::std::string;
  }
  notes_->assign(value);
}
inline void SetExperimentMetadataRequestMsg::set_notes(const char* value, size_t size) {
  set_has_notes();
  if (notes_ == &::google::protobuf::internal::kEmptyString) {
    notes_ = new ::std::string;
  }
  notes_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SetExperimentMetadataRequestMsg::mutable_notes() {
  set_has_notes();
  if (notes_ == &::google::protobuf::internal::kEmptyString) {
    notes_ = new ::std::string;
  }
  return notes_;
}
inline ::std::string* SetExperimentMetadataRequestMsg::release_notes() {
  clear_has_notes();
  if (notes_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = notes_;
    notes_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SetExperimentMetadataRequestMsg::set_allocated_notes(::std::string* notes) {
  if (notes_ != &::google::protobuf::internal::kEmptyString) {
    delete notes_;
  }
  if (notes) {
    set_has_notes();
    notes_ = notes;
  } else {
    clear_has_notes();
    notes_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// SetExperimentMetadataResponseMsg

// required .protobuf.SetExperimentMetadataResponseMsg.ResponseType response_type = 1;
inline bool SetExperimentMetadataResponseMsg::has_response_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetExperimentMetadataResponseMsg::set_has_response_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetExperimentMetadataResponseMsg::clear_has_response_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetExperimentMetadataResponseMsg::clear_response_type() {
  response_type_ = 1;
  clear_has_response_type();
}
inline ::protobuf::SetExperimentMetadataResponseMsg_ResponseType SetExperimentMetadataResponseMsg::response_type() const {
  return static_cast< ::protobuf::SetExperimentMetadataResponseMsg_ResponseType >(response_type_);
}
inline void SetExperimentMetadataResponseMsg::set_response_type(::protobuf::SetExperimentMetadataResponseMsg_ResponseType value) {
  assert(::protobuf::SetExperimentMetadataResponseMsg_ResponseType_IsValid(value));
  set_has_response_type();
  response_type_ = value;
}

// -------------------------------------------------------------------

// ExperimentMetadataMsg_MetadataStruct

// repeated string tags = 1;
inline int ExperimentMetadataMsg_MetadataStruct::tags_size() const {
  return tags_.size();
}
inline void ExperimentMetadataMsg_MetadataStruct::clear_tags() {
  tags_.Clear();
}
inline const ::std::string& ExperimentMetadataMsg_MetadataStruct::tags(int index) const {
  return tags_.Get(index);
}
inline ::std::string* ExperimentMetadataMsg_MetadataStruct::mutable_tags(int index) {
  return tags_.Mutable(index);
}
inline void ExperimentMetadataMsg_MetadataStruct::set_tags(int index, const ::std::string& value) {
  tags_.Mutable(index)->assign(value);
}
inline void ExperimentMetadataMsg_MetadataStruct::set_tags(int index, const char* value) {
  tags_.Mutable(index)->assign(value);
}
inline void ExperimentMetadataMsg_MetadataStruct::set_tags(int index, const char* value, size_t size) {
  tags_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ExperimentMetadataMsg_MetadataStruct::add_tags() {
  return tags_.Add();
}
inline void ExperimentMetadataMsg_MetadataStruct::add_tags(const ::std::string& value) {
  tags_.Add()->assign(value);
}
inline void ExperimentMetadataMsg_MetadataStruct::add_tags(const char* value) {
  tags_.Add()->assign(value);
}
inline void ExperimentMetadataMsg_MetadataStruct::add_tags(const char* value, size_t size) {
  tags_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ExperimentMetadataMsg_MetadataStruct::tags() const {
  return tags_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ExperimentMetadataMsg_MetadataStruct::mutable_tags() {
  return &tags_;
}

// optional string notes = 2;
inline bool ExperimentMetadataMsg_MetadataStruct::has_notes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExperimentMetadataMsg_MetadataStruct::set_has_notes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExperimentMetadataMsg_MetadataStruct::clear_has_notes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExperimentMetadataMsg_MetadataStruct::clear_notes() {
  if (notes_ != &::google::protobuf::internal::kEmptyString) {
    notes_->clear();
  }
  clear_has_notes();
}
inline const ::std::string& ExperimentMetadataMsg_MetadataStruct::notes() const {
  return *notes_;
}
inline void ExperimentMetadataMsg_MetadataStruct::set_notes(const ::std::string& value) {
  set_has_notes();
  if (notes_ == &::google::protobuf::internal::kEmptyString) {
    notes_ = new ::std::string;
  }
  notes_->assign(value);
}
inline void ExperimentMetadataMsg_MetadataStruct::set_notes(const char* value) {
  set_has_notes();
  if (notes_ == &::google::protobuf::internal::kEmptyString) {
    notes_ = new ::std::string;
  }
  notes_->assign(value);
}
inline void ExperimentMetadataMsg_MetadataStruct::set_notes(const char* value, size_t size) {
  set_has_notes();
  if (notes_ == &::google::protobuf::internal::kEmptyString) {
    notes_ = new ::std::string;
  }
  notes_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ExperimentMetadataMsg_MetadataStruct::mutable_notes() {
  set_has_notes();
  if (notes_ == &::google::protobuf::internal::kEmptyString) {
    notes_ = new ::std::string;
  }
  return notes_;
}
inline ::std::string* ExperimentMetadataMsg_MetadataStruct::release_notes() {
  clear_has_notes();
  if (notes_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = notes_;
    notes_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ExperimentMetadataMsg_MetadataStruct::set_allocated_notes(::std::string* notes) {
  if (notes_ != &::google::protobuf::internal::kEmptyString) {
    delete notes_;
  }
  if (notes) {
    set_has_notes();
    notes_ = notes;
  } else {
    clear_has_notes();
    notes_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .protobuf.SensorConfiguration sensor_configurations = 3;
inline int ExperimentMetadataMsg_MetadataStruct::sensor_configurations_size() const {
  return sensor_configurations_.size();
}
inline void ExperimentMetadataMsg_MetadataStruct::clear_sensor_configurations() {
  sensor_configurations_.Clear();
}
inline const ::protobuf::SensorConfiguration& ExperimentMetadataMsg_MetadataStruct::sensor_configurations(int index) const {
  return sensor_configurations_.Get(index);
}
inline ::protobuf::SensorConfiguration* ExperimentMetadataMsg_MetadataStruct::mutable_sensor_configurations(int index) {
  return sensor_configurations_.Mutable(index);
}
inline ::protobuf::SensorConfiguration* ExperimentMetadataMsg_MetadataStruct::add_sensor_configurations() {
  return sensor_configurations_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protobuf::SensorConfiguration >&
ExperimentMetadataMsg_MetadataStruct::sensor_configurations() const {
  return sensor_configurations_;
}
inline ::google::protobuf::RepeatedPtrField< ::protobuf::SensorConfiguration >*
ExperimentMetadataMsg_MetadataStruct::mutable_sensor_configurations() {
  return &sensor_configurations_;
}

// -------------------------------------------------------------------

// ExperimentMetadataMsg

// required string experiment_name = 1;
inline bool ExperimentMetadataMsg::has_experiment_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExperimentMetadataMsg::set_has_experiment_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExperimentMetadataMsg::clear_has_experiment_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExperimentMetadataMsg::clear_experiment_name() {
  if (experiment_name_ != &::google::protobuf::internal::kEmptyString) {
    experiment_name_->clear();
  }
  clear_has_experiment_name();
}
inline const ::std::string& ExperimentMetadataMsg::experiment_name() const {
  return *experiment_name_;
}
inline void ExperimentMetadataMsg::set_experiment_name(const ::std::string& value) {
  set_has_experiment_name();
  if (experiment_name_ == &::google::protobuf::internal::kEmptyString) {
    experiment_name_ = new ::std::string;
  }
  experiment_name_->assign(value);
}
inline void ExperimentMetadataMsg::set_experiment_name(const char* value) {
  set_has_experiment_name();
  if (experiment_name_ == &::google::protobuf::internal::kEmptyString) {
    experiment_name_ = new ::std::string;
  }
  experiment_name_->assign(value);
}
inline void ExperimentMetadataMsg::set_experiment_name(const char* value, size_t size) {
  set_has_experiment_name();
  if (experiment_name_ == &::google::protobuf::internal::kEmptyString) {
    experiment_name_ = new ::std::string;
  }
  experiment_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ExperimentMetadataMsg::mutable_experiment_name() {
  set_has_experiment_name();
  if (experiment_name_ == &::google::protobuf::internal::kEmptyString) {
    experiment_name_ = new ::std::string;
  }
  return experiment_name_;
}
inline ::std::string* ExperimentMetadataMsg::release_experiment_name() {
  clear_has_experiment_name();
  if (experiment_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = experiment_name_;
    experiment_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ExperimentMetadataMsg::set_allocated_experiment_name(::std::string* experiment_name) {
  if (experiment_name_ != &::google::protobuf::internal::kEmptyString) {
    delete experiment_name_;
  }
  if (experiment_name) {
    set_has_experiment_name();
    experiment_name_ = experiment_name;
  } else {
    clear_has_experiment_name();
    experiment_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required .protobuf.ExperimentMetadataMsg.MetadataStruct metadata = 2;
inline bool ExperimentMetadataMsg::has_metadata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExperimentMetadataMsg::set_has_metadata() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExperimentMetadataMsg::clear_has_metadata() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExperimentMetadataMsg::clear_metadata() {
  if (metadata_ != NULL) metadata_->::protobuf::ExperimentMetadataMsg_MetadataStruct::Clear();
  clear_has_metadata();
}
inline const ::protobuf::ExperimentMetadataMsg_MetadataStruct& ExperimentMetadataMsg::metadata() const {
  return metadata_ != NULL ? *metadata_ : *default_instance_->metadata_;
}
inline ::protobuf::ExperimentMetadataMsg_MetadataStruct* ExperimentMetadataMsg::mutable_metadata() {
  set_has_metadata();
  if (metadata_ == NULL) metadata_ = new ::protobuf::ExperimentMetadataMsg_MetadataStruct;
  return metadata_;
}
inline ::protobuf::ExperimentMetadataMsg_MetadataStruct* ExperimentMetadataMsg::release_metadata() {
  clear_has_metadata();
  ::protobuf::ExperimentMetadataMsg_MetadataStruct* temp = metadata_;
  metadata_ = NULL;
  return temp;
}
inline void ExperimentMetadataMsg::set_allocated_metadata(::protobuf::ExperimentMetadataMsg_MetadataStruct* metadata) {
  delete metadata_;
  metadata_ = metadata;
  if (metadata) {
    set_has_metadata();
  } else {
    clear_has_metadata();
  }
}

// -------------------------------------------------------------------

// DebugMsg

// required string debug_message = 1;
inline bool DebugMsg::has_debug_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DebugMsg::set_has_debug_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DebugMsg::clear_has_debug_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DebugMsg::clear_debug_message() {
  if (debug_message_ != &::google::protobuf::internal::kEmptyString) {
    debug_message_->clear();
  }
  clear_has_debug_message();
}
inline const ::std::string& DebugMsg::debug_message() const {
  return *debug_message_;
}
inline void DebugMsg::set_debug_message(const ::std::string& value) {
  set_has_debug_message();
  if (debug_message_ == &::google::protobuf::internal::kEmptyString) {
    debug_message_ = new ::std::string;
  }
  debug_message_->assign(value);
}
inline void DebugMsg::set_debug_message(const char* value) {
  set_has_debug_message();
  if (debug_message_ == &::google::protobuf::internal::kEmptyString) {
    debug_message_ = new ::std::string;
  }
  debug_message_->assign(value);
}
inline void DebugMsg::set_debug_message(const char* value, size_t size) {
  set_has_debug_message();
  if (debug_message_ == &::google::protobuf::internal::kEmptyString) {
    debug_message_ = new ::std::string;
  }
  debug_message_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DebugMsg::mutable_debug_message() {
  set_has_debug_message();
  if (debug_message_ == &::google::protobuf::internal::kEmptyString) {
    debug_message_ = new ::std::string;
  }
  return debug_message_;
}
inline ::std::string* DebugMsg::release_debug_message() {
  clear_has_debug_message();
  if (debug_message_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = debug_message_;
    debug_message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DebugMsg::set_allocated_debug_message(::std::string* debug_message) {
  if (debug_message_ != &::google::protobuf::internal::kEmptyString) {
    delete debug_message_;
  }
  if (debug_message) {
    set_has_debug_message();
    debug_message_ = debug_message;
  } else {
    clear_has_debug_message();
    debug_message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ErrorMsg

// required .protobuf.ErrorMsg.ErrorType error_type = 1;
inline bool ErrorMsg::has_error_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ErrorMsg::set_has_error_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ErrorMsg::clear_has_error_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ErrorMsg::clear_error_type() {
  error_type_ = 1;
  clear_has_error_type();
}
inline ::protobuf::ErrorMsg_ErrorType ErrorMsg::error_type() const {
  return static_cast< ::protobuf::ErrorMsg_ErrorType >(error_type_);
}
inline void ErrorMsg::set_error_type(::protobuf::ErrorMsg_ErrorType value) {
  assert(::protobuf::ErrorMsg_ErrorType_IsValid(value));
  set_has_error_type();
  error_type_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protobuf::GeneralMsg_SubType>() {
  return ::protobuf::GeneralMsg_SubType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protobuf::SetDynamicEventResponseMsg_ResponseType>() {
  return ::protobuf::SetDynamicEventResponseMsg_ResponseType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protobuf::SettingsResponseMsg_ResponseType>() {
  return ::protobuf::SettingsResponseMsg_ResponseType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protobuf::SensorStatusMsg_SensorStatusType>() {
  return ::protobuf::SensorStatusMsg_SensorStatusType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protobuf::SensorStatusMsg_AttributeStatusType>() {
  return ::protobuf::SensorStatusMsg_AttributeStatusType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protobuf::StatusMsg_StatusType>() {
  return ::protobuf::StatusMsg_StatusType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protobuf::CreateNewProjectResponseMsg_ResponseType>() {
  return ::protobuf::CreateNewProjectResponseMsg_ResponseType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protobuf::RenameProjectResponseMsg_ResponseType>() {
  return ::protobuf::RenameProjectResponseMsg_ResponseType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protobuf::RemoveProjectResponseMsg_ResponseType>() {
  return ::protobuf::RemoveProjectResponseMsg_ResponseType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protobuf::SetActiveProjectResponseMsg_ResponseType>() {
  return ::protobuf::SetActiveProjectResponseMsg_ResponseType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protobuf::SetProjectMetadataResponseMsg_ResponseType>() {
  return ::protobuf::SetProjectMetadataResponseMsg_ResponseType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protobuf::ExperimentDataCollectionStartResponseMsg_ResponseType>() {
  return ::protobuf::ExperimentDataCollectionStartResponseMsg_ResponseType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protobuf::ExperimentDataCollectionStopResponseMsg_ResponseType>() {
  return ::protobuf::ExperimentDataCollectionStopResponseMsg_ResponseType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protobuf::RenameExperimentResponseMsg_ResponseType>() {
  return ::protobuf::RenameExperimentResponseMsg_ResponseType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protobuf::RemoveExperimentResponseMsg_ResponseType>() {
  return ::protobuf::RemoveExperimentResponseMsg_ResponseType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protobuf::ExperimentPlaybackStartResponseMsg_ResponseType>() {
  return ::protobuf::ExperimentPlaybackStartResponseMsg_ResponseType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protobuf::ExperimentPlaybackStopResponseMsg_ResponseType>() {
  return ::protobuf::ExperimentPlaybackStopResponseMsg_ResponseType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protobuf::SetExperimentMetadataResponseMsg_ResponseType>() {
  return ::protobuf::SetExperimentMetadataResponseMsg_ResponseType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protobuf::ErrorMsg_ErrorType>() {
  return ::protobuf::ErrorMsg_ErrorType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_protocol_2eproto__INCLUDED
